{
	"id": "a1e228f63d3ad3df4b389907b7b22ea9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"FinalProject2/GameCoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.22;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract GameCoin is ERC20, Ownable {\n    uint256 public sellRate = 10; // Example: 1 GC = 0.001 ETH\n    uint256 public buyRate = 6;   // Example: 1 GC = 0.00125 ETH\n\n    mapping(address => User) private users;\n\n    struct User {\n        string username;\n        string email;\n        string bio;\n    }\n\n    constructor() ERC20(\"Namazbek's Token\", \"NB\") Ownable(msg.sender){\n        _mint(msg.sender, 1000 * 10**decimals()); // Mint initial supply\n    }\n\n    function registerUser(string memory username, string memory email, string memory bio) public {\n        require(bytes(username).length > 0, \"Username must not be empty\");\n        require(bytes(email).length > 0, \"Email must not be empty\");\n        users[msg.sender] = User(username, email, bio);\n    }\n\n    function getUserInfo(address account) public view returns (string memory, string memory, string memory) {\n        User memory user = users[account];\n        return (user.username, user.email, user.bio);\n    }\n\n    function buy(uint256 gcAmount) public payable {\n        uint256 requiredETH = (gcAmount * sellRate) / 10**decimals();\n        require(msg.value == requiredETH, \"Incorrect ETH amount sent\");\n        _mint(msg.sender, gcAmount); // Mint the correct amount of GC\n    }\n\n    function sell(uint256 gcAmount) public {\n        uint256 ethAmount = (gcAmount * buyRate) / 10**decimals();\n        require(balanceOf(msg.sender) >= gcAmount, \"Insufficient NB balance\");\n        _burn(msg.sender, gcAmount);\n        payable(msg.sender).transfer(ethAmount);\n    }\n\n    function send(address to, uint256 gcAmount) public {\n        _transfer(msg.sender, to, gcAmount);\n    }\n\n    function sendToOwner(uint256 amount) public onlyOwner {\n        _transfer(msg.sender, owner(), amount);\n    }\n\n    function setRates(uint256 _sellRate, uint256 _buyRate) public onlyOwner {\n        sellRate = _sellRate;\n        buyRate = _buyRate;\n    }\n\n    receive() external payable {}\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"FinalProject2/GameCoin.sol": {
				"GameCoin": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gcAmount",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getUserInfo",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "username",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "email",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "bio",
									"type": "string"
								}
							],
							"name": "registerUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "gcAmount",
									"type": "uint256"
								}
							],
							"name": "sell",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "gcAmount",
									"type": "uint256"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "sendToOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_sellRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_buyRate",
									"type": "uint256"
								}
							],
							"name": "setRates",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"FinalProject2/GameCoin.sol\":168:2100  contract GameCoin is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"FinalProject2/GameCoin.sol\":236:238  10 */\n  0x0a\n    /* \"FinalProject2/GameCoin.sol\":210:238  uint256 public sellRate = 10 */\n  0x06\n  sstore\n    /* \"FinalProject2/GameCoin.sol\":298:299  6 */\n  0x06\n    /* \"FinalProject2/GameCoin.sol\":273:299  uint256 public buyRate = 6 */\n  0x07\n  sstore\n    /* \"FinalProject2/GameCoin.sol\":476:621  constructor() ERC20(\"Namazbek's Token\", \"NB\") Ownable(msg.sender){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"FinalProject2/GameCoin.sol\":530:540  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x4e616d617a62656b277320546f6b656e00000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x4e42000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"FinalProject2/GameCoin.sol\":551:591  _mint(msg.sender, 1000 * 10**decimals()) */\n  tag_16\n    /* \"FinalProject2/GameCoin.sol\":557:567  msg.sender */\n  caller\n    /* \"FinalProject2/GameCoin.sol\":580:590  decimals() */\n  tag_17\n    /* \"FinalProject2/GameCoin.sol\":580:588  decimals */\n  shl(0x20, tag_18)\n    /* \"FinalProject2/GameCoin.sol\":580:590  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"FinalProject2/GameCoin.sol\":576:578  10 */\n  0x0a\n    /* \"FinalProject2/GameCoin.sol\":576:590  10**decimals() */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"FinalProject2/GameCoin.sol\":569:573  1000 */\n  0x03e8\n    /* \"FinalProject2/GameCoin.sol\":569:590  1000 * 10**decimals() */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"FinalProject2/GameCoin.sol\":551:556  _mint */\n  shl(0x20, tag_23)\n    /* \"FinalProject2/GameCoin.sol\":551:591  _mint(msg.sender, 1000 * 10**decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"FinalProject2/GameCoin.sol\":168:2100  contract GameCoin is ERC20, Ownable {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_31)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_36)\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_41)\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_44:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_45:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_46:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_47:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_78\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_78:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_80\n  tag_46\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":714:798   */\ntag_79:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_48:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_49:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_50:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_51:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_85\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_50\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1429:1468   */\n  tag_86\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_50\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_52:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_53:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_54:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_90\n    /* \"#utility.yul\":1818:1852   */\n  tag_91\n    /* \"#utility.yul\":1827:1851   */\n  tag_92\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_52\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1818:1852   */\n  tag_53\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1800:1853   */\n  tag_52\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_55:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_56:\n    /* \"#utility.yul\":2056:2095   */\n  tag_95\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_54\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2117:2208   */\n  tag_96\n    /* \"#utility.yul\":2166:2207   */\n  tag_97\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_55\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_51\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_57:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_58:\n    /* \"#utility.yul\":2377:2409   */\n  tag_100\n  tag_57\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2418:2483   */\n  tag_101\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_56\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_59:\n    /* \"#utility.yul\":2555:2675   */\ntag_103:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_106\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_58\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_103)\ntag_105:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_60:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_109\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_48\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2906:2935   */\n  tag_110\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_49\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_111:\n    /* \"#utility.yul\":3133:3213   */\n  tag_112\n    /* \"#utility.yul\":3189:3211   */\n  tag_113\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_49\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_59\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_108:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_61:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_62:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_116\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_61\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_63:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_118\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_62\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_120\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_44\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_122\n  tag_45\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4038:4094   */\ntag_121:\n    /* \"#utility.yul\":4118:4156   */\n  tag_123\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_47\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4203:4270   */\n  tag_124\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_60\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_126\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_127:\n    /* \"#utility.yul\":5144:5211   */\n  tag_128\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_63\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_125)\n    /* \"#utility.yul\":4365:4983   */\ntag_126:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_129\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_48\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_130:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_130)\ntag_132:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_134\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_62\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_133:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_125:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_64:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_65:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_137\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_64\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_66:\n    /* \"#utility.yul\":5555:5579   */\n  tag_139\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_65\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_141\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_66\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_67:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6108   */\ntag_68:\n    /* \"#utility.yul\":6048:6056   */\n  0x00\n    /* \"#utility.yul\":6095:6100   */\n  dup2\n    /* \"#utility.yul\":6092:6093   */\n  0x01\n    /* \"#utility.yul\":6088:6101   */\n  shr\n    /* \"#utility.yul\":6067:6101   */\n  swap1\n  pop\n    /* \"#utility.yul\":6006:6108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6114:6962   */\ntag_69:\n    /* \"#utility.yul\":6175:6180   */\n  0x00\n    /* \"#utility.yul\":6182:6186   */\n  dup1\n    /* \"#utility.yul\":6206:6212   */\n  dup3\n    /* \"#utility.yul\":6197:6212   */\n  swap2\n  pop\n    /* \"#utility.yul\":6230:6235   */\n  dup4\n    /* \"#utility.yul\":6221:6235   */\n  swap1\n  pop\n    /* \"#utility.yul\":6244:6956   */\ntag_145:\n    /* \"#utility.yul\":6265:6266   */\n  0x01\n    /* \"#utility.yul\":6255:6263   */\n  dup6\n    /* \"#utility.yul\":6252:6267   */\n  gt\n    /* \"#utility.yul\":6244:6956   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":6360:6364   */\n  dup1\n    /* \"#utility.yul\":6355:6358   */\n  dup7\n    /* \"#utility.yul\":6351:6365   */\n  div\n    /* \"#utility.yul\":6345:6349   */\n  dup2\n    /* \"#utility.yul\":6342:6366   */\n  gt\n    /* \"#utility.yul\":6339:6389   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6369:6387   */\n  tag_149\n  tag_67\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6339:6389   */\ntag_148:\n    /* \"#utility.yul\":6419:6420   */\n  0x01\n    /* \"#utility.yul\":6409:6417   */\n  dup6\n    /* \"#utility.yul\":6405:6421   */\n  and\n    /* \"#utility.yul\":6402:6853   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":6834:6838   */\n  dup1\n    /* \"#utility.yul\":6827:6832   */\n  dup3\n    /* \"#utility.yul\":6823:6839   */\n  mul\n    /* \"#utility.yul\":6814:6839   */\n  swap2\n  pop\n    /* \"#utility.yul\":6402:6853   */\ntag_150:\n    /* \"#utility.yul\":6884:6888   */\n  dup1\n    /* \"#utility.yul\":6878:6882   */\n  dup2\n    /* \"#utility.yul\":6874:6889   */\n  mul\n    /* \"#utility.yul\":6866:6889   */\n  swap1\n  pop\n    /* \"#utility.yul\":6914:6946   */\n  tag_151\n    /* \"#utility.yul\":6937:6945   */\n  dup6\n    /* \"#utility.yul\":6914:6946   */\n  tag_68\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6902:6946   */\n  swap5\n  pop\n    /* \"#utility.yul\":6244:6956   */\n  jump(tag_145)\ntag_147:\n    /* \"#utility.yul\":6114:6962   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6968:8041   */\ntag_70:\n    /* \"#utility.yul\":7022:7027   */\n  0x00\n    /* \"#utility.yul\":7213:7221   */\n  dup3\n    /* \"#utility.yul\":7203:7243   */\n  tag_153\n  jumpi\n    /* \"#utility.yul\":7234:7235   */\n  0x01\n    /* \"#utility.yul\":7225:7235   */\n  swap1\n  pop\n    /* \"#utility.yul\":7236:7241   */\n  jump(tag_152)\n    /* \"#utility.yul\":7203:7243   */\ntag_153:\n    /* \"#utility.yul\":7262:7266   */\n  dup2\n    /* \"#utility.yul\":7252:7288   */\n  tag_154\n  jumpi\n    /* \"#utility.yul\":7279:7280   */\n  0x00\n    /* \"#utility.yul\":7270:7280   */\n  swap1\n  pop\n    /* \"#utility.yul\":7281:7286   */\n  jump(tag_152)\n    /* \"#utility.yul\":7252:7288   */\ntag_154:\n    /* \"#utility.yul\":7348:7352   */\n  dup2\n    /* \"#utility.yul\":7396:7397   */\n  0x01\n    /* \"#utility.yul\":7391:7418   */\n  dup2\n  eq\n  tag_156\n  jumpi\n    /* \"#utility.yul\":7432:7433   */\n  0x02\n    /* \"#utility.yul\":7427:7618   */\n  dup2\n  eq\n  tag_157\n  jumpi\n    /* \"#utility.yul\":7341:7618   */\n  jump(tag_155)\n    /* \"#utility.yul\":7391:7418   */\ntag_156:\n    /* \"#utility.yul\":7409:7410   */\n  0x01\n    /* \"#utility.yul\":7400:7410   */\n  swap2\n  pop\n    /* \"#utility.yul\":7411:7416   */\n  pop\n  jump(tag_152)\n    /* \"#utility.yul\":7427:7618   */\ntag_157:\n    /* \"#utility.yul\":7472:7475   */\n  0xff\n    /* \"#utility.yul\":7462:7470   */\n  dup5\n    /* \"#utility.yul\":7459:7476   */\n  gt\n    /* \"#utility.yul\":7456:7499   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":7479:7497   */\n  tag_159\n  tag_67\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7456:7499   */\ntag_158:\n    /* \"#utility.yul\":7528:7536   */\n  dup4\n    /* \"#utility.yul\":7525:7526   */\n  0x02\n    /* \"#utility.yul\":7521:7537   */\n  exp\n    /* \"#utility.yul\":7512:7537   */\n  swap2\n  pop\n    /* \"#utility.yul\":7563:7566   */\n  dup5\n    /* \"#utility.yul\":7556:7561   */\n  dup3\n    /* \"#utility.yul\":7553:7567   */\n  gt\n    /* \"#utility.yul\":7550:7590   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":7570:7588   */\n  tag_161\n  tag_67\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7550:7590   */\ntag_160:\n    /* \"#utility.yul\":7603:7608   */\n  pop\n  jump(tag_152)\n    /* \"#utility.yul\":7341:7618   */\ntag_155:\n  pop\n    /* \"#utility.yul\":7727:7729   */\n  0x20\n    /* \"#utility.yul\":7717:7725   */\n  dup4\n    /* \"#utility.yul\":7714:7730   */\n  lt\n    /* \"#utility.yul\":7708:7711   */\n  0x0133\n    /* \"#utility.yul\":7702:7706   */\n  dup4\n    /* \"#utility.yul\":7699:7712   */\n  lt\n    /* \"#utility.yul\":7695:7731   */\n  and\n    /* \"#utility.yul\":7677:7679   */\n  0x4e\n    /* \"#utility.yul\":7667:7675   */\n  dup5\n    /* \"#utility.yul\":7664:7680   */\n  lt\n    /* \"#utility.yul\":7659:7661   */\n  0x0b\n    /* \"#utility.yul\":7653:7657   */\n  dup5\n    /* \"#utility.yul\":7650:7662   */\n  lt\n    /* \"#utility.yul\":7646:7681   */\n  and\n    /* \"#utility.yul\":7630:7741   */\n  or\n    /* \"#utility.yul\":7627:7873   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":7783:7791   */\n  dup3\n    /* \"#utility.yul\":7777:7781   */\n  dup3\n    /* \"#utility.yul\":7773:7792   */\n  exp\n    /* \"#utility.yul\":7764:7792   */\n  swap1\n  pop\n    /* \"#utility.yul\":7818:7821   */\n  dup4\n    /* \"#utility.yul\":7811:7816   */\n  dup2\n    /* \"#utility.yul\":7808:7822   */\n  gt\n    /* \"#utility.yul\":7805:7845   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":7825:7843   */\n  tag_164\n  tag_67\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7805:7845   */\ntag_163:\n    /* \"#utility.yul\":7858:7863   */\n  jump(tag_152)\n    /* \"#utility.yul\":7627:7873   */\ntag_162:\n    /* \"#utility.yul\":7898:7940   */\n  tag_165\n    /* \"#utility.yul\":7936:7939   */\n  dup5\n    /* \"#utility.yul\":7926:7934   */\n  dup5\n    /* \"#utility.yul\":7920:7924   */\n  dup5\n    /* \"#utility.yul\":7917:7918   */\n  0x01\n    /* \"#utility.yul\":7898:7940   */\n  tag_69\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7883:7940   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7972:7976   */\n  dup2\n    /* \"#utility.yul\":7967:7970   */\n  dup5\n    /* \"#utility.yul\":7963:7977   */\n  div\n    /* \"#utility.yul\":7956:7961   */\n  dup2\n    /* \"#utility.yul\":7953:7978   */\n  gt\n    /* \"#utility.yul\":7950:8001   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":7981:7999   */\n  tag_167\n  tag_67\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7950:8001   */\ntag_166:\n    /* \"#utility.yul\":8030:8034   */\n  dup2\n    /* \"#utility.yul\":8023:8028   */\n  dup2\n    /* \"#utility.yul\":8019:8035   */\n  mul\n    /* \"#utility.yul\":8010:8035   */\n  swap1\n  pop\n    /* \"#utility.yul\":6968:8041   */\ntag_152:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8047:8133   */\ntag_71:\n    /* \"#utility.yul\":8082:8089   */\n  0x00\n    /* \"#utility.yul\":8122:8126   */\n  0xff\n    /* \"#utility.yul\":8115:8120   */\n  dup3\n    /* \"#utility.yul\":8111:8127   */\n  and\n    /* \"#utility.yul\":8100:8127   */\n  swap1\n  pop\n    /* \"#utility.yul\":8047:8133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8139:8420   */\ntag_20:\n    /* \"#utility.yul\":8197:8202   */\n  0x00\n    /* \"#utility.yul\":8221:8244   */\n  tag_170\n    /* \"#utility.yul\":8239:8243   */\n  dup3\n    /* \"#utility.yul\":8221:8244   */\n  tag_52\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":8213:8244   */\n  swap2\n  pop\n    /* \"#utility.yul\":8265:8290   */\n  tag_171\n    /* \"#utility.yul\":8281:8289   */\n  dup4\n    /* \"#utility.yul\":8265:8290   */\n  tag_71\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8253:8290   */\n  swap3\n  pop\n    /* \"#utility.yul\":8309:8413   */\n  tag_172\n    /* \"#utility.yul\":8346:8412   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8336:8344   */\n  dup5\n    /* \"#utility.yul\":8330:8334   */\n  dup5\n    /* \"#utility.yul\":8309:8413   */\n  tag_70\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8300:8413   */\n  swap1\n  pop\n    /* \"#utility.yul\":8139:8420   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8426:8836   */\ntag_22:\n    /* \"#utility.yul\":8466:8473   */\n  0x00\n    /* \"#utility.yul\":8489:8509   */\n  tag_174\n    /* \"#utility.yul\":8507:8508   */\n  dup3\n    /* \"#utility.yul\":8489:8509   */\n  tag_52\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8484:8509   */\n  swap2\n  pop\n    /* \"#utility.yul\":8523:8543   */\n  tag_175\n    /* \"#utility.yul\":8541:8542   */\n  dup4\n    /* \"#utility.yul\":8523:8543   */\n  tag_52\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8518:8543   */\n  swap3\n  pop\n    /* \"#utility.yul\":8578:8579   */\n  dup3\n    /* \"#utility.yul\":8575:8576   */\n  dup3\n    /* \"#utility.yul\":8571:8580   */\n  mul\n    /* \"#utility.yul\":8600:8630   */\n  tag_176\n    /* \"#utility.yul\":8618:8629   */\n  dup2\n    /* \"#utility.yul\":8600:8630   */\n  tag_52\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8589:8630   */\n  swap2\n  pop\n    /* \"#utility.yul\":8779:8780   */\n  dup3\n    /* \"#utility.yul\":8770:8777   */\n  dup3\n    /* \"#utility.yul\":8766:8781   */\n  div\n    /* \"#utility.yul\":8763:8764   */\n  dup5\n    /* \"#utility.yul\":8760:8782   */\n  eq\n    /* \"#utility.yul\":8740:8741   */\n  dup4\n    /* \"#utility.yul\":8733:8742   */\n  iszero\n    /* \"#utility.yul\":8713:8796   */\n  or\n    /* \"#utility.yul\":8690:8829   */\n  tag_177\n  jumpi\n    /* \"#utility.yul\":8809:8827   */\n  tag_178\n  tag_67\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8690:8829   */\ntag_177:\n    /* \"#utility.yul\":8474:8836   */\n  pop\n    /* \"#utility.yul\":8426:8836   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8842:9033   */\ntag_35:\n    /* \"#utility.yul\":8882:8885   */\n  0x00\n    /* \"#utility.yul\":8901:8921   */\n  tag_180\n    /* \"#utility.yul\":8919:8920   */\n  dup3\n    /* \"#utility.yul\":8901:8921   */\n  tag_52\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8896:8921   */\n  swap2\n  pop\n    /* \"#utility.yul\":8935:8955   */\n  tag_181\n    /* \"#utility.yul\":8953:8954   */\n  dup4\n    /* \"#utility.yul\":8935:8955   */\n  tag_52\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8930:8955   */\n  swap3\n  pop\n    /* \"#utility.yul\":8978:8979   */\n  dup3\n    /* \"#utility.yul\":8975:8976   */\n  dup3\n    /* \"#utility.yul\":8971:8980   */\n  add\n    /* \"#utility.yul\":8964:8980   */\n  swap1\n  pop\n    /* \"#utility.yul\":8999:9002   */\n  dup1\n    /* \"#utility.yul\":8996:8997   */\n  dup3\n    /* \"#utility.yul\":8993:9003   */\n  gt\n    /* \"#utility.yul\":8990:9026   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":9006:9024   */\n  tag_183\n  tag_67\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":8990:9026   */\ntag_182:\n    /* \"#utility.yul\":8842:9033   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9039:9157   */\ntag_72:\n    /* \"#utility.yul\":9126:9150   */\n  tag_185\n    /* \"#utility.yul\":9144:9149   */\n  dup2\n    /* \"#utility.yul\":9126:9150   */\n  tag_52\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":9121:9124   */\n  dup3\n    /* \"#utility.yul\":9114:9151   */\n  mstore\n    /* \"#utility.yul\":9039:9157   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9163:9605   */\ntag_39:\n    /* \"#utility.yul\":9312:9316   */\n  0x00\n    /* \"#utility.yul\":9350:9352   */\n  0x60\n    /* \"#utility.yul\":9339:9348   */\n  dup3\n    /* \"#utility.yul\":9335:9353   */\n  add\n    /* \"#utility.yul\":9327:9353   */\n  swap1\n  pop\n    /* \"#utility.yul\":9363:9434   */\n  tag_187\n    /* \"#utility.yul\":9431:9432   */\n  0x00\n    /* \"#utility.yul\":9420:9429   */\n  dup4\n    /* \"#utility.yul\":9416:9433   */\n  add\n    /* \"#utility.yul\":9407:9413   */\n  dup7\n    /* \"#utility.yul\":9363:9434   */\n  tag_66\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":9444:9516   */\n  tag_188\n    /* \"#utility.yul\":9512:9514   */\n  0x20\n    /* \"#utility.yul\":9501:9510   */\n  dup4\n    /* \"#utility.yul\":9497:9515   */\n  add\n    /* \"#utility.yul\":9488:9494   */\n  dup6\n    /* \"#utility.yul\":9444:9516   */\n  tag_72\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9526:9598   */\n  tag_189\n    /* \"#utility.yul\":9594:9596   */\n  0x40\n    /* \"#utility.yul\":9583:9592   */\n  dup4\n    /* \"#utility.yul\":9579:9597   */\n  add\n    /* \"#utility.yul\":9570:9576   */\n  dup5\n    /* \"#utility.yul\":9526:9598   */\n  tag_72\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9163:9605   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9611:9833   */\ntag_43:\n    /* \"#utility.yul\":9704:9708   */\n  0x00\n    /* \"#utility.yul\":9742:9744   */\n  0x20\n    /* \"#utility.yul\":9731:9740   */\n  dup3\n    /* \"#utility.yul\":9727:9745   */\n  add\n    /* \"#utility.yul\":9719:9745   */\n  swap1\n  pop\n    /* \"#utility.yul\":9755:9826   */\n  tag_191\n    /* \"#utility.yul\":9823:9824   */\n  0x00\n    /* \"#utility.yul\":9812:9821   */\n  dup4\n    /* \"#utility.yul\":9808:9825   */\n  add\n    /* \"#utility.yul\":9799:9805   */\n  dup5\n    /* \"#utility.yul\":9755:9826   */\n  tag_72\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":9611:9833   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"FinalProject2/GameCoin.sol\":168:2100  contract GameCoin is ERC20, Ownable {... */\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"FinalProject2/GameCoin.sol\":168:2100  contract GameCoin is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xd637dcfa\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xd637dcfa\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd96a094a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe4849b32\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xfc37987b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xac6af280\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcb797836\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd0679d34\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x6217229b\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x6217229b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6386c1c7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FinalProject2/GameCoin.sol\":210:238  uint256 public sellRate = 10 */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FinalProject2/GameCoin.sol\":933:1141  function getUserInfo(address account) public view returns (string memory, string memory, string memory) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FinalProject2/GameCoin.sol\":1926:2063  function setRates(uint256 _sellRate, uint256 _buyRate) public onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"FinalProject2/GameCoin.sol\":1811:1920  function sendToOwner(uint256 amount) public onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      stop\n        /* \"FinalProject2/GameCoin.sol\":1702:1805  function send(address to, uint256 gcAmount) public {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"FinalProject2/GameCoin.sol\":627:927  function registerUser(string memory username, string memory email, string memory bio) public {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n    tag_105:\n      stop\n        /* \"FinalProject2/GameCoin.sol\":1147:1412  function buy(uint256 gcAmount) public payable {... */\n    tag_19:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      tag_116\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"FinalProject2/GameCoin.sol\":1418:1696  function sell(uint256 gcAmount) public {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n    tag_123:\n      stop\n        /* \"FinalProject2/GameCoin.sol\":273:299  uint256 public buyRate = 6 */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_132\n      jump\t// in\n    tag_133:\n      dup1\n      iszero\n      tag_134\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_135\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_134)\n    tag_135:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_136:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_136\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"FinalProject2/GameCoin.sol\":210:238  uint256 public sellRate = 10 */\n    tag_59:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"FinalProject2/GameCoin.sol\":933:1141  function getUserInfo(address account) public view returns (string memory, string memory, string memory) {... */\n    tag_65:\n        /* \"FinalProject2/GameCoin.sol\":992:1005  string memory */\n      0x60\n        /* \"FinalProject2/GameCoin.sol\":1007:1020  string memory */\n      dup1\n        /* \"FinalProject2/GameCoin.sol\":1022:1035  string memory */\n      0x60\n        /* \"FinalProject2/GameCoin.sol\":1047:1063  User memory user */\n      0x00\n        /* \"FinalProject2/GameCoin.sol\":1066:1071  users */\n      0x08\n        /* \"FinalProject2/GameCoin.sol\":1066:1080  users[account] */\n      0x00\n        /* \"FinalProject2/GameCoin.sol\":1072:1079  account */\n      dup7\n        /* \"FinalProject2/GameCoin.sol\":1066:1080  users[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"FinalProject2/GameCoin.sol\":1047:1080  User memory user = users[account] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_132\n      jump\t// in\n    tag_151:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_152\n      swap1\n      tag_132\n      jump\t// in\n    tag_152:\n      dup1\n      iszero\n      tag_153\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_154\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_153)\n    tag_154:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_155:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_155\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      tag_156\n      swap1\n      tag_132\n      jump\t// in\n    tag_156:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_157\n      swap1\n      tag_132\n      jump\t// in\n    tag_157:\n      dup1\n      iszero\n      tag_158\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_159\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_158)\n    tag_159:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_160:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_160\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_132\n      jump\t// in\n    tag_161:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_132\n      jump\t// in\n    tag_162:\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_164\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_163)\n    tag_164:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_165:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_165\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"FinalProject2/GameCoin.sol\":1098:1102  user */\n      dup1\n        /* \"FinalProject2/GameCoin.sol\":1098:1111  user.username */\n      0x00\n      add\n      mload\n        /* \"FinalProject2/GameCoin.sol\":1113:1117  user */\n      dup2\n        /* \"FinalProject2/GameCoin.sol\":1113:1123  user.email */\n      0x20\n      add\n      mload\n        /* \"FinalProject2/GameCoin.sol\":1125:1129  user */\n      dup3\n        /* \"FinalProject2/GameCoin.sol\":1125:1133  user.bio */\n      0x40\n      add\n      mload\n        /* \"FinalProject2/GameCoin.sol\":1090:1134  return (user.username, user.email, user.bio) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"FinalProject2/GameCoin.sol\":933:1141  function getUserInfo(address account) public view returns (string memory, string memory, string memory) {... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_132\n      jump\t// in\n    tag_175:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_132\n      jump\t// in\n    tag_176:\n      dup1\n      iszero\n      tag_177\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_178\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_177)\n    tag_178:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_179:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_179\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"FinalProject2/GameCoin.sol\":1926:2063  function setRates(uint256 _sellRate, uint256 _buyRate) public onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"FinalProject2/GameCoin.sol\":2019:2028  _sellRate */\n      dup2\n        /* \"FinalProject2/GameCoin.sol\":2008:2016  sellRate */\n      0x06\n        /* \"FinalProject2/GameCoin.sol\":2008:2028  sellRate = _sellRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FinalProject2/GameCoin.sol\":2048:2056  _buyRate */\n      dup1\n        /* \"FinalProject2/GameCoin.sol\":2038:2045  buyRate */\n      0x07\n        /* \"FinalProject2/GameCoin.sol\":2038:2056  buyRate = _buyRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"FinalProject2/GameCoin.sol\":1926:2063  function setRates(uint256 _sellRate, uint256 _buyRate) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"FinalProject2/GameCoin.sol\":1811:1920  function sendToOwner(uint256 amount) public onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_187:\n        /* \"FinalProject2/GameCoin.sol\":1875:1913  _transfer(msg.sender, owner(), amount) */\n      tag_189\n        /* \"FinalProject2/GameCoin.sol\":1885:1895  msg.sender */\n      caller\n        /* \"FinalProject2/GameCoin.sol\":1897:1904  owner() */\n      tag_190\n        /* \"FinalProject2/GameCoin.sol\":1897:1902  owner */\n      tag_78\n        /* \"FinalProject2/GameCoin.sol\":1897:1904  owner() */\n      jump\t// in\n    tag_190:\n        /* \"FinalProject2/GameCoin.sol\":1906:1912  amount */\n      dup4\n        /* \"FinalProject2/GameCoin.sol\":1875:1884  _transfer */\n      tag_148\n        /* \"FinalProject2/GameCoin.sol\":1875:1913  _transfer(msg.sender, owner(), amount) */\n      jump\t// in\n    tag_189:\n        /* \"FinalProject2/GameCoin.sol\":1811:1920  function sendToOwner(uint256 amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"FinalProject2/GameCoin.sol\":1702:1805  function send(address to, uint256 gcAmount) public {... */\n    tag_103:\n        /* \"FinalProject2/GameCoin.sol\":1763:1798  _transfer(msg.sender, to, gcAmount) */\n      tag_192\n        /* \"FinalProject2/GameCoin.sol\":1773:1783  msg.sender */\n      caller\n        /* \"FinalProject2/GameCoin.sol\":1785:1787  to */\n      dup4\n        /* \"FinalProject2/GameCoin.sol\":1789:1797  gcAmount */\n      dup4\n        /* \"FinalProject2/GameCoin.sol\":1763:1772  _transfer */\n      tag_148\n        /* \"FinalProject2/GameCoin.sol\":1763:1798  _transfer(msg.sender, to, gcAmount) */\n      jump\t// in\n    tag_192:\n        /* \"FinalProject2/GameCoin.sol\":1702:1805  function send(address to, uint256 gcAmount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"FinalProject2/GameCoin.sol\":627:927  function registerUser(string memory username, string memory email, string memory bio) public {... */\n    tag_108:\n        /* \"FinalProject2/GameCoin.sol\":763:764  0 */\n      0x00\n        /* \"FinalProject2/GameCoin.sol\":744:752  username */\n      dup4\n        /* \"FinalProject2/GameCoin.sol\":738:760  bytes(username).length */\n      mload\n        /* \"FinalProject2/GameCoin.sol\":738:764  bytes(username).length > 0 */\n      gt\n        /* \"FinalProject2/GameCoin.sol\":730:795  require(bytes(username).length > 0, \"Username must not be empty\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"FinalProject2/GameCoin.sol\":835:836  0 */\n      0x00\n        /* \"FinalProject2/GameCoin.sol\":819:824  email */\n      dup3\n        /* \"FinalProject2/GameCoin.sol\":813:832  bytes(email).length */\n      mload\n        /* \"FinalProject2/GameCoin.sol\":813:836  bytes(email).length > 0 */\n      gt\n        /* \"FinalProject2/GameCoin.sol\":805:864  require(bytes(email).length > 0, \"Email must not be empty\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"FinalProject2/GameCoin.sol\":894:920  User(username, email, bio) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"FinalProject2/GameCoin.sol\":899:907  username */\n      dup5\n        /* \"FinalProject2/GameCoin.sol\":894:920  User(username, email, bio) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"FinalProject2/GameCoin.sol\":909:914  email */\n      dup4\n        /* \"FinalProject2/GameCoin.sol\":894:920  User(username, email, bio) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"FinalProject2/GameCoin.sol\":916:919  bio */\n      dup3\n        /* \"FinalProject2/GameCoin.sol\":894:920  User(username, email, bio) */\n      dup2\n      mstore\n      pop\n        /* \"FinalProject2/GameCoin.sol\":874:879  users */\n      0x08\n        /* \"FinalProject2/GameCoin.sol\":874:891  users[msg.sender] */\n      0x00\n        /* \"FinalProject2/GameCoin.sol\":880:890  msg.sender */\n      caller\n        /* \"FinalProject2/GameCoin.sol\":874:891  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"FinalProject2/GameCoin.sol\":874:920  users[msg.sender] = User(username, email, bio) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup2\n      tag_202\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_202:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      swap1\n      dup2\n      tag_203\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_203:\n      pop\n      swap1\n      pop\n      pop\n        /* \"FinalProject2/GameCoin.sol\":627:927  function registerUser(string memory username, string memory email, string memory bio) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"FinalProject2/GameCoin.sol\":1147:1412  function buy(uint256 gcAmount) public payable {... */\n    tag_111:\n        /* \"FinalProject2/GameCoin.sol\":1203:1222  uint256 requiredETH */\n      0x00\n        /* \"FinalProject2/GameCoin.sol\":1253:1263  decimals() */\n      tag_205\n        /* \"FinalProject2/GameCoin.sol\":1253:1261  decimals */\n      tag_54\n        /* \"FinalProject2/GameCoin.sol\":1253:1263  decimals() */\n      jump\t// in\n    tag_205:\n        /* \"FinalProject2/GameCoin.sol\":1249:1251  10 */\n      0x0a\n        /* \"FinalProject2/GameCoin.sol\":1249:1263  10**decimals() */\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"FinalProject2/GameCoin.sol\":1237:1245  sellRate */\n      sload(0x06)\n        /* \"FinalProject2/GameCoin.sol\":1226:1234  gcAmount */\n      dup4\n        /* \"FinalProject2/GameCoin.sol\":1226:1245  gcAmount * sellRate */\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"FinalProject2/GameCoin.sol\":1225:1263  (gcAmount * sellRate) / 10**decimals() */\n      tag_210\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"FinalProject2/GameCoin.sol\":1203:1263  uint256 requiredETH = (gcAmount * sellRate) / 10**decimals() */\n      swap1\n      pop\n        /* \"FinalProject2/GameCoin.sol\":1294:1305  requiredETH */\n      dup1\n        /* \"FinalProject2/GameCoin.sol\":1281:1290  msg.value */\n      callvalue\n        /* \"FinalProject2/GameCoin.sol\":1281:1305  msg.value == requiredETH */\n      eq\n        /* \"FinalProject2/GameCoin.sol\":1273:1335  require(msg.value == requiredETH, \"Incorrect ETH amount sent\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"FinalProject2/GameCoin.sol\":1345:1372  _mint(msg.sender, gcAmount) */\n      tag_215\n        /* \"FinalProject2/GameCoin.sol\":1351:1361  msg.sender */\n      caller\n        /* \"FinalProject2/GameCoin.sol\":1363:1371  gcAmount */\n      dup4\n        /* \"FinalProject2/GameCoin.sol\":1345:1350  _mint */\n      tag_216\n        /* \"FinalProject2/GameCoin.sol\":1345:1372  _mint(msg.sender, gcAmount) */\n      jump\t// in\n    tag_215:\n        /* \"FinalProject2/GameCoin.sol\":1193:1412  {... */\n      pop\n        /* \"FinalProject2/GameCoin.sol\":1147:1412  function buy(uint256 gcAmount) public payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"FinalProject2/GameCoin.sol\":1418:1696  function sell(uint256 gcAmount) public {... */\n    tag_121:\n        /* \"FinalProject2/GameCoin.sol\":1467:1484  uint256 ethAmount */\n      0x00\n        /* \"FinalProject2/GameCoin.sol\":1514:1524  decimals() */\n      tag_219\n        /* \"FinalProject2/GameCoin.sol\":1514:1522  decimals */\n      tag_54\n        /* \"FinalProject2/GameCoin.sol\":1514:1524  decimals() */\n      jump\t// in\n    tag_219:\n        /* \"FinalProject2/GameCoin.sol\":1510:1512  10 */\n      0x0a\n        /* \"FinalProject2/GameCoin.sol\":1510:1524  10**decimals() */\n      tag_220\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_220:\n        /* \"FinalProject2/GameCoin.sol\":1499:1506  buyRate */\n      sload(0x07)\n        /* \"FinalProject2/GameCoin.sol\":1488:1496  gcAmount */\n      dup4\n        /* \"FinalProject2/GameCoin.sol\":1488:1506  gcAmount * buyRate */\n      tag_221\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_221:\n        /* \"FinalProject2/GameCoin.sol\":1487:1524  (gcAmount * buyRate) / 10**decimals() */\n      tag_222\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_222:\n        /* \"FinalProject2/GameCoin.sol\":1467:1524  uint256 ethAmount = (gcAmount * buyRate) / 10**decimals() */\n      swap1\n      pop\n        /* \"FinalProject2/GameCoin.sol\":1567:1575  gcAmount */\n      dup2\n        /* \"FinalProject2/GameCoin.sol\":1542:1563  balanceOf(msg.sender) */\n      tag_223\n        /* \"FinalProject2/GameCoin.sol\":1552:1562  msg.sender */\n      caller\n        /* \"FinalProject2/GameCoin.sol\":1542:1551  balanceOf */\n      tag_71\n        /* \"FinalProject2/GameCoin.sol\":1542:1563  balanceOf(msg.sender) */\n      jump\t// in\n    tag_223:\n        /* \"FinalProject2/GameCoin.sol\":1542:1575  balanceOf(msg.sender) >= gcAmount */\n      lt\n      iszero\n        /* \"FinalProject2/GameCoin.sol\":1534:1603  require(balanceOf(msg.sender) >= gcAmount, \"Insufficient NB balance\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"FinalProject2/GameCoin.sol\":1613:1640  _burn(msg.sender, gcAmount) */\n      tag_227\n        /* \"FinalProject2/GameCoin.sol\":1619:1629  msg.sender */\n      caller\n        /* \"FinalProject2/GameCoin.sol\":1631:1639  gcAmount */\n      dup4\n        /* \"FinalProject2/GameCoin.sol\":1613:1618  _burn */\n      tag_228\n        /* \"FinalProject2/GameCoin.sol\":1613:1640  _burn(msg.sender, gcAmount) */\n      jump\t// in\n    tag_227:\n        /* \"FinalProject2/GameCoin.sol\":1658:1668  msg.sender */\n      caller\n        /* \"FinalProject2/GameCoin.sol\":1650:1678  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"FinalProject2/GameCoin.sol\":1650:1689  payable(msg.sender).transfer(ethAmount) */\n      0x08fc\n        /* \"FinalProject2/GameCoin.sol\":1679:1688  ethAmount */\n      dup3\n        /* \"FinalProject2/GameCoin.sol\":1650:1689  payable(msg.sender).transfer(ethAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_230:\n      pop\n        /* \"FinalProject2/GameCoin.sol\":1457:1696  {... */\n      pop\n        /* \"FinalProject2/GameCoin.sol\":1418:1696  function sell(uint256 gcAmount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"FinalProject2/GameCoin.sol\":273:299  uint256 public buyRate = 6 */\n    tag_128:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_276\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_279\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_281)\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_285)\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_286\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_287:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_288:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_289:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_350:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_350)\n    tag_352:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_290:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_291:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_355\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_287\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":818:889   */\n      tag_356\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_288\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_357\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_289\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":988:1017   */\n      tag_358\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_290\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_33:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_360\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_291\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1349:1424   */\n    tag_292:\n        /* \"#utility.yul\":1382:1388   */\n      0x00\n        /* \"#utility.yul\":1415:1417   */\n      0x40\n        /* \"#utility.yul\":1409:1418   */\n      mload\n        /* \"#utility.yul\":1399:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1349:1424   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_293:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1553:1670   */\n    tag_294:\n        /* \"#utility.yul\":1662:1663   */\n      0x00\n        /* \"#utility.yul\":1659:1660   */\n      dup1\n        /* \"#utility.yul\":1652:1664   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_295:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_296:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_366\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_295\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_297:\n        /* \"#utility.yul\":1983:2007   */\n      tag_368\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_296\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_369:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_298:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_371\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_297\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_299:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_300:\n        /* \"#utility.yul\":2339:2363   */\n      tag_374\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_299\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_375:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_301:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_377\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_300\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_37:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_380\n      tag_293\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2632:2751   */\n    tag_379:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_381\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_298\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_382\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_301\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_302:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_303:\n        /* \"#utility.yul\":3196:3217   */\n      tag_385\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_302\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_40:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_387\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_303\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_304:\n        /* \"#utility.yul\":3533:3557   */\n      tag_389\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_299\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_45:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_391\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_304\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_49:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_394\n      tag_293\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3908:4027   */\n    tag_393:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_395\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_298\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_396\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_298\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_397\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_301\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_305:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_306:\n        /* \"#utility.yul\":4598:4620   */\n      tag_400\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_305\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_56:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_402\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_306\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_64:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_405\n      tag_293\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4929:5048   */\n    tag_404:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_406\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_298\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5903   */\n    tag_67:\n        /* \"#utility.yul\":5397:5401   */\n      0x00\n        /* \"#utility.yul\":5435:5437   */\n      0x60\n        /* \"#utility.yul\":5424:5433   */\n      dup3\n        /* \"#utility.yul\":5420:5438   */\n      add\n        /* \"#utility.yul\":5412:5438   */\n      swap1\n      pop\n        /* \"#utility.yul\":5484:5493   */\n      dup2\n        /* \"#utility.yul\":5478:5482   */\n      dup2\n        /* \"#utility.yul\":5474:5494   */\n      sub\n        /* \"#utility.yul\":5470:5471   */\n      0x00\n        /* \"#utility.yul\":5459:5468   */\n      dup4\n        /* \"#utility.yul\":5455:5472   */\n      add\n        /* \"#utility.yul\":5448:5495   */\n      mstore\n        /* \"#utility.yul\":5512:5590   */\n      tag_408\n        /* \"#utility.yul\":5585:5589   */\n      dup2\n        /* \"#utility.yul\":5576:5582   */\n      dup7\n        /* \"#utility.yul\":5512:5590   */\n      tag_291\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5504:5590   */\n      swap1\n      pop\n        /* \"#utility.yul\":5637:5646   */\n      dup2\n        /* \"#utility.yul\":5631:5635   */\n      dup2\n        /* \"#utility.yul\":5627:5647   */\n      sub\n        /* \"#utility.yul\":5622:5624   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup4\n        /* \"#utility.yul\":5607:5625   */\n      add\n        /* \"#utility.yul\":5600:5648   */\n      mstore\n        /* \"#utility.yul\":5665:5743   */\n      tag_409\n        /* \"#utility.yul\":5738:5742   */\n      dup2\n        /* \"#utility.yul\":5729:5735   */\n      dup6\n        /* \"#utility.yul\":5665:5743   */\n      tag_291\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":5657:5743   */\n      swap1\n      pop\n        /* \"#utility.yul\":5790:5799   */\n      dup2\n        /* \"#utility.yul\":5784:5788   */\n      dup2\n        /* \"#utility.yul\":5780:5800   */\n      sub\n        /* \"#utility.yul\":5775:5777   */\n      0x40\n        /* \"#utility.yul\":5764:5773   */\n      dup4\n        /* \"#utility.yul\":5760:5778   */\n      add\n        /* \"#utility.yul\":5753:5801   */\n      mstore\n        /* \"#utility.yul\":5818:5896   */\n      tag_410\n        /* \"#utility.yul\":5891:5895   */\n      dup2\n        /* \"#utility.yul\":5882:5888   */\n      dup5\n        /* \"#utility.yul\":5818:5896   */\n      tag_291\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5810:5896   */\n      swap1\n      pop\n        /* \"#utility.yul\":5188:5903   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5909:6027   */\n    tag_307:\n        /* \"#utility.yul\":5996:6020   */\n      tag_412\n        /* \"#utility.yul\":6014:6019   */\n      dup2\n        /* \"#utility.yul\":5996:6020   */\n      tag_296\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5991:5994   */\n      dup3\n        /* \"#utility.yul\":5984:6021   */\n      mstore\n        /* \"#utility.yul\":5909:6027   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6033:6255   */\n    tag_80:\n        /* \"#utility.yul\":6126:6130   */\n      0x00\n        /* \"#utility.yul\":6164:6166   */\n      0x20\n        /* \"#utility.yul\":6153:6162   */\n      dup3\n        /* \"#utility.yul\":6149:6167   */\n      add\n        /* \"#utility.yul\":6141:6167   */\n      swap1\n      pop\n        /* \"#utility.yul\":6177:6248   */\n      tag_414\n        /* \"#utility.yul\":6245:6246   */\n      0x00\n        /* \"#utility.yul\":6234:6243   */\n      dup4\n        /* \"#utility.yul\":6230:6247   */\n      add\n        /* \"#utility.yul\":6221:6227   */\n      dup5\n        /* \"#utility.yul\":6177:6248   */\n      tag_307\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":6033:6255   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6261:6735   */\n    tag_93:\n        /* \"#utility.yul\":6329:6335   */\n      0x00\n        /* \"#utility.yul\":6337:6343   */\n      dup1\n        /* \"#utility.yul\":6386:6388   */\n      0x40\n        /* \"#utility.yul\":6374:6383   */\n      dup4\n        /* \"#utility.yul\":6365:6372   */\n      dup6\n        /* \"#utility.yul\":6361:6384   */\n      sub\n        /* \"#utility.yul\":6357:6389   */\n      slt\n        /* \"#utility.yul\":6354:6473   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":6392:6471   */\n      tag_417\n      tag_293\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":6354:6473   */\n    tag_416:\n        /* \"#utility.yul\":6512:6513   */\n      0x00\n        /* \"#utility.yul\":6537:6590   */\n      tag_418\n        /* \"#utility.yul\":6582:6589   */\n      dup6\n        /* \"#utility.yul\":6573:6579   */\n      dup3\n        /* \"#utility.yul\":6562:6571   */\n      dup7\n        /* \"#utility.yul\":6558:6580   */\n      add\n        /* \"#utility.yul\":6537:6590   */\n      tag_301\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6527:6590   */\n      swap3\n      pop\n        /* \"#utility.yul\":6483:6600   */\n      pop\n        /* \"#utility.yul\":6639:6641   */\n      0x20\n        /* \"#utility.yul\":6665:6718   */\n      tag_419\n        /* \"#utility.yul\":6710:6717   */\n      dup6\n        /* \"#utility.yul\":6701:6707   */\n      dup3\n        /* \"#utility.yul\":6690:6699   */\n      dup7\n        /* \"#utility.yul\":6686:6708   */\n      add\n        /* \"#utility.yul\":6665:6718   */\n      tag_301\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":6655:6718   */\n      swap2\n      pop\n        /* \"#utility.yul\":6610:6728   */\n      pop\n        /* \"#utility.yul\":6261:6735   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6741:7070   */\n    tag_98:\n        /* \"#utility.yul\":6800:6806   */\n      0x00\n        /* \"#utility.yul\":6849:6851   */\n      0x20\n        /* \"#utility.yul\":6837:6846   */\n      dup3\n        /* \"#utility.yul\":6828:6835   */\n      dup5\n        /* \"#utility.yul\":6824:6847   */\n      sub\n        /* \"#utility.yul\":6820:6852   */\n      slt\n        /* \"#utility.yul\":6817:6936   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":6855:6934   */\n      tag_422\n      tag_293\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":6817:6936   */\n    tag_421:\n        /* \"#utility.yul\":6975:6976   */\n      0x00\n        /* \"#utility.yul\":7000:7053   */\n      tag_423\n        /* \"#utility.yul\":7045:7052   */\n      dup5\n        /* \"#utility.yul\":7036:7042   */\n      dup3\n        /* \"#utility.yul\":7025:7034   */\n      dup6\n        /* \"#utility.yul\":7021:7043   */\n      add\n        /* \"#utility.yul\":7000:7053   */\n      tag_301\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6990:7053   */\n      swap2\n      pop\n        /* \"#utility.yul\":6946:7063   */\n      pop\n        /* \"#utility.yul\":6741:7070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7076:7193   */\n    tag_308:\n        /* \"#utility.yul\":7185:7186   */\n      0x00\n        /* \"#utility.yul\":7182:7183   */\n      dup1\n        /* \"#utility.yul\":7175:7187   */\n      revert\n        /* \"#utility.yul\":7199:7316   */\n    tag_309:\n        /* \"#utility.yul\":7308:7309   */\n      0x00\n        /* \"#utility.yul\":7305:7306   */\n      dup1\n        /* \"#utility.yul\":7298:7310   */\n      revert\n        /* \"#utility.yul\":7322:7502   */\n    tag_310:\n        /* \"#utility.yul\":7370:7447   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7367:7368   */\n      0x00\n        /* \"#utility.yul\":7360:7448   */\n      mstore\n        /* \"#utility.yul\":7467:7471   */\n      0x41\n        /* \"#utility.yul\":7464:7465   */\n      0x04\n        /* \"#utility.yul\":7457:7472   */\n      mstore\n        /* \"#utility.yul\":7491:7495   */\n      0x24\n        /* \"#utility.yul\":7488:7489   */\n      0x00\n        /* \"#utility.yul\":7481:7496   */\n      revert\n        /* \"#utility.yul\":7508:7789   */\n    tag_311:\n        /* \"#utility.yul\":7591:7618   */\n      tag_428\n        /* \"#utility.yul\":7613:7617   */\n      dup3\n        /* \"#utility.yul\":7591:7618   */\n      tag_290\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":7583:7589   */\n      dup2\n        /* \"#utility.yul\":7579:7619   */\n      add\n        /* \"#utility.yul\":7721:7727   */\n      dup2\n        /* \"#utility.yul\":7709:7719   */\n      dup2\n        /* \"#utility.yul\":7706:7728   */\n      lt\n        /* \"#utility.yul\":7685:7703   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7673:7683   */\n      dup3\n        /* \"#utility.yul\":7670:7704   */\n      gt\n        /* \"#utility.yul\":7667:7729   */\n      or\n        /* \"#utility.yul\":7664:7752   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":7732:7750   */\n      tag_430\n      tag_310\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7664:7752   */\n    tag_429:\n        /* \"#utility.yul\":7772:7782   */\n      dup1\n        /* \"#utility.yul\":7768:7770   */\n      0x40\n        /* \"#utility.yul\":7761:7783   */\n      mstore\n        /* \"#utility.yul\":7551:7789   */\n      pop\n        /* \"#utility.yul\":7508:7789   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7795:7924   */\n    tag_312:\n        /* \"#utility.yul\":7829:7835   */\n      0x00\n        /* \"#utility.yul\":7856:7876   */\n      tag_432\n      tag_292\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":7846:7876   */\n      swap1\n      pop\n        /* \"#utility.yul\":7885:7918   */\n      tag_433\n        /* \"#utility.yul\":7913:7917   */\n      dup3\n        /* \"#utility.yul\":7905:7911   */\n      dup3\n        /* \"#utility.yul\":7885:7918   */\n      tag_311\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":7795:7924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7930:8238   */\n    tag_313:\n        /* \"#utility.yul\":7992:7996   */\n      0x00\n        /* \"#utility.yul\":8082:8100   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8074:8080   */\n      dup3\n        /* \"#utility.yul\":8071:8101   */\n      gt\n        /* \"#utility.yul\":8068:8124   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":8104:8122   */\n      tag_436\n      tag_310\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":8068:8124   */\n    tag_435:\n        /* \"#utility.yul\":8142:8171   */\n      tag_437\n        /* \"#utility.yul\":8164:8170   */\n      dup3\n        /* \"#utility.yul\":8142:8171   */\n      tag_290\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8134:8171   */\n      swap1\n      pop\n        /* \"#utility.yul\":8226:8230   */\n      0x20\n        /* \"#utility.yul\":8220:8224   */\n      dup2\n        /* \"#utility.yul\":8216:8231   */\n      add\n        /* \"#utility.yul\":8208:8231   */\n      swap1\n      pop\n        /* \"#utility.yul\":7930:8238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8244:8390   */\n    tag_314:\n        /* \"#utility.yul\":8341:8347   */\n      dup3\n        /* \"#utility.yul\":8336:8339   */\n      dup2\n        /* \"#utility.yul\":8331:8334   */\n      dup4\n        /* \"#utility.yul\":8318:8348   */\n      calldatacopy\n        /* \"#utility.yul\":8382:8383   */\n      0x00\n        /* \"#utility.yul\":8373:8379   */\n      dup4\n        /* \"#utility.yul\":8368:8371   */\n      dup4\n        /* \"#utility.yul\":8364:8380   */\n      add\n        /* \"#utility.yul\":8357:8384   */\n      mstore\n        /* \"#utility.yul\":8244:8390   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8396:8821   */\n    tag_315:\n        /* \"#utility.yul\":8474:8479   */\n      0x00\n        /* \"#utility.yul\":8499:8565   */\n      tag_440\n        /* \"#utility.yul\":8515:8564   */\n      tag_441\n        /* \"#utility.yul\":8557:8563   */\n      dup5\n        /* \"#utility.yul\":8515:8564   */\n      tag_313\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":8499:8565   */\n      tag_312\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8490:8565   */\n      swap1\n      pop\n        /* \"#utility.yul\":8588:8594   */\n      dup3\n        /* \"#utility.yul\":8581:8586   */\n      dup2\n        /* \"#utility.yul\":8574:8595   */\n      mstore\n        /* \"#utility.yul\":8626:8630   */\n      0x20\n        /* \"#utility.yul\":8619:8624   */\n      dup2\n        /* \"#utility.yul\":8615:8631   */\n      add\n        /* \"#utility.yul\":8664:8667   */\n      dup5\n        /* \"#utility.yul\":8655:8661   */\n      dup5\n        /* \"#utility.yul\":8650:8653   */\n      dup5\n        /* \"#utility.yul\":8646:8662   */\n      add\n        /* \"#utility.yul\":8643:8668   */\n      gt\n        /* \"#utility.yul\":8640:8752   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":8671:8750   */\n      tag_443\n      tag_309\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":8640:8752   */\n    tag_442:\n        /* \"#utility.yul\":8761:8815   */\n      tag_444\n        /* \"#utility.yul\":8808:8814   */\n      dup5\n        /* \"#utility.yul\":8803:8806   */\n      dup3\n        /* \"#utility.yul\":8798:8801   */\n      dup6\n        /* \"#utility.yul\":8761:8815   */\n      tag_314\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":8480:8821   */\n      pop\n        /* \"#utility.yul\":8396:8821   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8841:9181   */\n    tag_316:\n        /* \"#utility.yul\":8897:8902   */\n      0x00\n        /* \"#utility.yul\":8946:8949   */\n      dup3\n        /* \"#utility.yul\":8939:8943   */\n      0x1f\n        /* \"#utility.yul\":8931:8937   */\n      dup4\n        /* \"#utility.yul\":8927:8944   */\n      add\n        /* \"#utility.yul\":8923:8950   */\n      slt\n        /* \"#utility.yul\":8913:9035   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":8954:9033   */\n      tag_447\n      tag_308\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":8913:9035   */\n    tag_446:\n        /* \"#utility.yul\":9071:9077   */\n      dup2\n        /* \"#utility.yul\":9058:9078   */\n      calldataload\n        /* \"#utility.yul\":9096:9175   */\n      tag_448\n        /* \"#utility.yul\":9171:9174   */\n      dup5\n        /* \"#utility.yul\":9163:9169   */\n      dup3\n        /* \"#utility.yul\":9156:9160   */\n      0x20\n        /* \"#utility.yul\":9148:9154   */\n      dup7\n        /* \"#utility.yul\":9144:9161   */\n      add\n        /* \"#utility.yul\":9096:9175   */\n      tag_315\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":9087:9175   */\n      swap2\n      pop\n        /* \"#utility.yul\":8903:9181   */\n      pop\n        /* \"#utility.yul\":8841:9181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9187:10346   */\n    tag_107:\n        /* \"#utility.yul\":9294:9300   */\n      0x00\n        /* \"#utility.yul\":9302:9308   */\n      dup1\n        /* \"#utility.yul\":9310:9316   */\n      0x00\n        /* \"#utility.yul\":9359:9361   */\n      0x60\n        /* \"#utility.yul\":9347:9356   */\n      dup5\n        /* \"#utility.yul\":9338:9345   */\n      dup7\n        /* \"#utility.yul\":9334:9357   */\n      sub\n        /* \"#utility.yul\":9330:9362   */\n      slt\n        /* \"#utility.yul\":9327:9446   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":9365:9444   */\n      tag_451\n      tag_293\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":9327:9446   */\n    tag_450:\n        /* \"#utility.yul\":9513:9514   */\n      0x00\n        /* \"#utility.yul\":9502:9511   */\n      dup5\n        /* \"#utility.yul\":9498:9515   */\n      add\n        /* \"#utility.yul\":9485:9516   */\n      calldataload\n        /* \"#utility.yul\":9543:9561   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9535:9541   */\n      dup2\n        /* \"#utility.yul\":9532:9562   */\n      gt\n        /* \"#utility.yul\":9529:9646   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":9565:9644   */\n      tag_453\n      tag_294\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":9529:9646   */\n    tag_452:\n        /* \"#utility.yul\":9670:9733   */\n      tag_454\n        /* \"#utility.yul\":9725:9732   */\n      dup7\n        /* \"#utility.yul\":9716:9722   */\n      dup3\n        /* \"#utility.yul\":9705:9714   */\n      dup8\n        /* \"#utility.yul\":9701:9723   */\n      add\n        /* \"#utility.yul\":9670:9733   */\n      tag_316\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":9660:9733   */\n      swap4\n      pop\n        /* \"#utility.yul\":9456:9743   */\n      pop\n        /* \"#utility.yul\":9810:9812   */\n      0x20\n        /* \"#utility.yul\":9799:9808   */\n      dup5\n        /* \"#utility.yul\":9795:9813   */\n      add\n        /* \"#utility.yul\":9782:9814   */\n      calldataload\n        /* \"#utility.yul\":9841:9859   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9833:9839   */\n      dup2\n        /* \"#utility.yul\":9830:9860   */\n      gt\n        /* \"#utility.yul\":9827:9944   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":9863:9942   */\n      tag_456\n      tag_294\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":9827:9944   */\n    tag_455:\n        /* \"#utility.yul\":9968:10031   */\n      tag_457\n        /* \"#utility.yul\":10023:10030   */\n      dup7\n        /* \"#utility.yul\":10014:10020   */\n      dup3\n        /* \"#utility.yul\":10003:10012   */\n      dup8\n        /* \"#utility.yul\":9999:10021   */\n      add\n        /* \"#utility.yul\":9968:10031   */\n      tag_316\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9958:10031   */\n      swap3\n      pop\n        /* \"#utility.yul\":9753:10041   */\n      pop\n        /* \"#utility.yul\":10108:10110   */\n      0x40\n        /* \"#utility.yul\":10097:10106   */\n      dup5\n        /* \"#utility.yul\":10093:10111   */\n      add\n        /* \"#utility.yul\":10080:10112   */\n      calldataload\n        /* \"#utility.yul\":10139:10157   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10131:10137   */\n      dup2\n        /* \"#utility.yul\":10128:10158   */\n      gt\n        /* \"#utility.yul\":10125:10242   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":10161:10240   */\n      tag_459\n      tag_294\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":10125:10242   */\n    tag_458:\n        /* \"#utility.yul\":10266:10329   */\n      tag_460\n        /* \"#utility.yul\":10321:10328   */\n      dup7\n        /* \"#utility.yul\":10312:10318   */\n      dup3\n        /* \"#utility.yul\":10301:10310   */\n      dup8\n        /* \"#utility.yul\":10297:10319   */\n      add\n        /* \"#utility.yul\":10266:10329   */\n      tag_316\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":10256:10329   */\n      swap2\n      pop\n        /* \"#utility.yul\":10051:10339   */\n      pop\n        /* \"#utility.yul\":9187:10346   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10352:10826   */\n    tag_115:\n        /* \"#utility.yul\":10420:10426   */\n      0x00\n        /* \"#utility.yul\":10428:10434   */\n      dup1\n        /* \"#utility.yul\":10477:10479   */\n      0x40\n        /* \"#utility.yul\":10465:10474   */\n      dup4\n        /* \"#utility.yul\":10456:10463   */\n      dup6\n        /* \"#utility.yul\":10452:10475   */\n      sub\n        /* \"#utility.yul\":10448:10480   */\n      slt\n        /* \"#utility.yul\":10445:10564   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":10483:10562   */\n      tag_463\n      tag_293\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":10445:10564   */\n    tag_462:\n        /* \"#utility.yul\":10603:10604   */\n      0x00\n        /* \"#utility.yul\":10628:10681   */\n      tag_464\n        /* \"#utility.yul\":10673:10680   */\n      dup6\n        /* \"#utility.yul\":10664:10670   */\n      dup3\n        /* \"#utility.yul\":10653:10662   */\n      dup7\n        /* \"#utility.yul\":10649:10671   */\n      add\n        /* \"#utility.yul\":10628:10681   */\n      tag_298\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10618:10681   */\n      swap3\n      pop\n        /* \"#utility.yul\":10574:10691   */\n      pop\n        /* \"#utility.yul\":10730:10732   */\n      0x20\n        /* \"#utility.yul\":10756:10809   */\n      tag_465\n        /* \"#utility.yul\":10801:10808   */\n      dup6\n        /* \"#utility.yul\":10792:10798   */\n      dup3\n        /* \"#utility.yul\":10781:10790   */\n      dup7\n        /* \"#utility.yul\":10777:10799   */\n      add\n        /* \"#utility.yul\":10756:10809   */\n      tag_298\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":10746:10809   */\n      swap2\n      pop\n        /* \"#utility.yul\":10701:10819   */\n      pop\n        /* \"#utility.yul\":10352:10826   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10832:11012   */\n    tag_317:\n        /* \"#utility.yul\":10880:10957   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10877:10878   */\n      0x00\n        /* \"#utility.yul\":10870:10958   */\n      mstore\n        /* \"#utility.yul\":10977:10981   */\n      0x22\n        /* \"#utility.yul\":10974:10975   */\n      0x04\n        /* \"#utility.yul\":10967:10982   */\n      mstore\n        /* \"#utility.yul\":11001:11005   */\n      0x24\n        /* \"#utility.yul\":10998:10999   */\n      0x00\n        /* \"#utility.yul\":10991:11006   */\n      revert\n        /* \"#utility.yul\":11018:11338   */\n    tag_132:\n        /* \"#utility.yul\":11062:11068   */\n      0x00\n        /* \"#utility.yul\":11099:11100   */\n      0x02\n        /* \"#utility.yul\":11093:11097   */\n      dup3\n        /* \"#utility.yul\":11089:11101   */\n      div\n        /* \"#utility.yul\":11079:11101   */\n      swap1\n      pop\n        /* \"#utility.yul\":11146:11147   */\n      0x01\n        /* \"#utility.yul\":11140:11144   */\n      dup3\n        /* \"#utility.yul\":11136:11148   */\n      and\n        /* \"#utility.yul\":11167:11185   */\n      dup1\n        /* \"#utility.yul\":11157:11238   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":11223:11227   */\n      0x7f\n        /* \"#utility.yul\":11215:11221   */\n      dup3\n        /* \"#utility.yul\":11211:11228   */\n      and\n        /* \"#utility.yul\":11201:11228   */\n      swap2\n      pop\n        /* \"#utility.yul\":11157:11238   */\n    tag_468:\n        /* \"#utility.yul\":11285:11287   */\n      0x20\n        /* \"#utility.yul\":11277:11283   */\n      dup3\n        /* \"#utility.yul\":11274:11288   */\n      lt\n        /* \"#utility.yul\":11254:11272   */\n      dup2\n        /* \"#utility.yul\":11251:11289   */\n      sub\n        /* \"#utility.yul\":11248:11332   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":11304:11322   */\n      tag_470\n      tag_317\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":11248:11332   */\n    tag_469:\n        /* \"#utility.yul\":11069:11338   */\n      pop\n        /* \"#utility.yul\":11018:11338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11344:11520   */\n    tag_318:\n        /* \"#utility.yul\":11484:11512   */\n      0x557365726e616d65206d757374206e6f7420626520656d707479000000000000\n        /* \"#utility.yul\":11480:11481   */\n      0x00\n        /* \"#utility.yul\":11472:11478   */\n      dup3\n        /* \"#utility.yul\":11468:11482   */\n      add\n        /* \"#utility.yul\":11461:11513   */\n      mstore\n        /* \"#utility.yul\":11344:11520   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11526:11892   */\n    tag_319:\n        /* \"#utility.yul\":11668:11671   */\n      0x00\n        /* \"#utility.yul\":11689:11756   */\n      tag_473\n        /* \"#utility.yul\":11753:11755   */\n      0x1a\n        /* \"#utility.yul\":11748:11751   */\n      dup4\n        /* \"#utility.yul\":11689:11756   */\n      tag_288\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11682:11756   */\n      swap2\n      pop\n        /* \"#utility.yul\":11765:11858   */\n      tag_474\n        /* \"#utility.yul\":11854:11857   */\n      dup3\n        /* \"#utility.yul\":11765:11858   */\n      tag_318\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":11883:11885   */\n      0x20\n        /* \"#utility.yul\":11878:11881   */\n      dup3\n        /* \"#utility.yul\":11874:11886   */\n      add\n        /* \"#utility.yul\":11867:11886   */\n      swap1\n      pop\n        /* \"#utility.yul\":11526:11892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11898:12317   */\n    tag_196:\n        /* \"#utility.yul\":12064:12068   */\n      0x00\n        /* \"#utility.yul\":12102:12104   */\n      0x20\n        /* \"#utility.yul\":12091:12100   */\n      dup3\n        /* \"#utility.yul\":12087:12105   */\n      add\n        /* \"#utility.yul\":12079:12105   */\n      swap1\n      pop\n        /* \"#utility.yul\":12151:12160   */\n      dup2\n        /* \"#utility.yul\":12145:12149   */\n      dup2\n        /* \"#utility.yul\":12141:12161   */\n      sub\n        /* \"#utility.yul\":12137:12138   */\n      0x00\n        /* \"#utility.yul\":12126:12135   */\n      dup4\n        /* \"#utility.yul\":12122:12139   */\n      add\n        /* \"#utility.yul\":12115:12162   */\n      mstore\n        /* \"#utility.yul\":12179:12310   */\n      tag_476\n        /* \"#utility.yul\":12305:12309   */\n      dup2\n        /* \"#utility.yul\":12179:12310   */\n      tag_319\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":12171:12310   */\n      swap1\n      pop\n        /* \"#utility.yul\":11898:12317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12323:12496   */\n    tag_320:\n        /* \"#utility.yul\":12463:12488   */\n      0x456d61696c206d757374206e6f7420626520656d707479000000000000000000\n        /* \"#utility.yul\":12459:12460   */\n      0x00\n        /* \"#utility.yul\":12451:12457   */\n      dup3\n        /* \"#utility.yul\":12447:12461   */\n      add\n        /* \"#utility.yul\":12440:12489   */\n      mstore\n        /* \"#utility.yul\":12323:12496   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12502:12868   */\n    tag_321:\n        /* \"#utility.yul\":12644:12647   */\n      0x00\n        /* \"#utility.yul\":12665:12732   */\n      tag_479\n        /* \"#utility.yul\":12729:12731   */\n      0x17\n        /* \"#utility.yul\":12724:12727   */\n      dup4\n        /* \"#utility.yul\":12665:12732   */\n      tag_288\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":12658:12732   */\n      swap2\n      pop\n        /* \"#utility.yul\":12741:12834   */\n      tag_480\n        /* \"#utility.yul\":12830:12833   */\n      dup3\n        /* \"#utility.yul\":12741:12834   */\n      tag_320\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":12859:12861   */\n      0x20\n        /* \"#utility.yul\":12854:12857   */\n      dup3\n        /* \"#utility.yul\":12850:12862   */\n      add\n        /* \"#utility.yul\":12843:12862   */\n      swap1\n      pop\n        /* \"#utility.yul\":12502:12868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12874:13293   */\n    tag_199:\n        /* \"#utility.yul\":13040:13044   */\n      0x00\n        /* \"#utility.yul\":13078:13080   */\n      0x20\n        /* \"#utility.yul\":13067:13076   */\n      dup3\n        /* \"#utility.yul\":13063:13081   */\n      add\n        /* \"#utility.yul\":13055:13081   */\n      swap1\n      pop\n        /* \"#utility.yul\":13127:13136   */\n      dup2\n        /* \"#utility.yul\":13121:13125   */\n      dup2\n        /* \"#utility.yul\":13117:13137   */\n      sub\n        /* \"#utility.yul\":13113:13114   */\n      0x00\n        /* \"#utility.yul\":13102:13111   */\n      dup4\n        /* \"#utility.yul\":13098:13115   */\n      add\n        /* \"#utility.yul\":13091:13138   */\n      mstore\n        /* \"#utility.yul\":13155:13286   */\n      tag_482\n        /* \"#utility.yul\":13281:13285   */\n      dup2\n        /* \"#utility.yul\":13155:13286   */\n      tag_321\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":13147:13286   */\n      swap1\n      pop\n        /* \"#utility.yul\":12874:13293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13299:13440   */\n    tag_322:\n        /* \"#utility.yul\":13348:13352   */\n      0x00\n        /* \"#utility.yul\":13371:13374   */\n      dup2\n        /* \"#utility.yul\":13363:13374   */\n      swap1\n      pop\n        /* \"#utility.yul\":13394:13397   */\n      dup2\n        /* \"#utility.yul\":13391:13392   */\n      0x00\n        /* \"#utility.yul\":13384:13398   */\n      mstore\n        /* \"#utility.yul\":13428:13432   */\n      0x20\n        /* \"#utility.yul\":13425:13426   */\n      0x00\n        /* \"#utility.yul\":13415:13433   */\n      keccak256\n        /* \"#utility.yul\":13407:13433   */\n      swap1\n      pop\n        /* \"#utility.yul\":13299:13440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13446:13539   */\n    tag_323:\n        /* \"#utility.yul\":13483:13489   */\n      0x00\n        /* \"#utility.yul\":13530:13532   */\n      0x20\n        /* \"#utility.yul\":13525:13527   */\n      0x1f\n        /* \"#utility.yul\":13518:13523   */\n      dup4\n        /* \"#utility.yul\":13514:13528   */\n      add\n        /* \"#utility.yul\":13510:13533   */\n      div\n        /* \"#utility.yul\":13500:13533   */\n      swap1\n      pop\n        /* \"#utility.yul\":13446:13539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13545:13652   */\n    tag_324:\n        /* \"#utility.yul\":13589:13597   */\n      0x00\n        /* \"#utility.yul\":13639:13644   */\n      dup3\n        /* \"#utility.yul\":13633:13637   */\n      dup3\n        /* \"#utility.yul\":13629:13645   */\n      shl\n        /* \"#utility.yul\":13608:13645   */\n      swap1\n      pop\n        /* \"#utility.yul\":13545:13652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13658:14051   */\n    tag_325:\n        /* \"#utility.yul\":13727:13733   */\n      0x00\n        /* \"#utility.yul\":13777:13778   */\n      0x08\n        /* \"#utility.yul\":13765:13775   */\n      dup4\n        /* \"#utility.yul\":13761:13779   */\n      mul\n        /* \"#utility.yul\":13800:13897   */\n      tag_487\n        /* \"#utility.yul\":13830:13896   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13819:13828   */\n      dup3\n        /* \"#utility.yul\":13800:13897   */\n      tag_324\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":13918:13957   */\n      tag_488\n        /* \"#utility.yul\":13948:13956   */\n      dup7\n        /* \"#utility.yul\":13937:13946   */\n      dup4\n        /* \"#utility.yul\":13918:13957   */\n      tag_324\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13906:13957   */\n      swap6\n      pop\n        /* \"#utility.yul\":13990:13994   */\n      dup1\n        /* \"#utility.yul\":13986:13995   */\n      not\n        /* \"#utility.yul\":13979:13984   */\n      dup5\n        /* \"#utility.yul\":13975:13996   */\n      and\n        /* \"#utility.yul\":13966:13996   */\n      swap4\n      pop\n        /* \"#utility.yul\":14039:14043   */\n      dup1\n        /* \"#utility.yul\":14029:14037   */\n      dup7\n        /* \"#utility.yul\":14025:14044   */\n      and\n        /* \"#utility.yul\":14018:14023   */\n      dup5\n        /* \"#utility.yul\":14015:14045   */\n      or\n        /* \"#utility.yul\":14005:14045   */\n      swap3\n      pop\n        /* \"#utility.yul\":13734:14051   */\n      pop\n      pop\n        /* \"#utility.yul\":13658:14051   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14057:14117   */\n    tag_326:\n        /* \"#utility.yul\":14085:14088   */\n      0x00\n        /* \"#utility.yul\":14106:14111   */\n      dup2\n        /* \"#utility.yul\":14099:14111   */\n      swap1\n      pop\n        /* \"#utility.yul\":14057:14117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14123:14265   */\n    tag_327:\n        /* \"#utility.yul\":14173:14182   */\n      0x00\n        /* \"#utility.yul\":14206:14259   */\n      tag_491\n        /* \"#utility.yul\":14224:14258   */\n      tag_492\n        /* \"#utility.yul\":14233:14257   */\n      tag_493\n        /* \"#utility.yul\":14251:14256   */\n      dup5\n        /* \"#utility.yul\":14233:14257   */\n      tag_299\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":14224:14258   */\n      tag_326\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":14206:14259   */\n      tag_299\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":14193:14259   */\n      swap1\n      pop\n        /* \"#utility.yul\":14123:14265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14271:14346   */\n    tag_328:\n        /* \"#utility.yul\":14314:14317   */\n      0x00\n        /* \"#utility.yul\":14335:14340   */\n      dup2\n        /* \"#utility.yul\":14328:14340   */\n      swap1\n      pop\n        /* \"#utility.yul\":14271:14346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14352:14621   */\n    tag_329:\n        /* \"#utility.yul\":14462:14501   */\n      tag_496\n        /* \"#utility.yul\":14493:14500   */\n      dup4\n        /* \"#utility.yul\":14462:14501   */\n      tag_327\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":14523:14614   */\n      tag_497\n        /* \"#utility.yul\":14572:14613   */\n      tag_498\n        /* \"#utility.yul\":14596:14612   */\n      dup3\n        /* \"#utility.yul\":14572:14613   */\n      tag_328\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":14564:14570   */\n      dup5\n        /* \"#utility.yul\":14557:14561   */\n      dup5\n        /* \"#utility.yul\":14551:14562   */\n      sload\n        /* \"#utility.yul\":14523:14614   */\n      tag_325\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":14517:14521   */\n      dup3\n        /* \"#utility.yul\":14510:14615   */\n      sstore\n        /* \"#utility.yul\":14428:14621   */\n      pop\n        /* \"#utility.yul\":14352:14621   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14627:14700   */\n    tag_330:\n        /* \"#utility.yul\":14672:14675   */\n      0x00\n        /* \"#utility.yul\":14627:14700   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14706:14895   */\n    tag_331:\n        /* \"#utility.yul\":14783:14815   */\n      tag_501\n      tag_330\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":14824:14889   */\n      tag_502\n        /* \"#utility.yul\":14882:14888   */\n      dup2\n        /* \"#utility.yul\":14874:14880   */\n      dup5\n        /* \"#utility.yul\":14868:14872   */\n      dup5\n        /* \"#utility.yul\":14824:14889   */\n      tag_329\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":14759:14895   */\n      pop\n        /* \"#utility.yul\":14706:14895   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14901:15087   */\n    tag_332:\n        /* \"#utility.yul\":14961:15081   */\n    tag_504:\n        /* \"#utility.yul\":14978:14981   */\n      dup2\n        /* \"#utility.yul\":14971:14976   */\n      dup2\n        /* \"#utility.yul\":14968:14982   */\n      lt\n        /* \"#utility.yul\":14961:15081   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":15032:15071   */\n      tag_507\n        /* \"#utility.yul\":15069:15070   */\n      0x00\n        /* \"#utility.yul\":15062:15067   */\n      dup3\n        /* \"#utility.yul\":15032:15071   */\n      tag_331\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":15005:15006   */\n      0x01\n        /* \"#utility.yul\":14998:15003   */\n      dup2\n        /* \"#utility.yul\":14994:15007   */\n      add\n        /* \"#utility.yul\":14985:15007   */\n      swap1\n      pop\n        /* \"#utility.yul\":14961:15081   */\n      jump(tag_504)\n    tag_506:\n        /* \"#utility.yul\":14901:15087   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15093:15636   */\n    tag_333:\n        /* \"#utility.yul\":15194:15196   */\n      0x1f\n        /* \"#utility.yul\":15189:15192   */\n      dup3\n        /* \"#utility.yul\":15186:15197   */\n      gt\n        /* \"#utility.yul\":15183:15629   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":15228:15266   */\n      tag_510\n        /* \"#utility.yul\":15260:15265   */\n      dup2\n        /* \"#utility.yul\":15228:15266   */\n      tag_322\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":15312:15341   */\n      tag_511\n        /* \"#utility.yul\":15330:15340   */\n      dup5\n        /* \"#utility.yul\":15312:15341   */\n      tag_323\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":15302:15310   */\n      dup2\n        /* \"#utility.yul\":15298:15342   */\n      add\n        /* \"#utility.yul\":15495:15497   */\n      0x20\n        /* \"#utility.yul\":15483:15493   */\n      dup6\n        /* \"#utility.yul\":15480:15498   */\n      lt\n        /* \"#utility.yul\":15477:15526   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":15516:15524   */\n      dup2\n        /* \"#utility.yul\":15501:15524   */\n      swap1\n      pop\n        /* \"#utility.yul\":15477:15526   */\n    tag_512:\n        /* \"#utility.yul\":15539:15619   */\n      tag_513\n        /* \"#utility.yul\":15595:15617   */\n      tag_514\n        /* \"#utility.yul\":15613:15616   */\n      dup6\n        /* \"#utility.yul\":15595:15617   */\n      tag_323\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":15585:15593   */\n      dup4\n        /* \"#utility.yul\":15581:15618   */\n      add\n        /* \"#utility.yul\":15568:15579   */\n      dup3\n        /* \"#utility.yul\":15539:15619   */\n      tag_332\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":15198:15629   */\n      pop\n      pop\n        /* \"#utility.yul\":15183:15629   */\n    tag_509:\n        /* \"#utility.yul\":15093:15636   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15642:15759   */\n    tag_334:\n        /* \"#utility.yul\":15696:15704   */\n      0x00\n        /* \"#utility.yul\":15746:15751   */\n      dup3\n        /* \"#utility.yul\":15740:15744   */\n      dup3\n        /* \"#utility.yul\":15736:15752   */\n      shr\n        /* \"#utility.yul\":15715:15752   */\n      swap1\n      pop\n        /* \"#utility.yul\":15642:15759   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15765:15934   */\n    tag_335:\n        /* \"#utility.yul\":15809:15815   */\n      0x00\n        /* \"#utility.yul\":15842:15893   */\n      tag_517\n        /* \"#utility.yul\":15890:15891   */\n      0x00\n        /* \"#utility.yul\":15886:15892   */\n      not\n        /* \"#utility.yul\":15878:15883   */\n      dup5\n        /* \"#utility.yul\":15875:15876   */\n      0x08\n        /* \"#utility.yul\":15871:15884   */\n      mul\n        /* \"#utility.yul\":15842:15893   */\n      tag_334\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":15838:15894   */\n      not\n        /* \"#utility.yul\":15923:15927   */\n      dup1\n        /* \"#utility.yul\":15917:15921   */\n      dup4\n        /* \"#utility.yul\":15913:15928   */\n      and\n        /* \"#utility.yul\":15903:15928   */\n      swap2\n      pop\n        /* \"#utility.yul\":15816:15934   */\n      pop\n        /* \"#utility.yul\":15765:15934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15939:16234   */\n    tag_336:\n        /* \"#utility.yul\":16015:16019   */\n      0x00\n        /* \"#utility.yul\":16161:16190   */\n      tag_519\n        /* \"#utility.yul\":16186:16189   */\n      dup4\n        /* \"#utility.yul\":16180:16184   */\n      dup4\n        /* \"#utility.yul\":16161:16190   */\n      tag_335\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":16153:16190   */\n      swap2\n      pop\n        /* \"#utility.yul\":16223:16226   */\n      dup3\n        /* \"#utility.yul\":16220:16221   */\n      0x02\n        /* \"#utility.yul\":16216:16227   */\n      mul\n        /* \"#utility.yul\":16210:16214   */\n      dup3\n        /* \"#utility.yul\":16207:16228   */\n      or\n        /* \"#utility.yul\":16199:16228   */\n      swap1\n      pop\n        /* \"#utility.yul\":15939:16234   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16239:17634   */\n    tag_201:\n        /* \"#utility.yul\":16356:16393   */\n      tag_521\n        /* \"#utility.yul\":16389:16392   */\n      dup3\n        /* \"#utility.yul\":16356:16393   */\n      tag_287\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":16458:16476   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16450:16456   */\n      dup2\n        /* \"#utility.yul\":16447:16477   */\n      gt\n        /* \"#utility.yul\":16444:16500   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":16480:16498   */\n      tag_523\n      tag_310\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":16444:16500   */\n    tag_522:\n        /* \"#utility.yul\":16524:16562   */\n      tag_524\n        /* \"#utility.yul\":16556:16560   */\n      dup3\n        /* \"#utility.yul\":16550:16561   */\n      sload\n        /* \"#utility.yul\":16524:16562   */\n      tag_132\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":16609:16676   */\n      tag_525\n        /* \"#utility.yul\":16669:16675   */\n      dup3\n        /* \"#utility.yul\":16661:16667   */\n      dup3\n        /* \"#utility.yul\":16655:16659   */\n      dup6\n        /* \"#utility.yul\":16609:16676   */\n      tag_333\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":16703:16704   */\n      0x00\n        /* \"#utility.yul\":16727:16731   */\n      0x20\n        /* \"#utility.yul\":16714:16731   */\n      swap1\n      pop\n        /* \"#utility.yul\":16759:16761   */\n      0x1f\n        /* \"#utility.yul\":16751:16757   */\n      dup4\n        /* \"#utility.yul\":16748:16762   */\n      gt\n        /* \"#utility.yul\":16776:16777   */\n      0x01\n        /* \"#utility.yul\":16771:17389   */\n      dup2\n      eq\n      tag_527\n      jumpi\n        /* \"#utility.yul\":17433:17434   */\n      0x00\n        /* \"#utility.yul\":17450:17456   */\n      dup5\n        /* \"#utility.yul\":17447:17524   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":17499:17508   */\n      dup3\n        /* \"#utility.yul\":17494:17497   */\n      dup8\n        /* \"#utility.yul\":17490:17509   */\n      add\n        /* \"#utility.yul\":17484:17510   */\n      mload\n        /* \"#utility.yul\":17475:17510   */\n      swap1\n      pop\n        /* \"#utility.yul\":17447:17524   */\n    tag_528:\n        /* \"#utility.yul\":17550:17617   */\n      tag_529\n        /* \"#utility.yul\":17610:17616   */\n      dup6\n        /* \"#utility.yul\":17603:17608   */\n      dup3\n        /* \"#utility.yul\":17550:17617   */\n      tag_336\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":17544:17548   */\n      dup7\n        /* \"#utility.yul\":17537:17618   */\n      sstore\n        /* \"#utility.yul\":17406:17628   */\n      pop\n        /* \"#utility.yul\":16741:17628   */\n      jump(tag_526)\n        /* \"#utility.yul\":16771:17389   */\n    tag_527:\n        /* \"#utility.yul\":16823:16827   */\n      0x1f\n        /* \"#utility.yul\":16819:16828   */\n      not\n        /* \"#utility.yul\":16811:16817   */\n      dup5\n        /* \"#utility.yul\":16807:16829   */\n      and\n        /* \"#utility.yul\":16857:16894   */\n      tag_530\n        /* \"#utility.yul\":16889:16893   */\n      dup7\n        /* \"#utility.yul\":16857:16894   */\n      tag_322\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":16916:16917   */\n      0x00\n        /* \"#utility.yul\":16930:17138   */\n    tag_531:\n        /* \"#utility.yul\":16944:16951   */\n      dup3\n        /* \"#utility.yul\":16941:16942   */\n      dup2\n        /* \"#utility.yul\":16938:16952   */\n      lt\n        /* \"#utility.yul\":16930:17138   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":17023:17032   */\n      dup5\n        /* \"#utility.yul\":17018:17021   */\n      dup10\n        /* \"#utility.yul\":17014:17033   */\n      add\n        /* \"#utility.yul\":17008:17034   */\n      mload\n        /* \"#utility.yul\":17000:17006   */\n      dup3\n        /* \"#utility.yul\":16993:17035   */\n      sstore\n        /* \"#utility.yul\":17074:17075   */\n      0x01\n        /* \"#utility.yul\":17066:17072   */\n      dup3\n        /* \"#utility.yul\":17062:17076   */\n      add\n        /* \"#utility.yul\":17052:17076   */\n      swap2\n      pop\n        /* \"#utility.yul\":17121:17123   */\n      0x20\n        /* \"#utility.yul\":17110:17119   */\n      dup6\n        /* \"#utility.yul\":17106:17124   */\n      add\n        /* \"#utility.yul\":17093:17124   */\n      swap5\n      pop\n        /* \"#utility.yul\":16967:16971   */\n      0x20\n        /* \"#utility.yul\":16964:16965   */\n      dup2\n        /* \"#utility.yul\":16960:16972   */\n      add\n        /* \"#utility.yul\":16955:16972   */\n      swap1\n      pop\n        /* \"#utility.yul\":16930:17138   */\n      jump(tag_531)\n    tag_533:\n        /* \"#utility.yul\":17166:17172   */\n      dup7\n        /* \"#utility.yul\":17157:17164   */\n      dup4\n        /* \"#utility.yul\":17154:17173   */\n      lt\n        /* \"#utility.yul\":17151:17330   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":17224:17233   */\n      dup5\n        /* \"#utility.yul\":17219:17222   */\n      dup10\n        /* \"#utility.yul\":17215:17234   */\n      add\n        /* \"#utility.yul\":17209:17235   */\n      mload\n        /* \"#utility.yul\":17267:17315   */\n      tag_535\n        /* \"#utility.yul\":17309:17313   */\n      0x1f\n        /* \"#utility.yul\":17301:17307   */\n      dup10\n        /* \"#utility.yul\":17297:17314   */\n      and\n        /* \"#utility.yul\":17286:17295   */\n      dup3\n        /* \"#utility.yul\":17267:17315   */\n      tag_335\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":17259:17265   */\n      dup4\n        /* \"#utility.yul\":17252:17316   */\n      sstore\n        /* \"#utility.yul\":17174:17330   */\n      pop\n        /* \"#utility.yul\":17151:17330   */\n    tag_534:\n        /* \"#utility.yul\":17376:17377   */\n      0x01\n        /* \"#utility.yul\":17372:17373   */\n      0x02\n        /* \"#utility.yul\":17364:17370   */\n      dup9\n        /* \"#utility.yul\":17360:17374   */\n      mul\n        /* \"#utility.yul\":17356:17378   */\n      add\n        /* \"#utility.yul\":17350:17354   */\n      dup9\n        /* \"#utility.yul\":17343:17379   */\n      sstore\n        /* \"#utility.yul\":16778:17389   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16741:17628   */\n    tag_526:\n      pop\n        /* \"#utility.yul\":16331:17634   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16239:17634   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17640:17820   */\n    tag_337:\n        /* \"#utility.yul\":17688:17765   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17685:17686   */\n      0x00\n        /* \"#utility.yul\":17678:17766   */\n      mstore\n        /* \"#utility.yul\":17785:17789   */\n      0x11\n        /* \"#utility.yul\":17782:17783   */\n      0x04\n        /* \"#utility.yul\":17775:17790   */\n      mstore\n        /* \"#utility.yul\":17809:17813   */\n      0x24\n        /* \"#utility.yul\":17806:17807   */\n      0x00\n        /* \"#utility.yul\":17799:17814   */\n      revert\n        /* \"#utility.yul\":17826:17928   */\n    tag_338:\n        /* \"#utility.yul\":17868:17876   */\n      0x00\n        /* \"#utility.yul\":17915:17920   */\n      dup2\n        /* \"#utility.yul\":17912:17913   */\n      0x01\n        /* \"#utility.yul\":17908:17921   */\n      shr\n        /* \"#utility.yul\":17887:17921   */\n      swap1\n      pop\n        /* \"#utility.yul\":17826:17928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17934:18782   */\n    tag_339:\n        /* \"#utility.yul\":17995:18000   */\n      0x00\n        /* \"#utility.yul\":18002:18006   */\n      dup1\n        /* \"#utility.yul\":18026:18032   */\n      dup3\n        /* \"#utility.yul\":18017:18032   */\n      swap2\n      pop\n        /* \"#utility.yul\":18050:18055   */\n      dup4\n        /* \"#utility.yul\":18041:18055   */\n      swap1\n      pop\n        /* \"#utility.yul\":18064:18776   */\n    tag_539:\n        /* \"#utility.yul\":18085:18086   */\n      0x01\n        /* \"#utility.yul\":18075:18083   */\n      dup6\n        /* \"#utility.yul\":18072:18087   */\n      gt\n        /* \"#utility.yul\":18064:18776   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":18180:18184   */\n      dup1\n        /* \"#utility.yul\":18175:18178   */\n      dup7\n        /* \"#utility.yul\":18171:18185   */\n      div\n        /* \"#utility.yul\":18165:18169   */\n      dup2\n        /* \"#utility.yul\":18162:18186   */\n      gt\n        /* \"#utility.yul\":18159:18209   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":18189:18207   */\n      tag_543\n      tag_337\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":18159:18209   */\n    tag_542:\n        /* \"#utility.yul\":18239:18240   */\n      0x01\n        /* \"#utility.yul\":18229:18237   */\n      dup6\n        /* \"#utility.yul\":18225:18241   */\n      and\n        /* \"#utility.yul\":18222:18673   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":18654:18658   */\n      dup1\n        /* \"#utility.yul\":18647:18652   */\n      dup3\n        /* \"#utility.yul\":18643:18659   */\n      mul\n        /* \"#utility.yul\":18634:18659   */\n      swap2\n      pop\n        /* \"#utility.yul\":18222:18673   */\n    tag_544:\n        /* \"#utility.yul\":18704:18708   */\n      dup1\n        /* \"#utility.yul\":18698:18702   */\n      dup2\n        /* \"#utility.yul\":18694:18709   */\n      mul\n        /* \"#utility.yul\":18686:18709   */\n      swap1\n      pop\n        /* \"#utility.yul\":18734:18766   */\n      tag_545\n        /* \"#utility.yul\":18757:18765   */\n      dup6\n        /* \"#utility.yul\":18734:18766   */\n      tag_338\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":18722:18766   */\n      swap5\n      pop\n        /* \"#utility.yul\":18064:18776   */\n      jump(tag_539)\n    tag_541:\n        /* \"#utility.yul\":17934:18782   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18788:19861   */\n    tag_340:\n        /* \"#utility.yul\":18842:18847   */\n      0x00\n        /* \"#utility.yul\":19033:19041   */\n      dup3\n        /* \"#utility.yul\":19023:19063   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":19054:19055   */\n      0x01\n        /* \"#utility.yul\":19045:19055   */\n      swap1\n      pop\n        /* \"#utility.yul\":19056:19061   */\n      jump(tag_546)\n        /* \"#utility.yul\":19023:19063   */\n    tag_547:\n        /* \"#utility.yul\":19082:19086   */\n      dup2\n        /* \"#utility.yul\":19072:19108   */\n      tag_548\n      jumpi\n        /* \"#utility.yul\":19099:19100   */\n      0x00\n        /* \"#utility.yul\":19090:19100   */\n      swap1\n      pop\n        /* \"#utility.yul\":19101:19106   */\n      jump(tag_546)\n        /* \"#utility.yul\":19072:19108   */\n    tag_548:\n        /* \"#utility.yul\":19168:19172   */\n      dup2\n        /* \"#utility.yul\":19216:19217   */\n      0x01\n        /* \"#utility.yul\":19211:19238   */\n      dup2\n      eq\n      tag_550\n      jumpi\n        /* \"#utility.yul\":19252:19253   */\n      0x02\n        /* \"#utility.yul\":19247:19438   */\n      dup2\n      eq\n      tag_551\n      jumpi\n        /* \"#utility.yul\":19161:19438   */\n      jump(tag_549)\n        /* \"#utility.yul\":19211:19238   */\n    tag_550:\n        /* \"#utility.yul\":19229:19230   */\n      0x01\n        /* \"#utility.yul\":19220:19230   */\n      swap2\n      pop\n        /* \"#utility.yul\":19231:19236   */\n      pop\n      jump(tag_546)\n        /* \"#utility.yul\":19247:19438   */\n    tag_551:\n        /* \"#utility.yul\":19292:19295   */\n      0xff\n        /* \"#utility.yul\":19282:19290   */\n      dup5\n        /* \"#utility.yul\":19279:19296   */\n      gt\n        /* \"#utility.yul\":19276:19319   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":19299:19317   */\n      tag_553\n      tag_337\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":19276:19319   */\n    tag_552:\n        /* \"#utility.yul\":19348:19356   */\n      dup4\n        /* \"#utility.yul\":19345:19346   */\n      0x02\n        /* \"#utility.yul\":19341:19357   */\n      exp\n        /* \"#utility.yul\":19332:19357   */\n      swap2\n      pop\n        /* \"#utility.yul\":19383:19386   */\n      dup5\n        /* \"#utility.yul\":19376:19381   */\n      dup3\n        /* \"#utility.yul\":19373:19387   */\n      gt\n        /* \"#utility.yul\":19370:19410   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":19390:19408   */\n      tag_555\n      tag_337\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":19370:19410   */\n    tag_554:\n        /* \"#utility.yul\":19423:19428   */\n      pop\n      jump(tag_546)\n        /* \"#utility.yul\":19161:19438   */\n    tag_549:\n      pop\n        /* \"#utility.yul\":19547:19549   */\n      0x20\n        /* \"#utility.yul\":19537:19545   */\n      dup4\n        /* \"#utility.yul\":19534:19550   */\n      lt\n        /* \"#utility.yul\":19528:19531   */\n      0x0133\n        /* \"#utility.yul\":19522:19526   */\n      dup4\n        /* \"#utility.yul\":19519:19532   */\n      lt\n        /* \"#utility.yul\":19515:19551   */\n      and\n        /* \"#utility.yul\":19497:19499   */\n      0x4e\n        /* \"#utility.yul\":19487:19495   */\n      dup5\n        /* \"#utility.yul\":19484:19500   */\n      lt\n        /* \"#utility.yul\":19479:19481   */\n      0x0b\n        /* \"#utility.yul\":19473:19477   */\n      dup5\n        /* \"#utility.yul\":19470:19482   */\n      lt\n        /* \"#utility.yul\":19466:19501   */\n      and\n        /* \"#utility.yul\":19450:19561   */\n      or\n        /* \"#utility.yul\":19447:19693   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":19603:19611   */\n      dup3\n        /* \"#utility.yul\":19597:19601   */\n      dup3\n        /* \"#utility.yul\":19593:19612   */\n      exp\n        /* \"#utility.yul\":19584:19612   */\n      swap1\n      pop\n        /* \"#utility.yul\":19638:19641   */\n      dup4\n        /* \"#utility.yul\":19631:19636   */\n      dup2\n        /* \"#utility.yul\":19628:19642   */\n      gt\n        /* \"#utility.yul\":19625:19665   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":19645:19663   */\n      tag_558\n      tag_337\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":19625:19665   */\n    tag_557:\n        /* \"#utility.yul\":19678:19683   */\n      jump(tag_546)\n        /* \"#utility.yul\":19447:19693   */\n    tag_556:\n        /* \"#utility.yul\":19718:19760   */\n      tag_559\n        /* \"#utility.yul\":19756:19759   */\n      dup5\n        /* \"#utility.yul\":19746:19754   */\n      dup5\n        /* \"#utility.yul\":19740:19744   */\n      dup5\n        /* \"#utility.yul\":19737:19738   */\n      0x01\n        /* \"#utility.yul\":19718:19760   */\n      tag_339\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":19703:19760   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":19792:19796   */\n      dup2\n        /* \"#utility.yul\":19787:19790   */\n      dup5\n        /* \"#utility.yul\":19783:19797   */\n      div\n        /* \"#utility.yul\":19776:19781   */\n      dup2\n        /* \"#utility.yul\":19773:19798   */\n      gt\n        /* \"#utility.yul\":19770:19821   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":19801:19819   */\n      tag_561\n      tag_337\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":19770:19821   */\n    tag_560:\n        /* \"#utility.yul\":19850:19854   */\n      dup2\n        /* \"#utility.yul\":19843:19848   */\n      dup2\n        /* \"#utility.yul\":19839:19855   */\n      mul\n        /* \"#utility.yul\":19830:19855   */\n      swap1\n      pop\n        /* \"#utility.yul\":18788:19861   */\n    tag_546:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19867:20148   */\n    tag_207:\n        /* \"#utility.yul\":19925:19930   */\n      0x00\n        /* \"#utility.yul\":19949:19972   */\n      tag_563\n        /* \"#utility.yul\":19967:19971   */\n      dup3\n        /* \"#utility.yul\":19949:19972   */\n      tag_299\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":19941:19972   */\n      swap2\n      pop\n        /* \"#utility.yul\":19993:20018   */\n      tag_564\n        /* \"#utility.yul\":20009:20017   */\n      dup4\n        /* \"#utility.yul\":19993:20018   */\n      tag_305\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":19981:20018   */\n      swap3\n      pop\n        /* \"#utility.yul\":20037:20141   */\n      tag_565\n        /* \"#utility.yul\":20074:20140   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20064:20072   */\n      dup5\n        /* \"#utility.yul\":20058:20062   */\n      dup5\n        /* \"#utility.yul\":20037:20141   */\n      tag_340\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":20028:20141   */\n      swap1\n      pop\n        /* \"#utility.yul\":19867:20148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20154:20564   */\n    tag_209:\n        /* \"#utility.yul\":20194:20201   */\n      0x00\n        /* \"#utility.yul\":20217:20237   */\n      tag_567\n        /* \"#utility.yul\":20235:20236   */\n      dup3\n        /* \"#utility.yul\":20217:20237   */\n      tag_299\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":20212:20237   */\n      swap2\n      pop\n        /* \"#utility.yul\":20251:20271   */\n      tag_568\n        /* \"#utility.yul\":20269:20270   */\n      dup4\n        /* \"#utility.yul\":20251:20271   */\n      tag_299\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":20246:20271   */\n      swap3\n      pop\n        /* \"#utility.yul\":20306:20307   */\n      dup3\n        /* \"#utility.yul\":20303:20304   */\n      dup3\n        /* \"#utility.yul\":20299:20308   */\n      mul\n        /* \"#utility.yul\":20328:20358   */\n      tag_569\n        /* \"#utility.yul\":20346:20357   */\n      dup2\n        /* \"#utility.yul\":20328:20358   */\n      tag_299\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":20317:20358   */\n      swap2\n      pop\n        /* \"#utility.yul\":20507:20508   */\n      dup3\n        /* \"#utility.yul\":20498:20505   */\n      dup3\n        /* \"#utility.yul\":20494:20509   */\n      div\n        /* \"#utility.yul\":20491:20492   */\n      dup5\n        /* \"#utility.yul\":20488:20510   */\n      eq\n        /* \"#utility.yul\":20468:20469   */\n      dup4\n        /* \"#utility.yul\":20461:20470   */\n      iszero\n        /* \"#utility.yul\":20441:20524   */\n      or\n        /* \"#utility.yul\":20418:20557   */\n      tag_570\n      jumpi\n        /* \"#utility.yul\":20537:20555   */\n      tag_571\n      tag_337\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":20418:20557   */\n    tag_570:\n        /* \"#utility.yul\":20202:20564   */\n      pop\n        /* \"#utility.yul\":20154:20564   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20570:20750   */\n    tag_341:\n        /* \"#utility.yul\":20618:20695   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20615:20616   */\n      0x00\n        /* \"#utility.yul\":20608:20696   */\n      mstore\n        /* \"#utility.yul\":20715:20719   */\n      0x12\n        /* \"#utility.yul\":20712:20713   */\n      0x04\n        /* \"#utility.yul\":20705:20720   */\n      mstore\n        /* \"#utility.yul\":20739:20743   */\n      0x24\n        /* \"#utility.yul\":20736:20737   */\n      0x00\n        /* \"#utility.yul\":20729:20744   */\n      revert\n        /* \"#utility.yul\":20756:20941   */\n    tag_211:\n        /* \"#utility.yul\":20796:20797   */\n      0x00\n        /* \"#utility.yul\":20813:20833   */\n      tag_574\n        /* \"#utility.yul\":20831:20832   */\n      dup3\n        /* \"#utility.yul\":20813:20833   */\n      tag_299\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":20808:20833   */\n      swap2\n      pop\n        /* \"#utility.yul\":20847:20867   */\n      tag_575\n        /* \"#utility.yul\":20865:20866   */\n      dup4\n        /* \"#utility.yul\":20847:20867   */\n      tag_299\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":20842:20867   */\n      swap3\n      pop\n        /* \"#utility.yul\":20886:20887   */\n      dup3\n        /* \"#utility.yul\":20876:20911   */\n      tag_576\n      jumpi\n        /* \"#utility.yul\":20891:20909   */\n      tag_577\n      tag_341\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":20876:20911   */\n    tag_576:\n        /* \"#utility.yul\":20933:20934   */\n      dup3\n        /* \"#utility.yul\":20930:20931   */\n      dup3\n        /* \"#utility.yul\":20926:20935   */\n      div\n        /* \"#utility.yul\":20921:20935   */\n      swap1\n      pop\n        /* \"#utility.yul\":20756:20941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20947:21122   */\n    tag_342:\n        /* \"#utility.yul\":21087:21114   */\n      0x496e636f72726563742045544820616d6f756e742073656e7400000000000000\n        /* \"#utility.yul\":21083:21084   */\n      0x00\n        /* \"#utility.yul\":21075:21081   */\n      dup3\n        /* \"#utility.yul\":21071:21085   */\n      add\n        /* \"#utility.yul\":21064:21115   */\n      mstore\n        /* \"#utility.yul\":20947:21122   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21128:21494   */\n    tag_343:\n        /* \"#utility.yul\":21270:21273   */\n      0x00\n        /* \"#utility.yul\":21291:21358   */\n      tag_580\n        /* \"#utility.yul\":21355:21357   */\n      0x19\n        /* \"#utility.yul\":21350:21353   */\n      dup4\n        /* \"#utility.yul\":21291:21358   */\n      tag_288\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":21284:21358   */\n      swap2\n      pop\n        /* \"#utility.yul\":21367:21460   */\n      tag_581\n        /* \"#utility.yul\":21456:21459   */\n      dup3\n        /* \"#utility.yul\":21367:21460   */\n      tag_342\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":21485:21487   */\n      0x20\n        /* \"#utility.yul\":21480:21483   */\n      dup3\n        /* \"#utility.yul\":21476:21488   */\n      add\n        /* \"#utility.yul\":21469:21488   */\n      swap1\n      pop\n        /* \"#utility.yul\":21128:21494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21500:21919   */\n    tag_214:\n        /* \"#utility.yul\":21666:21670   */\n      0x00\n        /* \"#utility.yul\":21704:21706   */\n      0x20\n        /* \"#utility.yul\":21693:21702   */\n      dup3\n        /* \"#utility.yul\":21689:21707   */\n      add\n        /* \"#utility.yul\":21681:21707   */\n      swap1\n      pop\n        /* \"#utility.yul\":21753:21762   */\n      dup2\n        /* \"#utility.yul\":21747:21751   */\n      dup2\n        /* \"#utility.yul\":21743:21763   */\n      sub\n        /* \"#utility.yul\":21739:21740   */\n      0x00\n        /* \"#utility.yul\":21728:21737   */\n      dup4\n        /* \"#utility.yul\":21724:21741   */\n      add\n        /* \"#utility.yul\":21717:21764   */\n      mstore\n        /* \"#utility.yul\":21781:21912   */\n      tag_583\n        /* \"#utility.yul\":21907:21911   */\n      dup2\n        /* \"#utility.yul\":21781:21912   */\n      tag_343\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":21773:21912   */\n      swap1\n      pop\n        /* \"#utility.yul\":21500:21919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21925:22098   */\n    tag_344:\n        /* \"#utility.yul\":22065:22090   */\n      0x496e73756666696369656e74204e422062616c616e6365000000000000000000\n        /* \"#utility.yul\":22061:22062   */\n      0x00\n        /* \"#utility.yul\":22053:22059   */\n      dup3\n        /* \"#utility.yul\":22049:22063   */\n      add\n        /* \"#utility.yul\":22042:22091   */\n      mstore\n        /* \"#utility.yul\":21925:22098   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22104:22470   */\n    tag_345:\n        /* \"#utility.yul\":22246:22249   */\n      0x00\n        /* \"#utility.yul\":22267:22334   */\n      tag_586\n        /* \"#utility.yul\":22331:22333   */\n      0x17\n        /* \"#utility.yul\":22326:22329   */\n      dup4\n        /* \"#utility.yul\":22267:22334   */\n      tag_288\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":22260:22334   */\n      swap2\n      pop\n        /* \"#utility.yul\":22343:22436   */\n      tag_587\n        /* \"#utility.yul\":22432:22435   */\n      dup3\n        /* \"#utility.yul\":22343:22436   */\n      tag_344\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":22461:22463   */\n      0x20\n        /* \"#utility.yul\":22456:22459   */\n      dup3\n        /* \"#utility.yul\":22452:22464   */\n      add\n        /* \"#utility.yul\":22445:22464   */\n      swap1\n      pop\n        /* \"#utility.yul\":22104:22470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22476:22895   */\n    tag_226:\n        /* \"#utility.yul\":22642:22646   */\n      0x00\n        /* \"#utility.yul\":22680:22682   */\n      0x20\n        /* \"#utility.yul\":22669:22678   */\n      dup3\n        /* \"#utility.yul\":22665:22683   */\n      add\n        /* \"#utility.yul\":22657:22683   */\n      swap1\n      pop\n        /* \"#utility.yul\":22729:22738   */\n      dup2\n        /* \"#utility.yul\":22723:22727   */\n      dup2\n        /* \"#utility.yul\":22719:22739   */\n      sub\n        /* \"#utility.yul\":22715:22716   */\n      0x00\n        /* \"#utility.yul\":22704:22713   */\n      dup4\n        /* \"#utility.yul\":22700:22717   */\n      add\n        /* \"#utility.yul\":22693:22740   */\n      mstore\n        /* \"#utility.yul\":22757:22888   */\n      tag_589\n        /* \"#utility.yul\":22883:22887   */\n      dup2\n        /* \"#utility.yul\":22757:22888   */\n      tag_345\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":22749:22888   */\n      swap1\n      pop\n        /* \"#utility.yul\":22476:22895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22901:23343   */\n    tag_246:\n        /* \"#utility.yul\":23050:23054   */\n      0x00\n        /* \"#utility.yul\":23088:23090   */\n      0x60\n        /* \"#utility.yul\":23077:23086   */\n      dup3\n        /* \"#utility.yul\":23073:23091   */\n      add\n        /* \"#utility.yul\":23065:23091   */\n      swap1\n      pop\n        /* \"#utility.yul\":23101:23172   */\n      tag_591\n        /* \"#utility.yul\":23169:23170   */\n      0x00\n        /* \"#utility.yul\":23158:23167   */\n      dup4\n        /* \"#utility.yul\":23154:23171   */\n      add\n        /* \"#utility.yul\":23145:23151   */\n      dup7\n        /* \"#utility.yul\":23101:23172   */\n      tag_307\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":23182:23254   */\n      tag_592\n        /* \"#utility.yul\":23250:23252   */\n      0x20\n        /* \"#utility.yul\":23239:23248   */\n      dup4\n        /* \"#utility.yul\":23235:23253   */\n      add\n        /* \"#utility.yul\":23226:23232   */\n      dup6\n        /* \"#utility.yul\":23182:23254   */\n      tag_304\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":23264:23336   */\n      tag_593\n        /* \"#utility.yul\":23332:23334   */\n      0x40\n        /* \"#utility.yul\":23321:23330   */\n      dup4\n        /* \"#utility.yul\":23317:23335   */\n      add\n        /* \"#utility.yul\":23308:23314   */\n      dup5\n        /* \"#utility.yul\":23264:23336   */\n      tag_304\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":22901:23343   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23349:23540   */\n    tag_280:\n        /* \"#utility.yul\":23389:23392   */\n      0x00\n        /* \"#utility.yul\":23408:23428   */\n      tag_595\n        /* \"#utility.yul\":23426:23427   */\n      dup3\n        /* \"#utility.yul\":23408:23428   */\n      tag_299\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":23403:23428   */\n      swap2\n      pop\n        /* \"#utility.yul\":23442:23462   */\n      tag_596\n        /* \"#utility.yul\":23460:23461   */\n      dup4\n        /* \"#utility.yul\":23442:23462   */\n      tag_299\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":23437:23462   */\n      swap3\n      pop\n        /* \"#utility.yul\":23485:23486   */\n      dup3\n        /* \"#utility.yul\":23482:23483   */\n      dup3\n        /* \"#utility.yul\":23478:23487   */\n      add\n        /* \"#utility.yul\":23471:23487   */\n      swap1\n      pop\n        /* \"#utility.yul\":23506:23509   */\n      dup1\n        /* \"#utility.yul\":23503:23504   */\n      dup3\n        /* \"#utility.yul\":23500:23510   */\n      gt\n        /* \"#utility.yul\":23497:23533   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":23513:23531   */\n      tag_598\n      tag_337\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":23497:23533   */\n    tag_597:\n        /* \"#utility.yul\":23349:23540   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206081271ba147e3e4e4647ffcbe81946f695845a4225ca1877056e9d5d70e58fc64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_982": {
									"entryPoint": null,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 578,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 375,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 716,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 570,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2820,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2345,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2198,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1461,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1612,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1655,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9836:7",
										"nodeType": "YulBlock",
										"src": "0:9836:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "140:152:7",
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:7",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nativeSrc": "150:88:7",
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nativeSrc": "150:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:7",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:7",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nativeSrc": "247:15:7",
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nativeSrc": "247:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:7",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nativeSrc": "271:15:7",
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nativeSrc": "271:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nativeSrc": "326:152:7",
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:7",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nativeSrc": "336:88:7",
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nativeSrc": "336:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:7",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:15:7",
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nativeSrc": "433:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:7",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nativeSrc": "457:15:7",
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nativeSrc": "457:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nativeSrc": "535:269:7",
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nativeSrc": "545:22:7",
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nativeSrc": "555:12:7",
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nativeSrc": "576:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nativeSrc": "602:12:7",
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:7",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:7",
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nativeSrc": "667:27:7",
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:7",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nativeSrc": "677:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nativeSrc": "626:26:7",
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nativeSrc": "623:81:7",
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nativeSrc": "756:42:7",
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nativeSrc": "770:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nativeSrc": "770:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:7",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nativeSrc": "740:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nativeSrc": "717:38:7",
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nativeSrc": "714:84:7",
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:7",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:7",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nativeSrc": "864:87:7",
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nativeSrc": "874:11:7",
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:7",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nativeSrc": "895:14:7",
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nativeSrc": "895:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nativeSrc": "918:26:7",
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:7",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:7",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nativeSrc": "926:18:7",
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:7",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:7",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nativeSrc": "1001:49:7",
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nativeSrc": "1011:33:7",
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nativeSrc": "1025:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nativeSrc": "1021:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:7",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:7",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nativeSrc": "1109:54:7",
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nativeSrc": "1119:37:7",
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nativeSrc": "1140:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:7",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:7",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:7",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nativeSrc": "1245:317:7",
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nativeSrc": "1255:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nativeSrc": "1272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nativeSrc": "1311:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:7",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:7",
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nativeSrc": "1429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nativeSrc": "1477:30:7",
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nativeSrc": "1497:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nativeSrc": "1486:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nativeSrc": "1516:40:7",
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nativeSrc": "1536:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nativeSrc": "1526:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:7",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:7",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:7",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:7",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nativeSrc": "1613:32:7",
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nativeSrc": "1623:16:7",
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:7",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:7",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:7",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nativeSrc": "1683:28:7",
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nativeSrc": "1693:12:7",
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:7",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:7",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:7",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nativeSrc": "1777:82:7",
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nativeSrc": "1787:66:7",
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nativeSrc": "1827:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nativeSrc": "1818:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nativeSrc": "1800:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:7",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:7",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nativeSrc": "1912:28:7",
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nativeSrc": "1922:12:7",
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:7",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:7",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:7",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nativeSrc": "2022:193:7",
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nativeSrc": "2032:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nativeSrc": "2056:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nativeSrc": "2145:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nativeSrc": "2166:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nativeSrc": "2117:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nativeSrc": "2104:105:7",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nativeSrc": "2104:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:7",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:7",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:7",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nativeSrc": "2270:24:7",
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nativeSrc": "2280:8:7",
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:7",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:7",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nativeSrc": "2353:136:7",
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nativeSrc": "2363:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nativeSrc": "2377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nativeSrc": "2418:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:7",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nativeSrc": "2545:136:7",
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:7",
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nativeSrc": "2626:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nativeSrc": "2626:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nativeSrc": "2562:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nativeSrc": "2555:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:7",
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nativeSrc": "2579:22:7",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nativeSrc": "2588:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:7",
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:7",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:7",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nativeSrc": "2766:464:7",
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:7",
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nativeSrc": "2806:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nativeSrc": "2822:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:7",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nativeSrc": "2906:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nativeSrc": "2892:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:7",
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:7",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nativeSrc": "3074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nativeSrc": "3071:49:7",
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nativeSrc": "3189:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nativeSrc": "3175:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nativeSrc": "3133:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nativeSrc": "3133:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nativeSrc": "2780:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nativeSrc": "2777:446:7",
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:7",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:7",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:7",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nativeSrc": "3299:54:7",
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nativeSrc": "3309:37:7",
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nativeSrc": "3330:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:7",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:7",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:7",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nativeSrc": "3410:118:7",
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nativeSrc": "3420:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nativeSrc": "3465:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nativeSrc": "3480:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nativeSrc": "3436:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nativeSrc": "3432:56:7",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:7",
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nativeSrc": "3507:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:7",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:7",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:7",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nativeSrc": "3614:214:7",
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nativeSrc": "3747:37:7",
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nativeSrc": "3755:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nativeSrc": "3793:29:7",
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nativeSrc": "3810:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nativeSrc": "3801:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:7",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:7",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:7",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:7",
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nativeSrc": "3936:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nativeSrc": "3950:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:7",
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nativeSrc": "4074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nativeSrc": "4074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nativeSrc": "4041:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nativeSrc": "4038:56:7",
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nativeSrc": "4104:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nativeSrc": "4144:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nativeSrc": "4118:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nativeSrc": "4203:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nativeSrc": "4203:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nativeSrc": "4280:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:7",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:7",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:7",
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:7",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:7",
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nativeSrc": "4413:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nativeSrc": "4401:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:7",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nativeSrc": "4451:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:7",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:7",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:7",
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nativeSrc": "4608:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nativeSrc": "4602:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nativeSrc": "4587:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nativeSrc": "4587:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nativeSrc": "4646:24:7",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:7",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nativeSrc": "4656:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:7",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:7",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nativeSrc": "4700:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nativeSrc": "4532:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nativeSrc": "4524:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:7",
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:7",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:7",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nativeSrc": "4554:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:7",
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nativeSrc": "4809:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nativeSrc": "4803:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:7",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:7",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nativeSrc": "4891:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nativeSrc": "4861:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nativeSrc": "4846:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nativeSrc": "4846:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nativeSrc": "4748:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nativeSrc": "4745:179:7",
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:7",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nativeSrc": "4954:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:7",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nativeSrc": "4950:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nativeSrc": "4937:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nativeSrc": "4937:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:7",
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:7",
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:7",
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:7",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nativeSrc": "5084:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nativeSrc": "5078:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nativeSrc": "5041:77:7",
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nativeSrc": "5144:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nativeSrc": "5131:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nativeSrc": "5131:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:7",
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nativeSrc": "4342:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nativeSrc": "4335:887:7",
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:7",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:7",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											},
											{
												"body": {
													"nativeSrc": "5279:81:7",
													"nodeType": "YulBlock",
													"src": "5279:81:7",
													"statements": [
														{
															"nativeSrc": "5289:65:7",
															"nodeType": "YulAssignment",
															"src": "5289:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:7",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:7"
																},
																"nativeSrc": "5300:54:7",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:7",
														"nodeType": "YulTypedName",
														"src": "5261:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:7",
														"nodeType": "YulTypedName",
														"src": "5271:7:7",
														"type": ""
													}
												],
												"src": "5234:126:7"
											},
											{
												"body": {
													"nativeSrc": "5411:51:7",
													"nodeType": "YulBlock",
													"src": "5411:51:7",
													"statements": [
														{
															"nativeSrc": "5421:35:7",
															"nodeType": "YulAssignment",
															"src": "5421:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:7"
																},
																"nativeSrc": "5432:24:7",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:7",
														"nodeType": "YulTypedName",
														"src": "5393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:7",
														"nodeType": "YulTypedName",
														"src": "5403:7:7",
														"type": ""
													}
												],
												"src": "5366:96:7"
											},
											{
												"body": {
													"nativeSrc": "5533:53:7",
													"nodeType": "YulBlock",
													"src": "5533:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:7"
																		},
																		"nativeSrc": "5555:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:7"
																},
																"nativeSrc": "5543:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:7"
															},
															"nativeSrc": "5543:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:7",
														"nodeType": "YulTypedName",
														"src": "5521:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:7",
														"nodeType": "YulTypedName",
														"src": "5528:3:7",
														"type": ""
													}
												],
												"src": "5468:118:7"
											},
											{
												"body": {
													"nativeSrc": "5690:124:7",
													"nodeType": "YulBlock",
													"src": "5690:124:7",
													"statements": [
														{
															"nativeSrc": "5700:26:7",
															"nodeType": "YulAssignment",
															"src": "5700:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:7"
																},
																"nativeSrc": "5708:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:7"
																		},
																		"nativeSrc": "5789:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:7"
																},
																"nativeSrc": "5736:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:7"
															},
															"nativeSrc": "5736:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:7",
														"nodeType": "YulTypedName",
														"src": "5662:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:7",
														"nodeType": "YulTypedName",
														"src": "5674:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:7",
														"nodeType": "YulTypedName",
														"src": "5685:4:7",
														"type": ""
													}
												],
												"src": "5592:222:7"
											},
											{
												"body": {
													"nativeSrc": "5848:152:7",
													"nodeType": "YulBlock",
													"src": "5848:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:7"
																},
																"nativeSrc": "5858:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:7"
															},
															"nativeSrc": "5858:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:7"
																},
																"nativeSrc": "5955:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:7"
															},
															"nativeSrc": "5955:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:7"
																},
																"nativeSrc": "5979:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:7"
															},
															"nativeSrc": "5979:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:7"
											},
											{
												"body": {
													"nativeSrc": "6057:51:7",
													"nodeType": "YulBlock",
													"src": "6057:51:7",
													"statements": [
														{
															"nativeSrc": "6067:34:7",
															"nodeType": "YulAssignment",
															"src": "6067:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6092:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6092:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6095:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6095:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6088:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6088:3:7"
																},
																"nativeSrc": "6088:13:7",
																"nodeType": "YulFunctionCall",
																"src": "6088:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6067:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "6067:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6006:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6038:5:7",
														"nodeType": "YulTypedName",
														"src": "6038:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6048:8:7",
														"nodeType": "YulTypedName",
														"src": "6048:8:7",
														"type": ""
													}
												],
												"src": "6006:102:7"
											},
											{
												"body": {
													"nativeSrc": "6187:775:7",
													"nodeType": "YulBlock",
													"src": "6187:775:7",
													"statements": [
														{
															"nativeSrc": "6197:15:7",
															"nodeType": "YulAssignment",
															"src": "6197:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "6206:6:7",
																"nodeType": "YulIdentifier",
																"src": "6206:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6197:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6197:5:7"
																}
															]
														},
														{
															"nativeSrc": "6221:14:7",
															"nodeType": "YulAssignment",
															"src": "6221:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "6230:5:7",
																"nodeType": "YulIdentifier",
																"src": "6230:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6221:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6221:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6279:677:7",
																"nodeType": "YulBlock",
																"src": "6279:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6367:22:7",
																			"nodeType": "YulBlock",
																			"src": "6367:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6369:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "6369:16:7"
																						},
																						"nativeSrc": "6369:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6369:18:7"
																					},
																					"nativeSrc": "6369:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "6369:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6345:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "6345:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "6355:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6355:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6360:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6360:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6351:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6351:3:7"
																					},
																					"nativeSrc": "6351:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6351:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6342:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "6342:2:7"
																			},
																			"nativeSrc": "6342:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6342:24:7"
																		},
																		"nativeSrc": "6339:50:7",
																		"nodeType": "YulIf",
																		"src": "6339:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "6434:419:7",
																			"nodeType": "YulBlock",
																			"src": "6434:419:7",
																			"statements": [
																				{
																					"nativeSrc": "6814:25:7",
																					"nodeType": "YulAssignment",
																					"src": "6814:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6827:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "6827:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6834:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "6834:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6823:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6823:3:7"
																						},
																						"nativeSrc": "6823:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6823:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6814:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "6814:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6409:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6409:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6419:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6419:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6405:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6405:3:7"
																			},
																			"nativeSrc": "6405:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6405:16:7"
																		},
																		"nativeSrc": "6402:451:7",
																		"nodeType": "YulIf",
																		"src": "6402:451:7"
																	},
																	{
																		"nativeSrc": "6866:23:7",
																		"nodeType": "YulAssignment",
																		"src": "6866:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6878:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "6878:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6884:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "6884:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6874:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6874:3:7"
																			},
																			"nativeSrc": "6874:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6874:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6866:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6866:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6902:44:7",
																		"nodeType": "YulAssignment",
																		"src": "6902:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6937:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6937:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "6914:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "6914:22:7"
																			},
																			"nativeSrc": "6914:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6914:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6902:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "6902:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6255:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "6255:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6265:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6265:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6252:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6252:2:7"
																},
																"nativeSrc": "6252:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6252:15:7"
															},
															"nativeSrc": "6244:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6268:2:7",
																"nodeType": "YulBlock",
																"src": "6268:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6248:3:7",
																"nodeType": "YulBlock",
																"src": "6248:3:7",
																"statements": []
															},
															"src": "6244:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6114:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "6142:6:7",
														"nodeType": "YulTypedName",
														"src": "6142:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "6150:5:7",
														"nodeType": "YulTypedName",
														"src": "6150:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6157:8:7",
														"nodeType": "YulTypedName",
														"src": "6157:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6167:3:7",
														"nodeType": "YulTypedName",
														"src": "6167:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6175:5:7",
														"nodeType": "YulTypedName",
														"src": "6175:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6182:4:7",
														"nodeType": "YulTypedName",
														"src": "6182:4:7",
														"type": ""
													}
												],
												"src": "6114:848:7"
											},
											{
												"body": {
													"nativeSrc": "7028:1013:7",
													"nodeType": "YulBlock",
													"src": "7028:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7223:20:7",
																"nodeType": "YulBlock",
																"src": "7223:20:7",
																"statements": [
																	{
																		"nativeSrc": "7225:10:7",
																		"nodeType": "YulAssignment",
																		"src": "7225:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7234:1:7",
																			"nodeType": "YulLiteral",
																			"src": "7234:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7225:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7236:5:7",
																		"nodeType": "YulLeave",
																		"src": "7236:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7213:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7213:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7206:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7206:6:7"
																},
																"nativeSrc": "7206:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7206:16:7"
															},
															"nativeSrc": "7203:40:7",
															"nodeType": "YulIf",
															"src": "7203:40:7"
														},
														{
															"body": {
																"nativeSrc": "7268:20:7",
																"nodeType": "YulBlock",
																"src": "7268:20:7",
																"statements": [
																	{
																		"nativeSrc": "7270:10:7",
																		"nodeType": "YulAssignment",
																		"src": "7270:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7279:1:7",
																			"nodeType": "YulLiteral",
																			"src": "7279:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7270:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7270:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7281:5:7",
																		"nodeType": "YulLeave",
																		"src": "7281:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7262:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7262:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7255:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7255:6:7"
																},
																"nativeSrc": "7255:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7255:12:7"
															},
															"nativeSrc": "7252:36:7",
															"nodeType": "YulIf",
															"src": "7252:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7398:20:7",
																		"nodeType": "YulBlock",
																		"src": "7398:20:7",
																		"statements": [
																			{
																				"nativeSrc": "7400:10:7",
																				"nodeType": "YulAssignment",
																				"src": "7400:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7409:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7409:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7400:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7400:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "7411:5:7",
																				"nodeType": "YulLeave",
																				"src": "7411:5:7"
																			}
																		]
																	},
																	"nativeSrc": "7391:27:7",
																	"nodeType": "YulCase",
																	"src": "7391:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7396:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7396:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7442:176:7",
																		"nodeType": "YulBlock",
																		"src": "7442:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "7477:22:7",
																					"nodeType": "YulBlock",
																					"src": "7477:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7479:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "7479:16:7"
																								},
																								"nativeSrc": "7479:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7479:18:7"
																							},
																							"nativeSrc": "7479:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "7479:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "7462:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7462:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7472:3:7",
																							"nodeType": "YulLiteral",
																							"src": "7472:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7459:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "7459:2:7"
																					},
																					"nativeSrc": "7459:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7459:17:7"
																				},
																				"nativeSrc": "7456:43:7",
																				"nodeType": "YulIf",
																				"src": "7456:43:7"
																			},
																			{
																				"nativeSrc": "7512:25:7",
																				"nodeType": "YulAssignment",
																				"src": "7512:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7525:1:7",
																							"nodeType": "YulLiteral",
																							"src": "7525:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "7528:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7528:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "7521:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7521:3:7"
																					},
																					"nativeSrc": "7521:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7521:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7512:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7512:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7568:22:7",
																					"nodeType": "YulBlock",
																					"src": "7568:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7570:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "7570:16:7"
																								},
																								"nativeSrc": "7570:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7570:18:7"
																							},
																							"nativeSrc": "7570:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "7570:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "7556:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "7556:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "7563:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7563:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7553:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "7553:2:7"
																					},
																					"nativeSrc": "7553:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7553:14:7"
																				},
																				"nativeSrc": "7550:40:7",
																				"nodeType": "YulIf",
																				"src": "7550:40:7"
																			},
																			{
																				"nativeSrc": "7603:5:7",
																				"nodeType": "YulLeave",
																				"src": "7603:5:7"
																			}
																		]
																	},
																	"nativeSrc": "7427:191:7",
																	"nodeType": "YulCase",
																	"src": "7427:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7432:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "7348:4:7",
																"nodeType": "YulIdentifier",
																"src": "7348:4:7"
															},
															"nativeSrc": "7341:277:7",
															"nodeType": "YulSwitch",
															"src": "7341:277:7"
														},
														{
															"body": {
																"nativeSrc": "7750:123:7",
																"nodeType": "YulBlock",
																"src": "7750:123:7",
																"statements": [
																	{
																		"nativeSrc": "7764:28:7",
																		"nodeType": "YulAssignment",
																		"src": "7764:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7777:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "7777:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7783:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7783:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7773:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7773:3:7"
																			},
																			"nativeSrc": "7773:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7773:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7764:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7764:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7823:22:7",
																			"nodeType": "YulBlock",
																			"src": "7823:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7825:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "7825:16:7"
																						},
																						"nativeSrc": "7825:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7825:18:7"
																					},
																					"nativeSrc": "7825:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "7825:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "7811:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7811:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "7818:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7818:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7808:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7808:2:7"
																			},
																			"nativeSrc": "7808:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7808:14:7"
																		},
																		"nativeSrc": "7805:40:7",
																		"nodeType": "YulIf",
																		"src": "7805:40:7"
																	},
																	{
																		"nativeSrc": "7858:5:7",
																		"nodeType": "YulLeave",
																		"src": "7858:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7653:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "7653:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7659:2:7",
																						"nodeType": "YulLiteral",
																						"src": "7659:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7650:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7650:2:7"
																				},
																				"nativeSrc": "7650:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7650:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7667:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7667:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7677:2:7",
																						"nodeType": "YulLiteral",
																						"src": "7677:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7664:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7664:2:7"
																				},
																				"nativeSrc": "7664:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7664:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7646:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7646:3:7"
																		},
																		"nativeSrc": "7646:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7646:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7702:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "7702:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7708:3:7",
																						"nodeType": "YulLiteral",
																						"src": "7708:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7699:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7699:2:7"
																				},
																				"nativeSrc": "7699:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7699:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7717:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7717:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7727:2:7",
																						"nodeType": "YulLiteral",
																						"src": "7727:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7714:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7714:2:7"
																				},
																				"nativeSrc": "7714:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7714:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7695:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7695:3:7"
																		},
																		"nativeSrc": "7695:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7695:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7630:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7630:2:7"
																},
																"nativeSrc": "7630:111:7",
																"nodeType": "YulFunctionCall",
																"src": "7630:111:7"
															},
															"nativeSrc": "7627:246:7",
															"nodeType": "YulIf",
															"src": "7627:246:7"
														},
														{
															"nativeSrc": "7883:57:7",
															"nodeType": "YulAssignment",
															"src": "7883:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7917:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7917:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7920:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7920:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7926:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7926:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7936:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7936:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7898:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7898:18:7"
																},
																"nativeSrc": "7898:42:7",
																"nodeType": "YulFunctionCall",
																"src": "7898:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7883:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7883:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "7890:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7890:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7979:22:7",
																"nodeType": "YulBlock",
																"src": "7979:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7981:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7981:16:7"
																			},
																			"nativeSrc": "7981:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7981:18:7"
																		},
																		"nativeSrc": "7981:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7981:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7956:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7956:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "7967:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7967:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "7972:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7972:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7963:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7963:3:7"
																		},
																		"nativeSrc": "7963:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7963:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7953:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7953:2:7"
																},
																"nativeSrc": "7953:25:7",
																"nodeType": "YulFunctionCall",
																"src": "7953:25:7"
															},
															"nativeSrc": "7950:51:7",
															"nodeType": "YulIf",
															"src": "7950:51:7"
														},
														{
															"nativeSrc": "8010:25:7",
															"nodeType": "YulAssignment",
															"src": "8010:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8023:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8023:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8030:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8030:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8019:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8019:3:7"
																},
																"nativeSrc": "8019:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8019:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8010:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8010:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6968:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6998:4:7",
														"nodeType": "YulTypedName",
														"src": "6998:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7004:8:7",
														"nodeType": "YulTypedName",
														"src": "7004:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7014:3:7",
														"nodeType": "YulTypedName",
														"src": "7014:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7022:5:7",
														"nodeType": "YulTypedName",
														"src": "7022:5:7",
														"type": ""
													}
												],
												"src": "6968:1073:7"
											},
											{
												"body": {
													"nativeSrc": "8090:43:7",
													"nodeType": "YulBlock",
													"src": "8090:43:7",
													"statements": [
														{
															"nativeSrc": "8100:27:7",
															"nodeType": "YulAssignment",
															"src": "8100:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8115:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8115:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8122:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8122:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8111:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8111:3:7"
																},
																"nativeSrc": "8111:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8111:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8100:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8100:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "8047:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8072:5:7",
														"nodeType": "YulTypedName",
														"src": "8072:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8082:7:7",
														"nodeType": "YulTypedName",
														"src": "8082:7:7",
														"type": ""
													}
												],
												"src": "8047:86:7"
											},
											{
												"body": {
													"nativeSrc": "8203:217:7",
													"nodeType": "YulBlock",
													"src": "8203:217:7",
													"statements": [
														{
															"nativeSrc": "8213:31:7",
															"nodeType": "YulAssignment",
															"src": "8213:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8239:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8239:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8221:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8221:17:7"
																},
																"nativeSrc": "8221:23:7",
																"nodeType": "YulFunctionCall",
																"src": "8221:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8213:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8213:4:7"
																}
															]
														},
														{
															"nativeSrc": "8253:37:7",
															"nodeType": "YulAssignment",
															"src": "8253:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8281:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8281:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "8265:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "8265:15:7"
																},
																"nativeSrc": "8265:25:7",
																"nodeType": "YulFunctionCall",
																"src": "8265:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "8253:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "8253:8:7"
																}
															]
														},
														{
															"nativeSrc": "8300:113:7",
															"nodeType": "YulAssignment",
															"src": "8300:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8330:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8330:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8336:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8336:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8346:66:7",
																		"nodeType": "YulLiteral",
																		"src": "8346:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "8309:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "8309:20:7"
																},
																"nativeSrc": "8309:104:7",
																"nodeType": "YulFunctionCall",
																"src": "8309:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8300:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8300:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "8139:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8178:4:7",
														"nodeType": "YulTypedName",
														"src": "8178:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8184:8:7",
														"nodeType": "YulTypedName",
														"src": "8184:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8197:5:7",
														"nodeType": "YulTypedName",
														"src": "8197:5:7",
														"type": ""
													}
												],
												"src": "8139:281:7"
											},
											{
												"body": {
													"nativeSrc": "8474:362:7",
													"nodeType": "YulBlock",
													"src": "8474:362:7",
													"statements": [
														{
															"nativeSrc": "8484:25:7",
															"nodeType": "YulAssignment",
															"src": "8484:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8507:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8507:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8489:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8489:17:7"
																},
																"nativeSrc": "8489:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8489:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8484:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8484:1:7"
																}
															]
														},
														{
															"nativeSrc": "8518:25:7",
															"nodeType": "YulAssignment",
															"src": "8518:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8541:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8541:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8523:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8523:17:7"
																},
																"nativeSrc": "8523:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8523:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8518:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8518:1:7"
																}
															]
														},
														{
															"nativeSrc": "8552:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8552:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8575:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8575:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8578:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8578:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8571:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8571:3:7"
																},
																"nativeSrc": "8571:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8571:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8556:11:7",
																	"nodeType": "YulTypedName",
																	"src": "8556:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8589:41:7",
															"nodeType": "YulAssignment",
															"src": "8589:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8618:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "8618:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8600:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8600:17:7"
																},
																"nativeSrc": "8600:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8600:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8589:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8589:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8807:22:7",
																"nodeType": "YulBlock",
																"src": "8807:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8809:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8809:16:7"
																			},
																			"nativeSrc": "8809:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8809:18:7"
																		},
																		"nativeSrc": "8809:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8809:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8740:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8740:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8733:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8733:6:7"
																				},
																				"nativeSrc": "8733:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8733:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8763:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8763:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8770:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "8770:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8779:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "8779:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8766:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8766:3:7"
																						},
																						"nativeSrc": "8766:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8766:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8760:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8760:2:7"
																				},
																				"nativeSrc": "8760:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8760:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8713:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8713:2:7"
																		},
																		"nativeSrc": "8713:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8713:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8693:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8693:6:7"
																},
																"nativeSrc": "8693:113:7",
																"nodeType": "YulFunctionCall",
																"src": "8693:113:7"
															},
															"nativeSrc": "8690:139:7",
															"nodeType": "YulIf",
															"src": "8690:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8426:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8457:1:7",
														"nodeType": "YulTypedName",
														"src": "8457:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8460:1:7",
														"nodeType": "YulTypedName",
														"src": "8460:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8466:7:7",
														"nodeType": "YulTypedName",
														"src": "8466:7:7",
														"type": ""
													}
												],
												"src": "8426:410:7"
											},
											{
												"body": {
													"nativeSrc": "8886:147:7",
													"nodeType": "YulBlock",
													"src": "8886:147:7",
													"statements": [
														{
															"nativeSrc": "8896:25:7",
															"nodeType": "YulAssignment",
															"src": "8896:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8919:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8919:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8901:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8901:17:7"
																},
																"nativeSrc": "8901:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8901:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8896:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8896:1:7"
																}
															]
														},
														{
															"nativeSrc": "8930:25:7",
															"nodeType": "YulAssignment",
															"src": "8930:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8953:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8953:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8935:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8935:17:7"
																},
																"nativeSrc": "8935:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8935:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8930:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8930:1:7"
																}
															]
														},
														{
															"nativeSrc": "8964:16:7",
															"nodeType": "YulAssignment",
															"src": "8964:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8975:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8975:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8978:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8978:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8971:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8971:3:7"
																},
																"nativeSrc": "8971:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8971:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8964:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9004:22:7",
																"nodeType": "YulBlock",
																"src": "9004:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9006:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9006:16:7"
																			},
																			"nativeSrc": "9006:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9006:18:7"
																		},
																		"nativeSrc": "9006:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9006:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8996:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8996:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8999:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8999:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8993:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8993:2:7"
																},
																"nativeSrc": "8993:10:7",
																"nodeType": "YulFunctionCall",
																"src": "8993:10:7"
															},
															"nativeSrc": "8990:36:7",
															"nodeType": "YulIf",
															"src": "8990:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8842:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8873:1:7",
														"nodeType": "YulTypedName",
														"src": "8873:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8876:1:7",
														"nodeType": "YulTypedName",
														"src": "8876:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8882:3:7",
														"nodeType": "YulTypedName",
														"src": "8882:3:7",
														"type": ""
													}
												],
												"src": "8842:191:7"
											},
											{
												"body": {
													"nativeSrc": "9104:53:7",
													"nodeType": "YulBlock",
													"src": "9104:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9121:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9121:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9144:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9144:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9126:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9126:17:7"
																		},
																		"nativeSrc": "9126:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9126:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9114:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9114:6:7"
																},
																"nativeSrc": "9114:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9114:37:7"
															},
															"nativeSrc": "9114:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9114:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9039:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9092:5:7",
														"nodeType": "YulTypedName",
														"src": "9092:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9099:3:7",
														"nodeType": "YulTypedName",
														"src": "9099:3:7",
														"type": ""
													}
												],
												"src": "9039:118:7"
											},
											{
												"body": {
													"nativeSrc": "9317:288:7",
													"nodeType": "YulBlock",
													"src": "9317:288:7",
													"statements": [
														{
															"nativeSrc": "9327:26:7",
															"nodeType": "YulAssignment",
															"src": "9327:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9339:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9339:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9350:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9350:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9335:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9335:3:7"
																},
																"nativeSrc": "9335:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9335:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9327:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9327:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9407:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9407:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9420:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9420:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9431:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9431:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9416:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9416:3:7"
																		},
																		"nativeSrc": "9416:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9416:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9363:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9363:43:7"
																},
																"nativeSrc": "9363:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9363:71:7"
															},
															"nativeSrc": "9363:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9363:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9488:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9488:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9501:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9501:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9512:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9512:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9497:3:7"
																		},
																		"nativeSrc": "9497:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9497:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9444:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9444:43:7"
																},
																"nativeSrc": "9444:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9444:72:7"
															},
															"nativeSrc": "9444:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9444:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9570:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9570:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9583:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9583:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9594:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9594:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9579:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9579:3:7"
																		},
																		"nativeSrc": "9579:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9579:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9526:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9526:43:7"
																},
																"nativeSrc": "9526:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9526:72:7"
															},
															"nativeSrc": "9526:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9526:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9163:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9273:9:7",
														"nodeType": "YulTypedName",
														"src": "9273:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9285:6:7",
														"nodeType": "YulTypedName",
														"src": "9285:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9293:6:7",
														"nodeType": "YulTypedName",
														"src": "9293:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9301:6:7",
														"nodeType": "YulTypedName",
														"src": "9301:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9312:4:7",
														"nodeType": "YulTypedName",
														"src": "9312:4:7",
														"type": ""
													}
												],
												"src": "9163:442:7"
											},
											{
												"body": {
													"nativeSrc": "9709:124:7",
													"nodeType": "YulBlock",
													"src": "9709:124:7",
													"statements": [
														{
															"nativeSrc": "9719:26:7",
															"nodeType": "YulAssignment",
															"src": "9719:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9731:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9731:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9742:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9742:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9727:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9727:3:7"
																},
																"nativeSrc": "9727:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9727:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9719:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9719:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9799:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9799:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9812:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9812:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9823:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9823:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9808:3:7"
																		},
																		"nativeSrc": "9808:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9808:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9755:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9755:43:7"
																},
																"nativeSrc": "9755:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9755:71:7"
															},
															"nativeSrc": "9755:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9755:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9611:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9681:9:7",
														"nodeType": "YulTypedName",
														"src": "9681:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9693:6:7",
														"nodeType": "YulTypedName",
														"src": "9693:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9704:4:7",
														"nodeType": "YulTypedName",
														"src": "9704:4:7",
														"type": ""
													}
												],
												"src": "9611:222:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a60065560066007553480156200001a575f80fd5b50336040518060400160405280601081526020017f4e616d617a62656b277320546f6b656e000000000000000000000000000000008152506040518060400160405280600281526020017f4e42000000000000000000000000000000000000000000000000000000000000815250816003908162000099919062000754565b508060049081620000ab919062000754565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000121575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200011891906200087b565b60405180910390fd5b62000132816200017760201b60201c565b506200017133620001486200023a60201b60201c565b600a62000156919062000a1f565b6103e862000165919062000a6f565b6200024260201b60201c565b62000b5a565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002b5575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620002ac91906200087b565b60405180910390fd5b620002c85f8383620002cc60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000320578060025f82825462000313919062000ab9565b92505081905550620003f1565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015620003ac578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620003a39392919062000b04565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200043a578060025f828254039250508190555062000484565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620004e3919062000b3f565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200056c57607f821691505b60208210810362000582576200058162000527565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620005e67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005a9565b620005f28683620005a9565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200063c6200063662000630846200060a565b62000613565b6200060a565b9050919050565b5f819050919050565b62000657836200061c565b6200066f620006668262000643565b848454620005b5565b825550505050565b5f90565b6200068562000677565b620006928184846200064c565b505050565b5b81811015620006b957620006ad5f826200067b565b60018101905062000698565b5050565b601f8211156200070857620006d28162000588565b620006dd846200059a565b81016020851015620006ed578190505b62000705620006fc856200059a565b83018262000697565b50505b505050565b5f82821c905092915050565b5f6200072a5f19846008026200070d565b1980831691505092915050565b5f62000744838362000719565b9150826002028217905092915050565b6200075f82620004f0565b67ffffffffffffffff8111156200077b576200077a620004fa565b5b62000787825462000554565b62000794828285620006bd565b5f60209050601f831160018114620007ca575f8415620007b5578287015190505b620007c1858262000737565b86555062000830565b601f198416620007da8662000588565b5f5b828110156200080357848901518255600182019150602085019450602081019050620007dc565b868310156200082357848901516200081f601f89168262000719565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620008638262000838565b9050919050565b620008758162000857565b82525050565b5f602082019050620008905f8301846200086a565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156200092057808604811115620008f857620008f762000896565b5b6001851615620009085780820291505b80810290506200091885620008c3565b9450620008d8565b94509492505050565b5f826200093a576001905062000a0c565b8162000949575f905062000a0c565b81600181146200096257600281146200096d57620009a3565b600191505062000a0c565b60ff84111562000982576200098162000896565b5b8360020a9150848211156200099c576200099b62000896565b5b5062000a0c565b5060208310610133831016604e8410600b8410161715620009dd5782820a905083811115620009d757620009d662000896565b5b62000a0c565b620009ec8484846001620008cf565b9250905081840481111562000a065762000a0562000896565b5b81810290505b9392505050565b5f60ff82169050919050565b5f62000a2b826200060a565b915062000a388362000a13565b925062000a677fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000929565b905092915050565b5f62000a7b826200060a565b915062000a88836200060a565b925082820262000a98816200060a565b9150828204841483151762000ab25762000ab162000896565b5b5092915050565b5f62000ac5826200060a565b915062000ad2836200060a565b925082820190508082111562000aed5762000aec62000896565b5b92915050565b62000afe816200060a565b82525050565b5f60608201905062000b195f8301866200086a565b62000b28602083018562000af3565b62000b37604083018462000af3565b949350505050565b5f60208201905062000b545f83018462000af3565b92915050565b6121808062000b685f395ff3fe60806040526004361061012d575f3560e01c806395d89b41116100aa578063d637dcfa1161006e578063d637dcfa146103f0578063d96a094a14610418578063dd62ed3e14610434578063e4849b3214610470578063f2fde38b14610498578063fc37987b146104c057610134565b806395d89b4114610312578063a9059cbb1461033c578063ac6af28014610378578063cb797836146103a0578063d0679d34146103c857610134565b80636217229b116100f15780636217229b1461022e5780636386c1c71461025857806370a0823114610296578063715018a6146102d25780638da5cb5b146102e857610134565b806306fdde0314610138578063095ea7b31461016257806318160ddd1461019e57806323b872dd146101c8578063313ce5671461020457610134565b3661013457005b5f80fd5b348015610143575f80fd5b5061014c6104ea565b6040516101599190611546565b60405180910390f35b34801561016d575f80fd5b5061018860048036038101906101839190611604565b61057a565b604051610195919061165c565b60405180910390f35b3480156101a9575f80fd5b506101b261059c565b6040516101bf9190611684565b60405180910390f35b3480156101d3575f80fd5b506101ee60048036038101906101e9919061169d565b6105a5565b6040516101fb919061165c565b60405180910390f35b34801561020f575f80fd5b506102186105d3565b6040516102259190611708565b60405180910390f35b348015610239575f80fd5b506102426105db565b60405161024f9190611684565b60405180910390f35b348015610263575f80fd5b5061027e60048036038101906102799190611721565b6105e1565b60405161028d9392919061174c565b60405180910390f35b3480156102a1575f80fd5b506102bc60048036038101906102b79190611721565b6107fc565b6040516102c99190611684565b60405180910390f35b3480156102dd575f80fd5b506102e6610841565b005b3480156102f3575f80fd5b506102fc610854565b60405161030991906117a5565b60405180910390f35b34801561031d575f80fd5b5061032661087c565b6040516103339190611546565b60405180910390f35b348015610347575f80fd5b50610362600480360381019061035d9190611604565b61090c565b60405161036f919061165c565b60405180910390f35b348015610383575f80fd5b5061039e600480360381019061039991906117be565b61092e565b005b3480156103ab575f80fd5b506103c660048036038101906103c191906117fc565b610948565b005b3480156103d3575f80fd5b506103ee60048036038101906103e99190611604565b610965565b005b3480156103fb575f80fd5b5061041660048036038101906104119190611953565b610974565b005b610432600480360381019061042d91906117fc565b610a9a565b005b34801561043f575f80fd5b5061045a600480360381019061045591906119f7565b610b19565b6040516104679190611684565b60405180910390f35b34801561047b575f80fd5b50610496600480360381019061049191906117fc565b610b9b565b005b3480156104a3575f80fd5b506104be60048036038101906104b99190611721565b610c67565b005b3480156104cb575f80fd5b506104d4610ceb565b6040516104e19190611684565b60405180910390f35b6060600380546104f990611a62565b80601f016020809104026020016040519081016040528092919081815260200182805461052590611a62565b80156105705780601f1061054757610100808354040283529160200191610570565b820191905f5260205f20905b81548152906001019060200180831161055357829003601f168201915b5050505050905090565b5f80610584610cf1565b9050610591818585610cf8565b600191505092915050565b5f600254905090565b5f806105af610cf1565b90506105bc858285610d0a565b6105c7858585610d9c565b60019150509392505050565b5f6012905090565b60065481565b60608060605f60085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f8201805461063e90611a62565b80601f016020809104026020016040519081016040528092919081815260200182805461066a90611a62565b80156106b55780601f1061068c576101008083540402835291602001916106b5565b820191905f5260205f20905b81548152906001019060200180831161069857829003601f168201915b505050505081526020016001820180546106ce90611a62565b80601f01602080910402602001604051908101604052809291908181526020018280546106fa90611a62565b80156107455780601f1061071c57610100808354040283529160200191610745565b820191905f5260205f20905b81548152906001019060200180831161072857829003601f168201915b5050505050815260200160028201805461075e90611a62565b80601f016020809104026020016040519081016040528092919081815260200182805461078a90611a62565b80156107d55780601f106107ac576101008083540402835291602001916107d5565b820191905f5260205f20905b8154815290600101906020018083116107b857829003601f168201915b5050505050815250509050805f015181602001518260400151935093509350509193909250565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610849610e8c565b6108525f610f13565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461088b90611a62565b80601f01602080910402602001604051908101604052809291908181526020018280546108b790611a62565b80156109025780601f106108d957610100808354040283529160200191610902565b820191905f5260205f20905b8154815290600101906020018083116108e557829003601f168201915b5050505050905090565b5f80610916610cf1565b9050610923818585610d9c565b600191505092915050565b610936610e8c565b81600681905550806007819055505050565b610950610e8c565b6109623361095c610854565b83610d9c565b50565b610970338383610d9c565b5050565b5f8351116109b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ae90611adc565b60405180910390fd5b5f8251116109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190611b44565b60405180910390fd5b60405180606001604052808481526020018381526020018281525060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f019081610a659190611cff565b506020820151816001019081610a7b9190611cff565b506040820151816002019081610a919190611cff565b50905050505050565b5f610aa36105d3565b600a610aaf9190611f2a565b60065483610abd9190611f74565b610ac79190611fe2565b9050803414610b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b029061205c565b60405180910390fd5b610b153383610fd6565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f610ba46105d3565b600a610bb09190611f2a565b60075483610bbe9190611f74565b610bc89190611fe2565b905081610bd4336107fc565b1015610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c906120c4565b60405180910390fd5b610c1f3383611055565b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610c62573d5f803e3d5ffd5b505050565b610c6f610e8c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cdf575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610cd691906117a5565b60405180910390fd5b610ce881610f13565b50565b60075481565b5f33905090565b610d0583838360016110d4565b505050565b5f610d158484610b19565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610d965781811015610d87578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610d7e939291906120e2565b60405180910390fd5b610d9584848484035f6110d4565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e0c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e0391906117a5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e7c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e7391906117a5565b60405180910390fd5b610e878383836112a3565b505050565b610e94610cf1565b73ffffffffffffffffffffffffffffffffffffffff16610eb2610854565b73ffffffffffffffffffffffffffffffffffffffff1614610f1157610ed5610cf1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f0891906117a5565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611046575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161103d91906117a5565b60405180910390fd5b6110515f83836112a3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110c5575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110bc91906117a5565b60405180910390fd5b6110d0825f836112a3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611144575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161113b91906117a5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111b4575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111ab91906117a5565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561129d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516112949190611684565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112f3578060025f8282546112e79190612117565b925050819055506113c1565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561137c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611373939291906120e2565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611408578060025f8282540392505081905550611452565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114af9190611684565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156114f35780820151818401526020810190506114d8565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611518826114bc565b61152281856114c6565b93506115328185602086016114d6565b61153b816114fe565b840191505092915050565b5f6020820190508181035f83015261155e818461150e565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115a082611577565b9050919050565b6115b081611596565b81146115ba575f80fd5b50565b5f813590506115cb816115a7565b92915050565b5f819050919050565b6115e3816115d1565b81146115ed575f80fd5b50565b5f813590506115fe816115da565b92915050565b5f806040838503121561161a5761161961156f565b5b5f611627858286016115bd565b9250506020611638858286016115f0565b9150509250929050565b5f8115159050919050565b61165681611642565b82525050565b5f60208201905061166f5f83018461164d565b92915050565b61167e816115d1565b82525050565b5f6020820190506116975f830184611675565b92915050565b5f805f606084860312156116b4576116b361156f565b5b5f6116c1868287016115bd565b93505060206116d2868287016115bd565b92505060406116e3868287016115f0565b9150509250925092565b5f60ff82169050919050565b611702816116ed565b82525050565b5f60208201905061171b5f8301846116f9565b92915050565b5f602082840312156117365761173561156f565b5b5f611743848285016115bd565b91505092915050565b5f6060820190508181035f830152611764818661150e565b90508181036020830152611778818561150e565b9050818103604083015261178c818461150e565b9050949350505050565b61179f81611596565b82525050565b5f6020820190506117b85f830184611796565b92915050565b5f80604083850312156117d4576117d361156f565b5b5f6117e1858286016115f0565b92505060206117f2858286016115f0565b9150509250929050565b5f602082840312156118115761181061156f565b5b5f61181e848285016115f0565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611865826114fe565b810181811067ffffffffffffffff821117156118845761188361182f565b5b80604052505050565b5f611896611566565b90506118a2828261185c565b919050565b5f67ffffffffffffffff8211156118c1576118c061182f565b5b6118ca826114fe565b9050602081019050919050565b828183375f83830152505050565b5f6118f76118f2846118a7565b61188d565b9050828152602081018484840111156119135761191261182b565b5b61191e8482856118d7565b509392505050565b5f82601f83011261193a57611939611827565b5b813561194a8482602086016118e5565b91505092915050565b5f805f6060848603121561196a5761196961156f565b5b5f84013567ffffffffffffffff81111561198757611986611573565b5b61199386828701611926565b935050602084013567ffffffffffffffff8111156119b4576119b3611573565b5b6119c086828701611926565b925050604084013567ffffffffffffffff8111156119e1576119e0611573565b5b6119ed86828701611926565b9150509250925092565b5f8060408385031215611a0d57611a0c61156f565b5b5f611a1a858286016115bd565b9250506020611a2b858286016115bd565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a7957607f821691505b602082108103611a8c57611a8b611a35565b5b50919050565b7f557365726e616d65206d757374206e6f7420626520656d7074790000000000005f82015250565b5f611ac6601a836114c6565b9150611ad182611a92565b602082019050919050565b5f6020820190508181035f830152611af381611aba565b9050919050565b7f456d61696c206d757374206e6f7420626520656d7074790000000000000000005f82015250565b5f611b2e6017836114c6565b9150611b3982611afa565b602082019050919050565b5f6020820190508181035f830152611b5b81611b22565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611bbe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611b83565b611bc88683611b83565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611c03611bfe611bf9846115d1565b611be0565b6115d1565b9050919050565b5f819050919050565b611c1c83611be9565b611c30611c2882611c0a565b848454611b8f565b825550505050565b5f90565b611c44611c38565b611c4f818484611c13565b505050565b5b81811015611c7257611c675f82611c3c565b600181019050611c55565b5050565b601f821115611cb757611c8881611b62565b611c9184611b74565b81016020851015611ca0578190505b611cb4611cac85611b74565b830182611c54565b50505b505050565b5f82821c905092915050565b5f611cd75f1984600802611cbc565b1980831691505092915050565b5f611cef8383611cc8565b9150826002028217905092915050565b611d08826114bc565b67ffffffffffffffff811115611d2157611d2061182f565b5b611d2b8254611a62565b611d36828285611c76565b5f60209050601f831160018114611d67575f8415611d55578287015190505b611d5f8582611ce4565b865550611dc6565b601f198416611d7586611b62565b5f5b82811015611d9c57848901518255600182019150602085019450602081019050611d77565b86831015611db95784890151611db5601f891682611cc8565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115611e5057808604811115611e2c57611e2b611dce565b5b6001851615611e3b5780820291505b8081029050611e4985611dfb565b9450611e10565b94509492505050565b5f82611e685760019050611f23565b81611e75575f9050611f23565b8160018114611e8b5760028114611e9557611ec4565b6001915050611f23565b60ff841115611ea757611ea6611dce565b5b8360020a915084821115611ebe57611ebd611dce565b5b50611f23565b5060208310610133831016604e8410600b8410161715611ef95782820a905083811115611ef457611ef3611dce565b5b611f23565b611f068484846001611e07565b92509050818404811115611f1d57611f1c611dce565b5b81810290505b9392505050565b5f611f34826115d1565b9150611f3f836116ed565b9250611f6c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611e59565b905092915050565b5f611f7e826115d1565b9150611f89836115d1565b9250828202611f97816115d1565b91508282048414831517611fae57611fad611dce565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611fec826115d1565b9150611ff7836115d1565b92508261200757612006611fb5565b5b828204905092915050565b7f496e636f72726563742045544820616d6f756e742073656e74000000000000005f82015250565b5f6120466019836114c6565b915061205182612012565b602082019050919050565b5f6020820190508181035f8301526120738161203a565b9050919050565b7f496e73756666696369656e74204e422062616c616e63650000000000000000005f82015250565b5f6120ae6017836114c6565b91506120b98261207a565b602082019050919050565b5f6020820190508181035f8301526120db816120a2565b9050919050565b5f6060820190506120f55f830186611796565b6121026020830185611675565b61210f6040830184611675565b949350505050565b5f612121826115d1565b915061212c836115d1565b925082820190508082111561214457612143611dce565b5b9291505056fea26469706673582212206081271ba147e3e4e4647ffcbe81946f695845a4225ca1877056e9d5d70e58fc64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x6 SSTORE PUSH1 0x6 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E616D617A62656B277320546F6B656E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E42000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x99 SWAP2 SWAP1 PUSH3 0x754 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xAB SWAP2 SWAP1 PUSH3 0x754 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x121 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x118 SWAP2 SWAP1 PUSH3 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x132 DUP2 PUSH3 0x177 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x171 CALLER PUSH3 0x148 PUSH3 0x23A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x156 SWAP2 SWAP1 PUSH3 0xA1F JUMP JUMPDEST PUSH2 0x3E8 PUSH3 0x165 SWAP2 SWAP1 PUSH3 0xA6F JUMP JUMPDEST PUSH3 0x242 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB5A JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2B5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2AC SWAP2 SWAP1 PUSH3 0x87B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2C8 PUSH0 DUP4 DUP4 PUSH3 0x2CC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x320 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x313 SWAP2 SWAP1 PUSH3 0xAB9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x3F1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x3AC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3A3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xB04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x43A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x484 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x4E3 SWAP2 SWAP1 PUSH3 0xB3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x56C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x582 JUMPI PUSH3 0x581 PUSH3 0x527 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x5E6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x5A9 JUMP JUMPDEST PUSH3 0x5F2 DUP7 DUP4 PUSH3 0x5A9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x63C PUSH3 0x636 PUSH3 0x630 DUP5 PUSH3 0x60A JUMP JUMPDEST PUSH3 0x613 JUMP JUMPDEST PUSH3 0x60A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x657 DUP4 PUSH3 0x61C JUMP JUMPDEST PUSH3 0x66F PUSH3 0x666 DUP3 PUSH3 0x643 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x5B5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x685 PUSH3 0x677 JUMP JUMPDEST PUSH3 0x692 DUP2 DUP5 DUP5 PUSH3 0x64C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x6B9 JUMPI PUSH3 0x6AD PUSH0 DUP3 PUSH3 0x67B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x698 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x708 JUMPI PUSH3 0x6D2 DUP2 PUSH3 0x588 JUMP JUMPDEST PUSH3 0x6DD DUP5 PUSH3 0x59A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x6ED JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x705 PUSH3 0x6FC DUP6 PUSH3 0x59A JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x697 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x72A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x70D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x744 DUP4 DUP4 PUSH3 0x719 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x75F DUP3 PUSH3 0x4F0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x77B JUMPI PUSH3 0x77A PUSH3 0x4FA JUMP JUMPDEST JUMPDEST PUSH3 0x787 DUP3 SLOAD PUSH3 0x554 JUMP JUMPDEST PUSH3 0x794 DUP3 DUP3 DUP6 PUSH3 0x6BD JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x7CA JUMPI PUSH0 DUP5 ISZERO PUSH3 0x7B5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x7C1 DUP6 DUP3 PUSH3 0x737 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x830 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x7DA DUP7 PUSH3 0x588 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x803 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7DC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x823 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x81F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x719 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x863 DUP3 PUSH3 0x838 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x875 DUP2 PUSH3 0x857 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x890 PUSH0 DUP4 ADD DUP5 PUSH3 0x86A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x920 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x8F8 JUMPI PUSH3 0x8F7 PUSH3 0x896 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x908 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x918 DUP6 PUSH3 0x8C3 JUMP JUMPDEST SWAP5 POP PUSH3 0x8D8 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x93A JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xA0C JUMP JUMPDEST DUP2 PUSH3 0x949 JUMPI PUSH0 SWAP1 POP PUSH3 0xA0C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x962 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x96D JUMPI PUSH3 0x9A3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xA0C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x982 JUMPI PUSH3 0x981 PUSH3 0x896 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x99C JUMPI PUSH3 0x99B PUSH3 0x896 JUMP JUMPDEST JUMPDEST POP PUSH3 0xA0C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x9DD JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x9D7 JUMPI PUSH3 0x9D6 PUSH3 0x896 JUMP JUMPDEST JUMPDEST PUSH3 0xA0C JUMP JUMPDEST PUSH3 0x9EC DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x8CF JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xA06 JUMPI PUSH3 0xA05 PUSH3 0x896 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xA2B DUP3 PUSH3 0x60A JUMP JUMPDEST SWAP2 POP PUSH3 0xA38 DUP4 PUSH3 0xA13 JUMP JUMPDEST SWAP3 POP PUSH3 0xA67 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x929 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA7B DUP3 PUSH3 0x60A JUMP JUMPDEST SWAP2 POP PUSH3 0xA88 DUP4 PUSH3 0x60A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xA98 DUP2 PUSH3 0x60A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xAB2 JUMPI PUSH3 0xAB1 PUSH3 0x896 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xAC5 DUP3 PUSH3 0x60A JUMP JUMPDEST SWAP2 POP PUSH3 0xAD2 DUP4 PUSH3 0x60A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xAED JUMPI PUSH3 0xAEC PUSH3 0x896 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xAFE DUP2 PUSH3 0x60A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xB19 PUSH0 DUP4 ADD DUP7 PUSH3 0x86A JUMP JUMPDEST PUSH3 0xB28 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xAF3 JUMP JUMPDEST PUSH3 0xB37 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xAF3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB54 PUSH0 DUP4 ADD DUP5 PUSH3 0xAF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2180 DUP1 PUSH3 0xB68 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xD637DCFA GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD637DCFA EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0xFC37987B EQ PUSH2 0x4C0 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xAC6AF280 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xCB797836 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xD0679D34 EQ PUSH2 0x3C8 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x6217229B GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x6217229B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E8 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x204 JUMPI PUSH2 0x134 JUMP JUMPDEST CALLDATASIZE PUSH2 0x134 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x218 PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH2 0x841 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x383 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0x948 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH2 0x965 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x974 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0xA9A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0xB9B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B9 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0xC67 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D4 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4F9 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x525 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x570 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x547 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x570 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x553 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x584 PUSH2 0xCF1 JUMP JUMPDEST SWAP1 POP PUSH2 0x591 DUP2 DUP6 DUP6 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5AF PUSH2 0xCF1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5BC DUP6 DUP3 DUP6 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x5C7 DUP6 DUP6 DUP6 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH0 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0x63E SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x66A SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x68C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x698 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x6CE SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6FA SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x745 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x745 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x728 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x75E SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x78A SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x849 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x852 PUSH0 PUSH2 0xF13 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x88B SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B7 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x902 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x902 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x916 PUSH2 0xCF1 JUMP JUMPDEST SWAP1 POP PUSH2 0x923 DUP2 DUP6 DUP6 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x936 PUSH2 0xE8C JUMP JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x950 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x962 CALLER PUSH2 0x95C PUSH2 0x854 JUMP JUMPDEST DUP4 PUSH2 0xD9C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x970 CALLER DUP4 DUP4 PUSH2 0xD9C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP4 MLOAD GT PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AE SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD GT PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F1 SWAP1 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAA3 PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0xA PUSH2 0xAAF SWAP2 SWAP1 PUSH2 0x1F2A JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 PUSH2 0xABD SWAP2 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0xAC7 SWAP2 SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB02 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB15 CALLER DUP4 PUSH2 0xFD6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBA4 PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0xA PUSH2 0xBB0 SWAP2 SWAP1 PUSH2 0x1F2A JUMP JUMPDEST PUSH1 0x7 SLOAD DUP4 PUSH2 0xBBE SWAP2 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0xBC8 SWAP2 SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xBD4 CALLER PUSH2 0x7FC JUMP JUMPDEST LT ISZERO PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0C SWAP1 PUSH2 0x20C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC1F CALLER DUP4 PUSH2 0x1055 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC62 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC6F PUSH2 0xE8C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD6 SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE8 DUP2 PUSH2 0xF13 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD05 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD15 DUP5 DUP5 PUSH2 0xB19 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xD96 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD87 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD95 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x10D4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE03 SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE7C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE73 SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE87 DUP4 DUP4 DUP4 PUSH2 0x12A3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE94 PUSH2 0xCF1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEB2 PUSH2 0x854 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF11 JUMPI PUSH2 0xED5 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF08 SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1046 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103D SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1051 PUSH0 DUP4 DUP4 PUSH2 0x12A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BC SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10D0 DUP3 PUSH0 DUP4 PUSH2 0x12A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1144 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113B SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AB SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x129D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1294 SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12F3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12E7 SWAP2 SWAP1 PUSH2 0x2117 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13C1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x137C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1373 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1408 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1452 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x14AF SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14F3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14D8 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1518 DUP3 PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x1522 DUP2 DUP6 PUSH2 0x14C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1532 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14D6 JUMP JUMPDEST PUSH2 0x153B DUP2 PUSH2 0x14FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x155E DUP2 DUP5 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15A0 DUP3 PUSH2 0x1577 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B0 DUP2 PUSH2 0x1596 JUMP JUMPDEST DUP2 EQ PUSH2 0x15BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15CB DUP2 PUSH2 0x15A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E3 DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x15ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15FE DUP2 PUSH2 0x15DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x161A JUMPI PUSH2 0x1619 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1627 DUP6 DUP3 DUP7 ADD PUSH2 0x15BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1638 DUP6 DUP3 DUP7 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1656 DUP2 PUSH2 0x1642 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x166F PUSH0 DUP4 ADD DUP5 PUSH2 0x164D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x167E DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1697 PUSH0 DUP4 ADD DUP5 PUSH2 0x1675 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16B4 JUMPI PUSH2 0x16B3 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16C1 DUP7 DUP3 DUP8 ADD PUSH2 0x15BD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16D2 DUP7 DUP3 DUP8 ADD PUSH2 0x15BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16E3 DUP7 DUP3 DUP8 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1702 DUP2 PUSH2 0x16ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171B PUSH0 DUP4 ADD DUP5 PUSH2 0x16F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1736 JUMPI PUSH2 0x1735 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1743 DUP5 DUP3 DUP6 ADD PUSH2 0x15BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1764 DUP2 DUP7 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1778 DUP2 DUP6 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x178C DUP2 DUP5 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x179F DUP2 PUSH2 0x1596 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17B8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1796 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D4 JUMPI PUSH2 0x17D3 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E1 DUP6 DUP3 DUP7 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17F2 DUP6 DUP3 DUP7 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1811 JUMPI PUSH2 0x1810 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x181E DUP5 DUP3 DUP6 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1865 DUP3 PUSH2 0x14FE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1884 JUMPI PUSH2 0x1883 PUSH2 0x182F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1896 PUSH2 0x1566 JUMP JUMPDEST SWAP1 POP PUSH2 0x18A2 DUP3 DUP3 PUSH2 0x185C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18C1 JUMPI PUSH2 0x18C0 PUSH2 0x182F JUMP JUMPDEST JUMPDEST PUSH2 0x18CA DUP3 PUSH2 0x14FE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18F7 PUSH2 0x18F2 DUP5 PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0x188D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1913 JUMPI PUSH2 0x1912 PUSH2 0x182B JUMP JUMPDEST JUMPDEST PUSH2 0x191E DUP5 DUP3 DUP6 PUSH2 0x18D7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x193A JUMPI PUSH2 0x1939 PUSH2 0x1827 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x194A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x196A JUMPI PUSH2 0x1969 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1987 JUMPI PUSH2 0x1986 PUSH2 0x1573 JUMP JUMPDEST JUMPDEST PUSH2 0x1993 DUP7 DUP3 DUP8 ADD PUSH2 0x1926 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19B4 JUMPI PUSH2 0x19B3 PUSH2 0x1573 JUMP JUMPDEST JUMPDEST PUSH2 0x19C0 DUP7 DUP3 DUP8 ADD PUSH2 0x1926 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19E1 JUMPI PUSH2 0x19E0 PUSH2 0x1573 JUMP JUMPDEST JUMPDEST PUSH2 0x19ED DUP7 DUP3 DUP8 ADD PUSH2 0x1926 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A0D JUMPI PUSH2 0x1A0C PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1A DUP6 DUP3 DUP7 ADD PUSH2 0x15BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A2B DUP6 DUP3 DUP7 ADD PUSH2 0x15BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A79 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A8C JUMPI PUSH2 0x1A8B PUSH2 0x1A35 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x557365726E616D65206D757374206E6F7420626520656D707479000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC6 PUSH1 0x1A DUP4 PUSH2 0x14C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD1 DUP3 PUSH2 0x1A92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AF3 DUP2 PUSH2 0x1ABA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456D61696C206D757374206E6F7420626520656D707479000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B2E PUSH1 0x17 DUP4 PUSH2 0x14C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B39 DUP3 PUSH2 0x1AFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B5B DUP2 PUSH2 0x1B22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1BBE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x1BC8 DUP7 DUP4 PUSH2 0x1B83 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C03 PUSH2 0x1BFE PUSH2 0x1BF9 DUP5 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C1C DUP4 PUSH2 0x1BE9 JUMP JUMPDEST PUSH2 0x1C30 PUSH2 0x1C28 DUP3 PUSH2 0x1C0A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1B8F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1C44 PUSH2 0x1C38 JUMP JUMPDEST PUSH2 0x1C4F DUP2 DUP5 DUP5 PUSH2 0x1C13 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C72 JUMPI PUSH2 0x1C67 PUSH0 DUP3 PUSH2 0x1C3C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C55 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1CB7 JUMPI PUSH2 0x1C88 DUP2 PUSH2 0x1B62 JUMP JUMPDEST PUSH2 0x1C91 DUP5 PUSH2 0x1B74 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1CA0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1CB4 PUSH2 0x1CAC DUP6 PUSH2 0x1B74 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1C54 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1CBC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CEF DUP4 DUP4 PUSH2 0x1CC8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D08 DUP3 PUSH2 0x14BC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D21 JUMPI PUSH2 0x1D20 PUSH2 0x182F JUMP JUMPDEST JUMPDEST PUSH2 0x1D2B DUP3 SLOAD PUSH2 0x1A62 JUMP JUMPDEST PUSH2 0x1D36 DUP3 DUP3 DUP6 PUSH2 0x1C76 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1D67 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1D55 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1D5F DUP6 DUP3 PUSH2 0x1CE4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1D75 DUP7 PUSH2 0x1B62 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D9C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D77 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1DB9 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1DB5 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1CC8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1E50 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1E2C JUMPI PUSH2 0x1E2B PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1E3B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1E49 DUP6 PUSH2 0x1DFB JUMP JUMPDEST SWAP5 POP PUSH2 0x1E10 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1E68 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1F23 JUMP JUMPDEST DUP2 PUSH2 0x1E75 JUMPI PUSH0 SWAP1 POP PUSH2 0x1F23 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1E8B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1E95 JUMPI PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1EBE JUMPI PUSH2 0x1EBD PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST POP PUSH2 0x1F23 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1EF9 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1EF4 JUMPI PUSH2 0x1EF3 PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x1F06 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1E07 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1F1D JUMPI PUSH2 0x1F1C PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F34 DUP3 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3F DUP4 PUSH2 0x16ED JUMP JUMPDEST SWAP3 POP PUSH2 0x1F6C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1E59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F7E DUP3 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F89 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1F97 DUP2 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FAE JUMPI PUSH2 0x1FAD PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FEC DUP3 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF7 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2007 JUMPI PUSH2 0x2006 PUSH2 0x1FB5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E636F72726563742045544820616D6F756E742073656E7400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2046 PUSH1 0x19 DUP4 PUSH2 0x14C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2051 DUP3 PUSH2 0x2012 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2073 DUP2 PUSH2 0x203A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74204E422062616C616E6365000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20AE PUSH1 0x17 DUP4 PUSH2 0x14C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B9 DUP3 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20DB DUP2 PUSH2 0x20A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20F5 PUSH0 DUP4 ADD DUP7 PUSH2 0x1796 JUMP JUMPDEST PUSH2 0x2102 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1675 JUMP JUMPDEST PUSH2 0x210F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1675 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2121 DUP3 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x212C DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2144 JUMPI PUSH2 0x2143 PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x81 0x27 SHL LOG1 SELFBALANCE 0xE3 0xE4 0xE4 PUSH5 0x7FFCBE8194 PUSH16 0x695845A4225CA1877056E9D5D70E58FC PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "168:1932:6:-:0;;;236:2;210:28;;298:1;273:26;;476:145;;;;;;;;;;530:10;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;551:40:6::2;557:10;580;:8;;;:10;;:::i;:::-;576:2;:14;;;;:::i;:::-;569:4;:21;;;;:::i;:::-;551:5;;;:40;;:::i;:::-;168:1932:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3002:82:2:-;3051:5;3075:2;3068:9;;3002:82;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:102;6048:8;6095:5;6092:1;6088:13;6067:34;;6006:102;;;:::o;6114:848::-;6175:5;6182:4;6206:6;6197:15;;6230:5;6221:14;;6244:712;6265:1;6255:8;6252:15;6244:712;;;6360:4;6355:3;6351:14;6345:4;6342:24;6339:50;;;6369:18;;:::i;:::-;6339:50;6419:1;6409:8;6405:16;6402:451;;;6834:4;6827:5;6823:16;6814:25;;6402:451;6884:4;6878;6874:15;6866:23;;6914:32;6937:8;6914:32;:::i;:::-;6902:44;;6244:712;;;6114:848;;;;;;;:::o;6968:1073::-;7022:5;7213:8;7203:40;;7234:1;7225:10;;7236:5;;7203:40;7262:4;7252:36;;7279:1;7270:10;;7281:5;;7252:36;7348:4;7396:1;7391:27;;;;7432:1;7427:191;;;;7341:277;;7391:27;7409:1;7400:10;;7411:5;;;7427:191;7472:3;7462:8;7459:17;7456:43;;;7479:18;;:::i;:::-;7456:43;7528:8;7525:1;7521:16;7512:25;;7563:3;7556:5;7553:14;7550:40;;;7570:18;;:::i;:::-;7550:40;7603:5;;;7341:277;;7727:2;7717:8;7714:16;7708:3;7702:4;7699:13;7695:36;7677:2;7667:8;7664:16;7659:2;7653:4;7650:12;7646:35;7630:111;7627:246;;;7783:8;7777:4;7773:19;7764:28;;7818:3;7811:5;7808:14;7805:40;;;7825:18;;:::i;:::-;7805:40;7858:5;;7627:246;7898:42;7936:3;7926:8;7920:4;7917:1;7898:42;:::i;:::-;7883:57;;;;7972:4;7967:3;7963:14;7956:5;7953:25;7950:51;;;7981:18;;:::i;:::-;7950:51;8030:4;8023:5;8019:16;8010:25;;6968:1073;;;;;;:::o;8047:86::-;8082:7;8122:4;8115:5;8111:16;8100:27;;8047:86;;;:::o;8139:281::-;8197:5;8221:23;8239:4;8221:23;:::i;:::-;8213:31;;8265:25;8281:8;8265:25;:::i;:::-;8253:37;;8309:104;8346:66;8336:8;8330:4;8309:104;:::i;:::-;8300:113;;8139:281;;;;:::o;8426:410::-;8466:7;8489:20;8507:1;8489:20;:::i;:::-;8484:25;;8523:20;8541:1;8523:20;:::i;:::-;8518:25;;8578:1;8575;8571:9;8600:30;8618:11;8600:30;:::i;:::-;8589:41;;8779:1;8770:7;8766:15;8763:1;8760:22;8740:1;8733:9;8713:83;8690:139;;8809:18;;:::i;:::-;8690:139;8474:362;8426:410;;;;:::o;8842:191::-;8882:3;8901:20;8919:1;8901:20;:::i;:::-;8896:25;;8935:20;8953:1;8935:20;:::i;:::-;8930:25;;8978:1;8975;8971:9;8964:16;;8999:3;8996:1;8993:10;8990:36;;;9006:18;;:::i;:::-;8990:36;8842:191;;;;:::o;9039:118::-;9126:24;9144:5;9126:24;:::i;:::-;9121:3;9114:37;9039:118;;:::o;9163:442::-;9312:4;9350:2;9339:9;9335:18;9327:26;;9363:71;9431:1;9420:9;9416:17;9407:6;9363:71;:::i;:::-;9444:72;9512:2;9501:9;9497:18;9488:6;9444:72;:::i;:::-;9526;9594:2;9583:9;9579:18;9570:6;9526:72;:::i;:::-;9163:442;;;;;;:::o;9611:222::-;9704:4;9742:2;9731:9;9727:18;9719:26;;9755:71;9823:1;9812:9;9808:17;9799:6;9755:71;:::i;:::-;9611:222;;;;:::o;168:1932:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1180": {
									"entryPoint": null,
									"id": 1180,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 3320,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4308,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 4181,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3724,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 4054,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 3313,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3338,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3859,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3484,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4771,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2841,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1402,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2044,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyRate_947": {
									"entryPoint": 3307,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buy_1084": {
									"entryPoint": 2714,
									"id": 1084,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1491,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserInfo_1052": {
									"entryPoint": 1505,
									"id": 1052,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@name_345": {
									"entryPoint": 1258,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2132,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@registerUser_1025": {
									"entryPoint": 2420,
									"id": 1025,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2113,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellRate_944": {
									"entryPoint": 1499,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sell_1127": {
									"entryPoint": 2971,
									"id": 1127,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sendToOwner_1158": {
									"entryPoint": 2376,
									"id": 1158,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@send_1142": {
									"entryPoint": 2405,
									"id": 1142,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setRates_1176": {
									"entryPoint": 2350,
									"id": 1176,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2172,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1436,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1445,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3175,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2316,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6373,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 6483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8418,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5478,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 7010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7687,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 7978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7769,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 7286,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 7252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 7145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6359,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5334,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 7028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 7396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 7368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7630,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8117,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6709,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 7178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6187,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5491,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5487,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 7043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 7675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 7356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 7228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca": {
									"entryPoint": 8314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186": {
									"entryPoint": 8210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9": {
									"entryPoint": 6802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2": {
									"entryPoint": 6906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 7055,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 7187,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 7224,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23543:7",
										"nodeType": "YulBlock",
										"src": "0:23543:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:184:7",
													"nodeType": "YulBlock",
													"src": "349:184:7",
													"statements": [
														{
															"nativeSrc": "359:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:7",
																"nodeType": "YulLiteral",
																"src": "368:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:7",
																	"nodeType": "YulTypedName",
																	"src": "363:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:7",
																"nodeType": "YulBlock",
																"src": "428:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:7"
																					},
																					"nativeSrc": "449:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:7"
																							},
																							"nativeSrc": "468:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:7"
																					},
																					"nativeSrc": "462:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:7"
																			},
																			"nativeSrc": "442:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:7"
																		},
																		"nativeSrc": "442:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:7"
																},
																"nativeSrc": "386:13:7",
																"nodeType": "YulFunctionCall",
																"src": "386:13:7"
															},
															"nativeSrc": "378:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:7",
																"nodeType": "YulBlock",
																"src": "400:19:7",
																"statements": [
																	{
																		"nativeSrc": "402:15:7",
																		"nodeType": "YulAssignment",
																		"src": "402:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:7",
																					"nodeType": "YulLiteral",
																					"src": "414:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:7"
																			},
																			"nativeSrc": "407:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:7",
																"nodeType": "YulBlock",
																"src": "382:3:7",
																"statements": []
															},
															"src": "378:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:7"
																		},
																		"nativeSrc": "507:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:7",
																		"nodeType": "YulLiteral",
																		"src": "525:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:7"
																},
																"nativeSrc": "500:27:7",
																"nodeType": "YulFunctionCall",
																"src": "500:27:7"
															},
															"nativeSrc": "500:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:246:7"
											},
											{
												"body": {
													"nativeSrc": "587:54:7",
													"nodeType": "YulBlock",
													"src": "587:54:7",
													"statements": [
														{
															"nativeSrc": "597:38:7",
															"nodeType": "YulAssignment",
															"src": "597:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:7",
																				"nodeType": "YulLiteral",
																				"src": "622:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:7"
																		},
																		"nativeSrc": "611:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:7",
																				"nodeType": "YulLiteral",
																				"src": "631:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:7"
																		},
																		"nativeSrc": "627:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:7"
																},
																"nativeSrc": "607:28:7",
																"nodeType": "YulFunctionCall",
																"src": "607:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:7",
														"nodeType": "YulTypedName",
														"src": "570:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:7",
														"nodeType": "YulTypedName",
														"src": "580:6:7",
														"type": ""
													}
												],
												"src": "539:102:7"
											},
											{
												"body": {
													"nativeSrc": "739:285:7",
													"nodeType": "YulBlock",
													"src": "739:285:7",
													"statements": [
														{
															"nativeSrc": "749:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:7"
																},
																"nativeSrc": "763:39:7",
																"nodeType": "YulFunctionCall",
																"src": "763:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:7",
																	"nodeType": "YulTypedName",
																	"src": "753:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:7",
															"nodeType": "YulAssignment",
															"src": "811:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:7"
																},
																"nativeSrc": "818:71:7",
																"nodeType": "YulFunctionCall",
																"src": "818:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:7",
																				"nodeType": "YulLiteral",
																				"src": "944:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:7"
																		},
																		"nativeSrc": "933:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:7"
																},
																"nativeSrc": "898:65:7",
																"nodeType": "YulFunctionCall",
																"src": "898:65:7"
															},
															"nativeSrc": "898:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:7"
														},
														{
															"nativeSrc": "972:46:7",
															"nodeType": "YulAssignment",
															"src": "972:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:7"
																		},
																		"nativeSrc": "988:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:7"
																},
																"nativeSrc": "979:39:7",
																"nodeType": "YulFunctionCall",
																"src": "979:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:7",
														"nodeType": "YulTypedName",
														"src": "720:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:7",
														"nodeType": "YulTypedName",
														"src": "727:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:7",
														"nodeType": "YulTypedName",
														"src": "735:3:7",
														"type": ""
													}
												],
												"src": "647:377:7"
											},
											{
												"body": {
													"nativeSrc": "1148:195:7",
													"nodeType": "YulBlock",
													"src": "1148:195:7",
													"statements": [
														{
															"nativeSrc": "1158:26:7",
															"nodeType": "YulAssignment",
															"src": "1158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:7"
																},
																"nativeSrc": "1166:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:7"
																		},
																		"nativeSrc": "1201:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:7"
																		},
																		"nativeSrc": "1220:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:7"
																},
																"nativeSrc": "1194:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:7"
															},
															"nativeSrc": "1194:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:7"
														},
														{
															"nativeSrc": "1250:86:7",
															"nodeType": "YulAssignment",
															"src": "1250:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:7"
																},
																"nativeSrc": "1258:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:7",
														"nodeType": "YulTypedName",
														"src": "1120:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:7",
														"nodeType": "YulTypedName",
														"src": "1132:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:7",
														"nodeType": "YulTypedName",
														"src": "1143:4:7",
														"type": ""
													}
												],
												"src": "1030:313:7"
											},
											{
												"body": {
													"nativeSrc": "1389:35:7",
													"nodeType": "YulBlock",
													"src": "1389:35:7",
													"statements": [
														{
															"nativeSrc": "1399:19:7",
															"nodeType": "YulAssignment",
															"src": "1399:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:7"
																},
																"nativeSrc": "1409:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:7",
														"nodeType": "YulTypedName",
														"src": "1382:6:7",
														"type": ""
													}
												],
												"src": "1349:75:7"
											},
											{
												"body": {
													"nativeSrc": "1519:28:7",
													"nodeType": "YulBlock",
													"src": "1519:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:7"
																},
																"nativeSrc": "1529:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:7"
															},
															"nativeSrc": "1529:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:7"
											},
											{
												"body": {
													"nativeSrc": "1642:28:7",
													"nodeType": "YulBlock",
													"src": "1642:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:7"
																},
																"nativeSrc": "1652:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:7"
															},
															"nativeSrc": "1652:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:7"
											},
											{
												"body": {
													"nativeSrc": "1721:81:7",
													"nodeType": "YulBlock",
													"src": "1721:81:7",
													"statements": [
														{
															"nativeSrc": "1731:65:7",
															"nodeType": "YulAssignment",
															"src": "1731:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:7"
																},
																"nativeSrc": "1742:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:7",
														"nodeType": "YulTypedName",
														"src": "1703:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:7",
														"nodeType": "YulTypedName",
														"src": "1713:7:7",
														"type": ""
													}
												],
												"src": "1676:126:7"
											},
											{
												"body": {
													"nativeSrc": "1853:51:7",
													"nodeType": "YulBlock",
													"src": "1853:51:7",
													"statements": [
														{
															"nativeSrc": "1863:35:7",
															"nodeType": "YulAssignment",
															"src": "1863:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:7"
																},
																"nativeSrc": "1874:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:7",
														"nodeType": "YulTypedName",
														"src": "1835:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:7",
														"nodeType": "YulTypedName",
														"src": "1845:7:7",
														"type": ""
													}
												],
												"src": "1808:96:7"
											},
											{
												"body": {
													"nativeSrc": "1953:79:7",
													"nodeType": "YulBlock",
													"src": "1953:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:7",
																"nodeType": "YulBlock",
																"src": "2010:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:7"
																			},
																			"nativeSrc": "2012:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:7"
																		},
																		"nativeSrc": "2012:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:7"
																				},
																				"nativeSrc": "1983:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:7"
																		},
																		"nativeSrc": "1973:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:7"
																},
																"nativeSrc": "1966:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:7"
															},
															"nativeSrc": "1963:63:7",
															"nodeType": "YulIf",
															"src": "1963:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:7",
														"nodeType": "YulTypedName",
														"src": "1946:5:7",
														"type": ""
													}
												],
												"src": "1910:122:7"
											},
											{
												"body": {
													"nativeSrc": "2090:87:7",
													"nodeType": "YulBlock",
													"src": "2090:87:7",
													"statements": [
														{
															"nativeSrc": "2100:29:7",
															"nodeType": "YulAssignment",
															"src": "2100:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:7"
																},
																"nativeSrc": "2109:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:7"
																},
																"nativeSrc": "2138:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:7"
															},
															"nativeSrc": "2138:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:7",
														"nodeType": "YulTypedName",
														"src": "2068:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:7",
														"nodeType": "YulTypedName",
														"src": "2076:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:7",
														"nodeType": "YulTypedName",
														"src": "2084:5:7",
														"type": ""
													}
												],
												"src": "2038:139:7"
											},
											{
												"body": {
													"nativeSrc": "2228:32:7",
													"nodeType": "YulBlock",
													"src": "2228:32:7",
													"statements": [
														{
															"nativeSrc": "2238:16:7",
															"nodeType": "YulAssignment",
															"src": "2238:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:7",
																"nodeType": "YulIdentifier",
																"src": "2249:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:7",
														"nodeType": "YulTypedName",
														"src": "2210:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:7",
														"nodeType": "YulTypedName",
														"src": "2220:7:7",
														"type": ""
													}
												],
												"src": "2183:77:7"
											},
											{
												"body": {
													"nativeSrc": "2309:79:7",
													"nodeType": "YulBlock",
													"src": "2309:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:7",
																"nodeType": "YulBlock",
																"src": "2366:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:7"
																			},
																			"nativeSrc": "2368:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:7"
																		},
																		"nativeSrc": "2368:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:7"
																				},
																				"nativeSrc": "2339:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:7"
																		},
																		"nativeSrc": "2329:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:7"
																},
																"nativeSrc": "2322:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:7"
															},
															"nativeSrc": "2319:63:7",
															"nodeType": "YulIf",
															"src": "2319:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:7",
														"nodeType": "YulTypedName",
														"src": "2302:5:7",
														"type": ""
													}
												],
												"src": "2266:122:7"
											},
											{
												"body": {
													"nativeSrc": "2446:87:7",
													"nodeType": "YulBlock",
													"src": "2446:87:7",
													"statements": [
														{
															"nativeSrc": "2456:29:7",
															"nodeType": "YulAssignment",
															"src": "2456:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:7"
																},
																"nativeSrc": "2465:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:7"
																},
																"nativeSrc": "2494:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:7"
															},
															"nativeSrc": "2494:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:7",
														"nodeType": "YulTypedName",
														"src": "2424:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:7",
														"nodeType": "YulTypedName",
														"src": "2432:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:7",
														"nodeType": "YulTypedName",
														"src": "2440:5:7",
														"type": ""
													}
												],
												"src": "2394:139:7"
											},
											{
												"body": {
													"nativeSrc": "2622:391:7",
													"nodeType": "YulBlock",
													"src": "2622:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:7",
																"nodeType": "YulBlock",
																"src": "2668:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:7"
																			},
																			"nativeSrc": "2670:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:7"
																		},
																		"nativeSrc": "2670:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:7"
																		},
																		"nativeSrc": "2639:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:7"
																},
																"nativeSrc": "2635:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:7"
															},
															"nativeSrc": "2632:119:7",
															"nodeType": "YulIf",
															"src": "2632:119:7"
														},
														{
															"nativeSrc": "2761:117:7",
															"nodeType": "YulBlock",
															"src": "2761:117:7",
															"statements": [
																{
																	"nativeSrc": "2776:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:7"
																				},
																				"nativeSrc": "2836:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:7"
																		},
																		"nativeSrc": "2815:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:7",
															"nodeType": "YulBlock",
															"src": "2888:118:7",
															"statements": [
																{
																	"nativeSrc": "2903:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:7"
																				},
																				"nativeSrc": "2964:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:7"
																		},
																		"nativeSrc": "2943:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:7",
														"nodeType": "YulTypedName",
														"src": "2584:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:7",
														"nodeType": "YulTypedName",
														"src": "2595:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:7",
														"nodeType": "YulTypedName",
														"src": "2607:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:7",
														"nodeType": "YulTypedName",
														"src": "2615:6:7",
														"type": ""
													}
												],
												"src": "2539:474:7"
											},
											{
												"body": {
													"nativeSrc": "3061:48:7",
													"nodeType": "YulBlock",
													"src": "3061:48:7",
													"statements": [
														{
															"nativeSrc": "3071:32:7",
															"nodeType": "YulAssignment",
															"src": "3071:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:7"
																		},
																		"nativeSrc": "3089:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:7"
																},
																"nativeSrc": "3082:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:7",
														"nodeType": "YulTypedName",
														"src": "3043:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:7",
														"nodeType": "YulTypedName",
														"src": "3053:7:7",
														"type": ""
													}
												],
												"src": "3019:90:7"
											},
											{
												"body": {
													"nativeSrc": "3174:50:7",
													"nodeType": "YulBlock",
													"src": "3174:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:7"
																		},
																		"nativeSrc": "3196:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:7"
																},
																"nativeSrc": "3184:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:7"
															},
															"nativeSrc": "3184:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:7",
														"nodeType": "YulTypedName",
														"src": "3162:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:7",
														"nodeType": "YulTypedName",
														"src": "3169:3:7",
														"type": ""
													}
												],
												"src": "3115:109:7"
											},
											{
												"body": {
													"nativeSrc": "3322:118:7",
													"nodeType": "YulBlock",
													"src": "3322:118:7",
													"statements": [
														{
															"nativeSrc": "3332:26:7",
															"nodeType": "YulAssignment",
															"src": "3332:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:7"
																},
																"nativeSrc": "3340:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:7"
																		},
																		"nativeSrc": "3415:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:7"
																},
																"nativeSrc": "3368:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:7"
															},
															"nativeSrc": "3368:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:7",
														"nodeType": "YulTypedName",
														"src": "3294:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:7",
														"nodeType": "YulTypedName",
														"src": "3306:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:7",
														"nodeType": "YulTypedName",
														"src": "3317:4:7",
														"type": ""
													}
												],
												"src": "3230:210:7"
											},
											{
												"body": {
													"nativeSrc": "3511:53:7",
													"nodeType": "YulBlock",
													"src": "3511:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:7"
																		},
																		"nativeSrc": "3533:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:7"
																},
																"nativeSrc": "3521:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:7"
															},
															"nativeSrc": "3521:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:7",
														"nodeType": "YulTypedName",
														"src": "3499:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:7",
														"nodeType": "YulTypedName",
														"src": "3506:3:7",
														"type": ""
													}
												],
												"src": "3446:118:7"
											},
											{
												"body": {
													"nativeSrc": "3668:124:7",
													"nodeType": "YulBlock",
													"src": "3668:124:7",
													"statements": [
														{
															"nativeSrc": "3678:26:7",
															"nodeType": "YulAssignment",
															"src": "3678:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:7"
																},
																"nativeSrc": "3686:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:7"
																		},
																		"nativeSrc": "3767:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:7"
																},
																"nativeSrc": "3714:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:7"
															},
															"nativeSrc": "3714:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:7",
														"nodeType": "YulTypedName",
														"src": "3640:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:7",
														"nodeType": "YulTypedName",
														"src": "3652:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:7",
														"nodeType": "YulTypedName",
														"src": "3663:4:7",
														"type": ""
													}
												],
												"src": "3570:222:7"
											},
											{
												"body": {
													"nativeSrc": "3898:519:7",
													"nodeType": "YulBlock",
													"src": "3898:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:7",
																"nodeType": "YulBlock",
																"src": "3944:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:7"
																			},
																			"nativeSrc": "3946:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:7"
																		},
																		"nativeSrc": "3946:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:7"
																		},
																		"nativeSrc": "3915:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:7"
																},
																"nativeSrc": "3911:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:7"
															},
															"nativeSrc": "3908:119:7",
															"nodeType": "YulIf",
															"src": "3908:119:7"
														},
														{
															"nativeSrc": "4037:117:7",
															"nodeType": "YulBlock",
															"src": "4037:117:7",
															"statements": [
																{
																	"nativeSrc": "4052:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:7"
																				},
																				"nativeSrc": "4112:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:7"
																		},
																		"nativeSrc": "4091:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:7",
															"nodeType": "YulBlock",
															"src": "4164:118:7",
															"statements": [
																{
																	"nativeSrc": "4179:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:7"
																				},
																				"nativeSrc": "4240:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:7"
																		},
																		"nativeSrc": "4219:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:7",
															"nodeType": "YulBlock",
															"src": "4292:118:7",
															"statements": [
																{
																	"nativeSrc": "4307:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:7"
																				},
																				"nativeSrc": "4368:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:7"
																		},
																		"nativeSrc": "4347:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:7",
														"nodeType": "YulTypedName",
														"src": "3852:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:7",
														"nodeType": "YulTypedName",
														"src": "3863:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:7",
														"nodeType": "YulTypedName",
														"src": "3875:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:7",
														"nodeType": "YulTypedName",
														"src": "3883:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:7",
														"nodeType": "YulTypedName",
														"src": "3891:6:7",
														"type": ""
													}
												],
												"src": "3798:619:7"
											},
											{
												"body": {
													"nativeSrc": "4466:43:7",
													"nodeType": "YulBlock",
													"src": "4466:43:7",
													"statements": [
														{
															"nativeSrc": "4476:27:7",
															"nodeType": "YulAssignment",
															"src": "4476:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:7"
																},
																"nativeSrc": "4487:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:7",
														"nodeType": "YulTypedName",
														"src": "4448:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:7",
														"nodeType": "YulTypedName",
														"src": "4458:7:7",
														"type": ""
													}
												],
												"src": "4423:86:7"
											},
											{
												"body": {
													"nativeSrc": "4576:51:7",
													"nodeType": "YulBlock",
													"src": "4576:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:7"
																		},
																		"nativeSrc": "4598:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:7"
																},
																"nativeSrc": "4586:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:7"
															},
															"nativeSrc": "4586:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:7",
														"nodeType": "YulTypedName",
														"src": "4564:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:7",
														"nodeType": "YulTypedName",
														"src": "4571:3:7",
														"type": ""
													}
												],
												"src": "4515:112:7"
											},
											{
												"body": {
													"nativeSrc": "4727:120:7",
													"nodeType": "YulBlock",
													"src": "4727:120:7",
													"statements": [
														{
															"nativeSrc": "4737:26:7",
															"nodeType": "YulAssignment",
															"src": "4737:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:7"
																},
																"nativeSrc": "4745:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:7"
																		},
																		"nativeSrc": "4822:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:7"
																},
																"nativeSrc": "4773:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:7"
															},
															"nativeSrc": "4773:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:7",
														"nodeType": "YulTypedName",
														"src": "4699:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:7",
														"nodeType": "YulTypedName",
														"src": "4711:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:7",
														"nodeType": "YulTypedName",
														"src": "4722:4:7",
														"type": ""
													}
												],
												"src": "4633:214:7"
											},
											{
												"body": {
													"nativeSrc": "4919:263:7",
													"nodeType": "YulBlock",
													"src": "4919:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:7",
																"nodeType": "YulBlock",
																"src": "4965:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:7"
																			},
																			"nativeSrc": "4967:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:7"
																		},
																		"nativeSrc": "4967:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:7"
																		},
																		"nativeSrc": "4936:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:7"
																},
																"nativeSrc": "4932:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:7"
															},
															"nativeSrc": "4929:119:7",
															"nodeType": "YulIf",
															"src": "4929:119:7"
														},
														{
															"nativeSrc": "5058:117:7",
															"nodeType": "YulBlock",
															"src": "5058:117:7",
															"statements": [
																{
																	"nativeSrc": "5073:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:7"
																				},
																				"nativeSrc": "5133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:7"
																		},
																		"nativeSrc": "5112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4853:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:7",
														"nodeType": "YulTypedName",
														"src": "4889:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:7",
														"nodeType": "YulTypedName",
														"src": "4900:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:7",
														"nodeType": "YulTypedName",
														"src": "4912:6:7",
														"type": ""
													}
												],
												"src": "4853:329:7"
											},
											{
												"body": {
													"nativeSrc": "5402:501:7",
													"nodeType": "YulBlock",
													"src": "5402:501:7",
													"statements": [
														{
															"nativeSrc": "5412:26:7",
															"nodeType": "YulAssignment",
															"src": "5412:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5424:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5424:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5435:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5435:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5420:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5420:3:7"
																},
																"nativeSrc": "5420:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5420:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5412:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5412:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5459:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5459:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5470:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5470:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5455:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5455:3:7"
																		},
																		"nativeSrc": "5455:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5455:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5478:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5478:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5484:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5484:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5474:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5474:3:7"
																		},
																		"nativeSrc": "5474:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5474:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5448:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5448:6:7"
																},
																"nativeSrc": "5448:47:7",
																"nodeType": "YulFunctionCall",
																"src": "5448:47:7"
															},
															"nativeSrc": "5448:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "5448:47:7"
														},
														{
															"nativeSrc": "5504:86:7",
															"nodeType": "YulAssignment",
															"src": "5504:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5576:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5576:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5585:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5585:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5512:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "5512:63:7"
																},
																"nativeSrc": "5512:78:7",
																"nodeType": "YulFunctionCall",
																"src": "5512:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5504:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5504:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5611:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5622:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5622:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5607:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5607:3:7"
																		},
																		"nativeSrc": "5607:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5607:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5631:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5631:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5637:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5637:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5627:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5627:3:7"
																		},
																		"nativeSrc": "5627:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5627:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5600:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5600:6:7"
																},
																"nativeSrc": "5600:48:7",
																"nodeType": "YulFunctionCall",
																"src": "5600:48:7"
															},
															"nativeSrc": "5600:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "5600:48:7"
														},
														{
															"nativeSrc": "5657:86:7",
															"nodeType": "YulAssignment",
															"src": "5657:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5729:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5729:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5738:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5738:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5665:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "5665:63:7"
																},
																"nativeSrc": "5665:78:7",
																"nodeType": "YulFunctionCall",
																"src": "5665:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5657:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5657:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5764:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5764:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5775:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5775:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5760:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5760:3:7"
																		},
																		"nativeSrc": "5760:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5760:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5784:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5784:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5790:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5790:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5780:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5780:3:7"
																		},
																		"nativeSrc": "5780:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5780:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5753:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5753:6:7"
																},
																"nativeSrc": "5753:48:7",
																"nodeType": "YulFunctionCall",
																"src": "5753:48:7"
															},
															"nativeSrc": "5753:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "5753:48:7"
														},
														{
															"nativeSrc": "5810:86:7",
															"nodeType": "YulAssignment",
															"src": "5810:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5882:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5882:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5891:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5891:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5818:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "5818:63:7"
																},
																"nativeSrc": "5818:78:7",
																"nodeType": "YulFunctionCall",
																"src": "5818:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5810:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5810:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5188:715:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5358:9:7",
														"nodeType": "YulTypedName",
														"src": "5358:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5370:6:7",
														"nodeType": "YulTypedName",
														"src": "5370:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5378:6:7",
														"nodeType": "YulTypedName",
														"src": "5378:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5386:6:7",
														"nodeType": "YulTypedName",
														"src": "5386:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5397:4:7",
														"nodeType": "YulTypedName",
														"src": "5397:4:7",
														"type": ""
													}
												],
												"src": "5188:715:7"
											},
											{
												"body": {
													"nativeSrc": "5974:53:7",
													"nodeType": "YulBlock",
													"src": "5974:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5991:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5991:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6014:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6014:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5996:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5996:17:7"
																		},
																		"nativeSrc": "5996:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5996:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5984:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5984:6:7"
																},
																"nativeSrc": "5984:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5984:37:7"
															},
															"nativeSrc": "5984:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5984:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5909:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5962:5:7",
														"nodeType": "YulTypedName",
														"src": "5962:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5969:3:7",
														"nodeType": "YulTypedName",
														"src": "5969:3:7",
														"type": ""
													}
												],
												"src": "5909:118:7"
											},
											{
												"body": {
													"nativeSrc": "6131:124:7",
													"nodeType": "YulBlock",
													"src": "6131:124:7",
													"statements": [
														{
															"nativeSrc": "6141:26:7",
															"nodeType": "YulAssignment",
															"src": "6141:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6153:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6153:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6164:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6164:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6149:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6149:3:7"
																},
																"nativeSrc": "6149:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6149:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6141:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6141:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6221:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6221:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6234:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6234:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6245:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6245:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6230:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6230:3:7"
																		},
																		"nativeSrc": "6230:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6230:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6177:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6177:43:7"
																},
																"nativeSrc": "6177:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6177:71:7"
															},
															"nativeSrc": "6177:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6177:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6033:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6103:9:7",
														"nodeType": "YulTypedName",
														"src": "6103:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6115:6:7",
														"nodeType": "YulTypedName",
														"src": "6115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6126:4:7",
														"nodeType": "YulTypedName",
														"src": "6126:4:7",
														"type": ""
													}
												],
												"src": "6033:222:7"
											},
											{
												"body": {
													"nativeSrc": "6344:391:7",
													"nodeType": "YulBlock",
													"src": "6344:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6390:83:7",
																"nodeType": "YulBlock",
																"src": "6390:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6392:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6392:77:7"
																			},
																			"nativeSrc": "6392:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6392:79:7"
																		},
																		"nativeSrc": "6392:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6392:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6365:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6365:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6374:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6374:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6361:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6361:3:7"
																		},
																		"nativeSrc": "6361:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6361:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6386:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6386:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6357:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6357:3:7"
																},
																"nativeSrc": "6357:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6357:32:7"
															},
															"nativeSrc": "6354:119:7",
															"nodeType": "YulIf",
															"src": "6354:119:7"
														},
														{
															"nativeSrc": "6483:117:7",
															"nodeType": "YulBlock",
															"src": "6483:117:7",
															"statements": [
																{
																	"nativeSrc": "6498:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6498:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6512:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6512:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6502:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6502:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6527:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6527:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6562:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6562:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6573:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6573:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6558:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6558:3:7"
																				},
																				"nativeSrc": "6558:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6558:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6582:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6582:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6537:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6537:20:7"
																		},
																		"nativeSrc": "6537:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6537:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6527:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6527:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6610:118:7",
															"nodeType": "YulBlock",
															"src": "6610:118:7",
															"statements": [
																{
																	"nativeSrc": "6625:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6625:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6639:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6639:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6629:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6629:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6655:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6655:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6690:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6690:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6701:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6701:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6686:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6686:3:7"
																				},
																				"nativeSrc": "6686:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6686:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6710:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6710:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6665:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6665:20:7"
																		},
																		"nativeSrc": "6665:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6665:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6655:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6655:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "6261:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6306:9:7",
														"nodeType": "YulTypedName",
														"src": "6306:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6317:7:7",
														"nodeType": "YulTypedName",
														"src": "6317:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6329:6:7",
														"nodeType": "YulTypedName",
														"src": "6329:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6337:6:7",
														"nodeType": "YulTypedName",
														"src": "6337:6:7",
														"type": ""
													}
												],
												"src": "6261:474:7"
											},
											{
												"body": {
													"nativeSrc": "6807:263:7",
													"nodeType": "YulBlock",
													"src": "6807:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6853:83:7",
																"nodeType": "YulBlock",
																"src": "6853:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6855:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6855:77:7"
																			},
																			"nativeSrc": "6855:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6855:79:7"
																		},
																		"nativeSrc": "6855:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6855:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6828:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6828:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6837:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6837:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6824:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6824:3:7"
																		},
																		"nativeSrc": "6824:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6824:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6849:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6849:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6820:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6820:3:7"
																},
																"nativeSrc": "6820:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6820:32:7"
															},
															"nativeSrc": "6817:119:7",
															"nodeType": "YulIf",
															"src": "6817:119:7"
														},
														{
															"nativeSrc": "6946:117:7",
															"nodeType": "YulBlock",
															"src": "6946:117:7",
															"statements": [
																{
																	"nativeSrc": "6961:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6961:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6975:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6975:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6965:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6965:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6990:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6990:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7025:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7025:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7036:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7036:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7021:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7021:3:7"
																				},
																				"nativeSrc": "7021:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7021:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7045:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7045:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7000:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7000:20:7"
																		},
																		"nativeSrc": "7000:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7000:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6990:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6990:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6741:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6777:9:7",
														"nodeType": "YulTypedName",
														"src": "6777:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6788:7:7",
														"nodeType": "YulTypedName",
														"src": "6788:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6800:6:7",
														"nodeType": "YulTypedName",
														"src": "6800:6:7",
														"type": ""
													}
												],
												"src": "6741:329:7"
											},
											{
												"body": {
													"nativeSrc": "7165:28:7",
													"nodeType": "YulBlock",
													"src": "7165:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7182:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7182:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7185:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7185:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7175:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7175:6:7"
																},
																"nativeSrc": "7175:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7175:12:7"
															},
															"nativeSrc": "7175:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "7175:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7076:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7076:117:7"
											},
											{
												"body": {
													"nativeSrc": "7288:28:7",
													"nodeType": "YulBlock",
													"src": "7288:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7305:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7305:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7308:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7308:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7298:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7298:6:7"
																},
																"nativeSrc": "7298:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7298:12:7"
															},
															"nativeSrc": "7298:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "7298:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7199:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7199:117:7"
											},
											{
												"body": {
													"nativeSrc": "7350:152:7",
													"nodeType": "YulBlock",
													"src": "7350:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7367:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7367:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7370:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7370:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7360:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7360:6:7"
																},
																"nativeSrc": "7360:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7360:88:7"
															},
															"nativeSrc": "7360:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7360:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7464:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7467:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7467:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7457:6:7"
																},
																"nativeSrc": "7457:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7457:15:7"
															},
															"nativeSrc": "7457:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7457:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7488:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7488:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7491:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7491:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7481:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7481:6:7"
																},
																"nativeSrc": "7481:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7481:15:7"
															},
															"nativeSrc": "7481:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7481:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7322:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7322:180:7"
											},
											{
												"body": {
													"nativeSrc": "7551:238:7",
													"nodeType": "YulBlock",
													"src": "7551:238:7",
													"statements": [
														{
															"nativeSrc": "7561:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7561:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7583:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7583:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7613:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7613:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7591:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "7591:21:7"
																		},
																		"nativeSrc": "7591:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7591:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7579:3:7"
																},
																"nativeSrc": "7579:40:7",
																"nodeType": "YulFunctionCall",
																"src": "7579:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7565:10:7",
																	"nodeType": "YulTypedName",
																	"src": "7565:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7730:22:7",
																"nodeType": "YulBlock",
																"src": "7730:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7732:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7732:16:7"
																			},
																			"nativeSrc": "7732:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7732:18:7"
																		},
																		"nativeSrc": "7732:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7732:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7673:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "7673:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7685:18:7",
																				"nodeType": "YulLiteral",
																				"src": "7685:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7670:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7670:2:7"
																		},
																		"nativeSrc": "7670:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7670:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7709:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "7709:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7721:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7721:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7706:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7706:2:7"
																		},
																		"nativeSrc": "7706:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7706:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7667:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7667:2:7"
																},
																"nativeSrc": "7667:62:7",
																"nodeType": "YulFunctionCall",
																"src": "7667:62:7"
															},
															"nativeSrc": "7664:88:7",
															"nodeType": "YulIf",
															"src": "7664:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7768:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7768:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7772:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "7772:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7761:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7761:6:7"
																},
																"nativeSrc": "7761:22:7",
																"nodeType": "YulFunctionCall",
																"src": "7761:22:7"
															},
															"nativeSrc": "7761:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "7761:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7508:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7537:6:7",
														"nodeType": "YulTypedName",
														"src": "7537:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7545:4:7",
														"nodeType": "YulTypedName",
														"src": "7545:4:7",
														"type": ""
													}
												],
												"src": "7508:281:7"
											},
											{
												"body": {
													"nativeSrc": "7836:88:7",
													"nodeType": "YulBlock",
													"src": "7836:88:7",
													"statements": [
														{
															"nativeSrc": "7846:30:7",
															"nodeType": "YulAssignment",
															"src": "7846:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7856:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7856:18:7"
																},
																"nativeSrc": "7856:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7856:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7846:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7846:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7905:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7905:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7913:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7913:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7885:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "7885:19:7"
																},
																"nativeSrc": "7885:33:7",
																"nodeType": "YulFunctionCall",
																"src": "7885:33:7"
															},
															"nativeSrc": "7885:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "7885:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7795:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7820:4:7",
														"nodeType": "YulTypedName",
														"src": "7820:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7829:6:7",
														"nodeType": "YulTypedName",
														"src": "7829:6:7",
														"type": ""
													}
												],
												"src": "7795:129:7"
											},
											{
												"body": {
													"nativeSrc": "7997:241:7",
													"nodeType": "YulBlock",
													"src": "7997:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8102:22:7",
																"nodeType": "YulBlock",
																"src": "8102:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8104:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8104:16:7"
																			},
																			"nativeSrc": "8104:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8104:18:7"
																		},
																		"nativeSrc": "8104:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8104:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8074:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8074:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8082:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8082:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8071:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8071:2:7"
																},
																"nativeSrc": "8071:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8071:30:7"
															},
															"nativeSrc": "8068:56:7",
															"nodeType": "YulIf",
															"src": "8068:56:7"
														},
														{
															"nativeSrc": "8134:37:7",
															"nodeType": "YulAssignment",
															"src": "8134:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8164:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8164:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8142:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "8142:21:7"
																},
																"nativeSrc": "8142:29:7",
																"nodeType": "YulFunctionCall",
																"src": "8142:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8134:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8134:4:7"
																}
															]
														},
														{
															"nativeSrc": "8208:23:7",
															"nodeType": "YulAssignment",
															"src": "8208:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8220:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8220:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8226:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8226:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8216:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8216:3:7"
																},
																"nativeSrc": "8216:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8216:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8208:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8208:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "7930:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7981:6:7",
														"nodeType": "YulTypedName",
														"src": "7981:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7992:4:7",
														"nodeType": "YulTypedName",
														"src": "7992:4:7",
														"type": ""
													}
												],
												"src": "7930:308:7"
											},
											{
												"body": {
													"nativeSrc": "8308:82:7",
													"nodeType": "YulBlock",
													"src": "8308:82:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8331:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8331:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8336:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8336:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8341:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8341:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8318:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "8318:12:7"
																},
																"nativeSrc": "8318:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8318:30:7"
															},
															"nativeSrc": "8318:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8318:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8368:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8368:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8373:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8373:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8364:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8364:3:7"
																		},
																		"nativeSrc": "8364:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8364:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8382:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8382:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8357:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8357:6:7"
																},
																"nativeSrc": "8357:27:7",
																"nodeType": "YulFunctionCall",
																"src": "8357:27:7"
															},
															"nativeSrc": "8357:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "8357:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8244:146:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8290:3:7",
														"nodeType": "YulTypedName",
														"src": "8290:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8295:3:7",
														"nodeType": "YulTypedName",
														"src": "8295:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8300:6:7",
														"nodeType": "YulTypedName",
														"src": "8300:6:7",
														"type": ""
													}
												],
												"src": "8244:146:7"
											},
											{
												"body": {
													"nativeSrc": "8480:341:7",
													"nodeType": "YulBlock",
													"src": "8480:341:7",
													"statements": [
														{
															"nativeSrc": "8490:75:7",
															"nodeType": "YulAssignment",
															"src": "8490:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8557:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8557:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "8515:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "8515:41:7"
																		},
																		"nativeSrc": "8515:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8515:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8499:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "8499:15:7"
																},
																"nativeSrc": "8499:66:7",
																"nodeType": "YulFunctionCall",
																"src": "8499:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8490:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8490:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8581:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8581:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8588:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8588:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8574:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8574:6:7"
																},
																"nativeSrc": "8574:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8574:21:7"
															},
															"nativeSrc": "8574:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "8574:21:7"
														},
														{
															"nativeSrc": "8604:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8604:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8619:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8619:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8626:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8626:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8615:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8615:3:7"
																},
																"nativeSrc": "8615:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8615:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8608:3:7",
																	"nodeType": "YulTypedName",
																	"src": "8608:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8669:83:7",
																"nodeType": "YulBlock",
																"src": "8669:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8671:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8671:77:7"
																			},
																			"nativeSrc": "8671:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8671:79:7"
																		},
																		"nativeSrc": "8671:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8671:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8650:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8650:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8655:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8655:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8646:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8646:3:7"
																		},
																		"nativeSrc": "8646:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8646:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8664:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8664:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8643:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8643:2:7"
																},
																"nativeSrc": "8643:25:7",
																"nodeType": "YulFunctionCall",
																"src": "8643:25:7"
															},
															"nativeSrc": "8640:112:7",
															"nodeType": "YulIf",
															"src": "8640:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8798:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8798:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8803:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8803:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8808:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8808:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8761:36:7",
																	"nodeType": "YulIdentifier",
																	"src": "8761:36:7"
																},
																"nativeSrc": "8761:54:7",
																"nodeType": "YulFunctionCall",
																"src": "8761:54:7"
															},
															"nativeSrc": "8761:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "8761:54:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "8396:425:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8453:3:7",
														"nodeType": "YulTypedName",
														"src": "8453:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8458:6:7",
														"nodeType": "YulTypedName",
														"src": "8458:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8466:3:7",
														"nodeType": "YulTypedName",
														"src": "8466:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8474:5:7",
														"nodeType": "YulTypedName",
														"src": "8474:5:7",
														"type": ""
													}
												],
												"src": "8396:425:7"
											},
											{
												"body": {
													"nativeSrc": "8903:278:7",
													"nodeType": "YulBlock",
													"src": "8903:278:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8952:83:7",
																"nodeType": "YulBlock",
																"src": "8952:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8954:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8954:77:7"
																			},
																			"nativeSrc": "8954:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8954:79:7"
																		},
																		"nativeSrc": "8954:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8954:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8931:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8931:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8939:4:7",
																						"nodeType": "YulLiteral",
																						"src": "8939:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8927:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8927:3:7"
																				},
																				"nativeSrc": "8927:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8927:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8946:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8946:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8923:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8923:3:7"
																		},
																		"nativeSrc": "8923:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8923:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8916:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8916:6:7"
																},
																"nativeSrc": "8916:35:7",
																"nodeType": "YulFunctionCall",
																"src": "8916:35:7"
															},
															"nativeSrc": "8913:122:7",
															"nodeType": "YulIf",
															"src": "8913:122:7"
														},
														{
															"nativeSrc": "9044:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9044:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9071:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9071:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9058:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "9058:12:7"
																},
																"nativeSrc": "9058:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9058:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9048:6:7",
																	"nodeType": "YulTypedName",
																	"src": "9048:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9087:88:7",
															"nodeType": "YulAssignment",
															"src": "9087:88:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9148:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9148:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9156:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9156:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9144:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9144:3:7"
																		},
																		"nativeSrc": "9144:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9144:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9163:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9163:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9171:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9171:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "9096:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "9096:47:7"
																},
																"nativeSrc": "9096:79:7",
																"nodeType": "YulFunctionCall",
																"src": "9096:79:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9087:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9087:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "8841:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8881:6:7",
														"nodeType": "YulTypedName",
														"src": "8881:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8889:3:7",
														"nodeType": "YulTypedName",
														"src": "8889:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8897:5:7",
														"nodeType": "YulTypedName",
														"src": "8897:5:7",
														"type": ""
													}
												],
												"src": "8841:340:7"
											},
											{
												"body": {
													"nativeSrc": "9317:1029:7",
													"nodeType": "YulBlock",
													"src": "9317:1029:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9363:83:7",
																"nodeType": "YulBlock",
																"src": "9363:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9365:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9365:77:7"
																			},
																			"nativeSrc": "9365:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9365:79:7"
																		},
																		"nativeSrc": "9365:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9365:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9338:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9338:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9347:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9347:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9334:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9334:3:7"
																		},
																		"nativeSrc": "9334:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9334:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9359:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9359:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9330:3:7"
																},
																"nativeSrc": "9330:32:7",
																"nodeType": "YulFunctionCall",
																"src": "9330:32:7"
															},
															"nativeSrc": "9327:119:7",
															"nodeType": "YulIf",
															"src": "9327:119:7"
														},
														{
															"nativeSrc": "9456:287:7",
															"nodeType": "YulBlock",
															"src": "9456:287:7",
															"statements": [
																{
																	"nativeSrc": "9471:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9471:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9502:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9502:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9513:1:7",
																						"nodeType": "YulLiteral",
																						"src": "9513:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9498:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9498:3:7"
																				},
																				"nativeSrc": "9498:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9498:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9485:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "9485:12:7"
																		},
																		"nativeSrc": "9485:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9485:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9475:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9475:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9563:83:7",
																		"nodeType": "YulBlock",
																		"src": "9563:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9565:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "9565:77:7"
																					},
																					"nativeSrc": "9565:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9565:79:7"
																				},
																				"nativeSrc": "9565:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9565:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9535:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9535:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9543:18:7",
																				"nodeType": "YulLiteral",
																				"src": "9543:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9532:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9532:2:7"
																		},
																		"nativeSrc": "9532:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9532:30:7"
																	},
																	"nativeSrc": "9529:117:7",
																	"nodeType": "YulIf",
																	"src": "9529:117:7"
																},
																{
																	"nativeSrc": "9660:73:7",
																	"nodeType": "YulAssignment",
																	"src": "9660:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9705:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9705:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9716:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9716:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9701:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9701:3:7"
																				},
																				"nativeSrc": "9701:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9701:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9725:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9725:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "9670:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "9670:30:7"
																		},
																		"nativeSrc": "9670:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9670:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9660:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9660:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9753:288:7",
															"nodeType": "YulBlock",
															"src": "9753:288:7",
															"statements": [
																{
																	"nativeSrc": "9768:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9768:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9799:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9799:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9810:2:7",
																						"nodeType": "YulLiteral",
																						"src": "9810:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9795:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9795:3:7"
																				},
																				"nativeSrc": "9795:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9795:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9782:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "9782:12:7"
																		},
																		"nativeSrc": "9782:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9782:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9772:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9772:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9861:83:7",
																		"nodeType": "YulBlock",
																		"src": "9861:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9863:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "9863:77:7"
																					},
																					"nativeSrc": "9863:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9863:79:7"
																				},
																				"nativeSrc": "9863:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9863:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9833:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9833:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9841:18:7",
																				"nodeType": "YulLiteral",
																				"src": "9841:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9830:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9830:2:7"
																		},
																		"nativeSrc": "9830:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9830:30:7"
																	},
																	"nativeSrc": "9827:117:7",
																	"nodeType": "YulIf",
																	"src": "9827:117:7"
																},
																{
																	"nativeSrc": "9958:73:7",
																	"nodeType": "YulAssignment",
																	"src": "9958:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10003:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10003:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10014:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10014:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9999:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9999:3:7"
																				},
																				"nativeSrc": "9999:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9999:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10023:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10023:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "9968:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "9968:30:7"
																		},
																		"nativeSrc": "9968:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9968:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9958:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9958:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10051:288:7",
															"nodeType": "YulBlock",
															"src": "10051:288:7",
															"statements": [
																{
																	"nativeSrc": "10066:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10066:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10097:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10097:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10108:2:7",
																						"nodeType": "YulLiteral",
																						"src": "10108:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10093:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10093:3:7"
																				},
																				"nativeSrc": "10093:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10093:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10080:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "10080:12:7"
																		},
																		"nativeSrc": "10080:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10080:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10070:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10070:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10159:83:7",
																		"nodeType": "YulBlock",
																		"src": "10159:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10161:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "10161:77:7"
																					},
																					"nativeSrc": "10161:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10161:79:7"
																				},
																				"nativeSrc": "10161:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "10161:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10131:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10131:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10139:18:7",
																				"nodeType": "YulLiteral",
																				"src": "10139:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10128:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10128:2:7"
																		},
																		"nativeSrc": "10128:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10128:30:7"
																	},
																	"nativeSrc": "10125:117:7",
																	"nodeType": "YulIf",
																	"src": "10125:117:7"
																},
																{
																	"nativeSrc": "10256:73:7",
																	"nodeType": "YulAssignment",
																	"src": "10256:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10301:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10301:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10312:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10312:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10297:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10297:3:7"
																				},
																				"nativeSrc": "10297:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10297:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10321:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10321:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "10266:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "10266:30:7"
																		},
																		"nativeSrc": "10266:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10266:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10256:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10256:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "9187:1159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9271:9:7",
														"nodeType": "YulTypedName",
														"src": "9271:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9282:7:7",
														"nodeType": "YulTypedName",
														"src": "9282:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9294:6:7",
														"nodeType": "YulTypedName",
														"src": "9294:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9302:6:7",
														"nodeType": "YulTypedName",
														"src": "9302:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9310:6:7",
														"nodeType": "YulTypedName",
														"src": "9310:6:7",
														"type": ""
													}
												],
												"src": "9187:1159:7"
											},
											{
												"body": {
													"nativeSrc": "10435:391:7",
													"nodeType": "YulBlock",
													"src": "10435:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10481:83:7",
																"nodeType": "YulBlock",
																"src": "10481:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10483:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10483:77:7"
																			},
																			"nativeSrc": "10483:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10483:79:7"
																		},
																		"nativeSrc": "10483:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10483:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10456:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10456:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10465:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10465:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10452:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10452:3:7"
																		},
																		"nativeSrc": "10452:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10452:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10477:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10477:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10448:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10448:3:7"
																},
																"nativeSrc": "10448:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10448:32:7"
															},
															"nativeSrc": "10445:119:7",
															"nodeType": "YulIf",
															"src": "10445:119:7"
														},
														{
															"nativeSrc": "10574:117:7",
															"nodeType": "YulBlock",
															"src": "10574:117:7",
															"statements": [
																{
																	"nativeSrc": "10589:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10589:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10603:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10603:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10593:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10593:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10618:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10618:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10653:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10653:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10664:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10664:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10649:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10649:3:7"
																				},
																				"nativeSrc": "10649:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10649:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10673:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10673:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10628:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10628:20:7"
																		},
																		"nativeSrc": "10628:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10628:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10618:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10618:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10701:118:7",
															"nodeType": "YulBlock",
															"src": "10701:118:7",
															"statements": [
																{
																	"nativeSrc": "10716:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10716:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10730:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10730:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10720:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10720:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10746:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10746:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10781:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10781:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10792:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10792:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10777:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10777:3:7"
																				},
																				"nativeSrc": "10777:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10777:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10801:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10801:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10756:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10756:20:7"
																		},
																		"nativeSrc": "10756:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10756:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10746:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10746:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10352:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10397:9:7",
														"nodeType": "YulTypedName",
														"src": "10397:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10408:7:7",
														"nodeType": "YulTypedName",
														"src": "10408:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10420:6:7",
														"nodeType": "YulTypedName",
														"src": "10420:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10428:6:7",
														"nodeType": "YulTypedName",
														"src": "10428:6:7",
														"type": ""
													}
												],
												"src": "10352:474:7"
											},
											{
												"body": {
													"nativeSrc": "10860:152:7",
													"nodeType": "YulBlock",
													"src": "10860:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10877:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10877:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10880:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10880:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10870:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10870:6:7"
																},
																"nativeSrc": "10870:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10870:88:7"
															},
															"nativeSrc": "10870:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10870:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10974:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10974:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10977:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10977:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10967:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10967:6:7"
																},
																"nativeSrc": "10967:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10967:15:7"
															},
															"nativeSrc": "10967:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10967:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10998:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10998:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11001:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11001:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10991:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10991:6:7"
																},
																"nativeSrc": "10991:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10991:15:7"
															},
															"nativeSrc": "10991:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10991:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10832:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10832:180:7"
											},
											{
												"body": {
													"nativeSrc": "11069:269:7",
													"nodeType": "YulBlock",
													"src": "11069:269:7",
													"statements": [
														{
															"nativeSrc": "11079:22:7",
															"nodeType": "YulAssignment",
															"src": "11079:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11093:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11093:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11099:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11099:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11089:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11089:3:7"
																},
																"nativeSrc": "11089:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11089:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11079:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11079:6:7"
																}
															]
														},
														{
															"nativeSrc": "11110:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "11110:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11140:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11140:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11146:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11146:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11136:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11136:3:7"
																},
																"nativeSrc": "11136:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11136:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11114:18:7",
																	"nodeType": "YulTypedName",
																	"src": "11114:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11187:51:7",
																"nodeType": "YulBlock",
																"src": "11187:51:7",
																"statements": [
																	{
																		"nativeSrc": "11201:27:7",
																		"nodeType": "YulAssignment",
																		"src": "11201:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11215:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "11215:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11223:4:7",
																					"nodeType": "YulLiteral",
																					"src": "11223:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11211:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11211:3:7"
																			},
																			"nativeSrc": "11211:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11211:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11201:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11201:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11167:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "11167:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11160:6:7"
																},
																"nativeSrc": "11160:26:7",
																"nodeType": "YulFunctionCall",
																"src": "11160:26:7"
															},
															"nativeSrc": "11157:81:7",
															"nodeType": "YulIf",
															"src": "11157:81:7"
														},
														{
															"body": {
																"nativeSrc": "11290:42:7",
																"nodeType": "YulBlock",
																"src": "11290:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11304:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11304:16:7"
																			},
																			"nativeSrc": "11304:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11304:18:7"
																		},
																		"nativeSrc": "11304:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11304:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11254:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "11254:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11277:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11277:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11285:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11285:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11274:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "11274:2:7"
																		},
																		"nativeSrc": "11274:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11274:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11251:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11251:2:7"
																},
																"nativeSrc": "11251:38:7",
																"nodeType": "YulFunctionCall",
																"src": "11251:38:7"
															},
															"nativeSrc": "11248:84:7",
															"nodeType": "YulIf",
															"src": "11248:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11018:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11053:4:7",
														"nodeType": "YulTypedName",
														"src": "11053:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11062:6:7",
														"nodeType": "YulTypedName",
														"src": "11062:6:7",
														"type": ""
													}
												],
												"src": "11018:320:7"
											},
											{
												"body": {
													"nativeSrc": "11450:70:7",
													"nodeType": "YulBlock",
													"src": "11450:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11472:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11472:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11480:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11480:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11468:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11468:3:7"
																		},
																		"nativeSrc": "11468:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11468:14:7"
																	},
																	{
																		"hexValue": "557365726e616d65206d757374206e6f7420626520656d707479",
																		"kind": "string",
																		"nativeSrc": "11484:28:7",
																		"nodeType": "YulLiteral",
																		"src": "11484:28:7",
																		"type": "",
																		"value": "Username must not be empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11461:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11461:6:7"
																},
																"nativeSrc": "11461:52:7",
																"nodeType": "YulFunctionCall",
																"src": "11461:52:7"
															},
															"nativeSrc": "11461:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "11461:52:7"
														}
													]
												},
												"name": "store_literal_in_memory_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9",
												"nativeSrc": "11344:176:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11442:6:7",
														"nodeType": "YulTypedName",
														"src": "11442:6:7",
														"type": ""
													}
												],
												"src": "11344:176:7"
											},
											{
												"body": {
													"nativeSrc": "11672:220:7",
													"nodeType": "YulBlock",
													"src": "11672:220:7",
													"statements": [
														{
															"nativeSrc": "11682:74:7",
															"nodeType": "YulAssignment",
															"src": "11682:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11748:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11748:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11753:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11753:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11689:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11689:58:7"
																},
																"nativeSrc": "11689:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11689:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11682:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11682:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11854:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11854:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9",
																	"nativeSrc": "11765:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11765:88:7"
																},
																"nativeSrc": "11765:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11765:93:7"
															},
															"nativeSrc": "11765:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11765:93:7"
														},
														{
															"nativeSrc": "11867:19:7",
															"nodeType": "YulAssignment",
															"src": "11867:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11878:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11878:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11883:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11883:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11874:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11874:3:7"
																},
																"nativeSrc": "11874:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11874:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11867:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11867:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11526:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11660:3:7",
														"nodeType": "YulTypedName",
														"src": "11660:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11668:3:7",
														"nodeType": "YulTypedName",
														"src": "11668:3:7",
														"type": ""
													}
												],
												"src": "11526:366:7"
											},
											{
												"body": {
													"nativeSrc": "12069:248:7",
													"nodeType": "YulBlock",
													"src": "12069:248:7",
													"statements": [
														{
															"nativeSrc": "12079:26:7",
															"nodeType": "YulAssignment",
															"src": "12079:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12091:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12091:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12102:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12102:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12087:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12087:3:7"
																},
																"nativeSrc": "12087:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12087:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12079:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12079:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12126:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12126:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12137:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12137:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12122:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12122:3:7"
																		},
																		"nativeSrc": "12122:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12122:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12145:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12145:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12151:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12151:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12141:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12141:3:7"
																		},
																		"nativeSrc": "12141:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12141:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12115:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12115:6:7"
																},
																"nativeSrc": "12115:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12115:47:7"
															},
															"nativeSrc": "12115:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12115:47:7"
														},
														{
															"nativeSrc": "12171:139:7",
															"nodeType": "YulAssignment",
															"src": "12171:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12305:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12305:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12179:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12179:124:7"
																},
																"nativeSrc": "12179:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12179:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12171:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12171:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11898:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12049:9:7",
														"nodeType": "YulTypedName",
														"src": "12049:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12064:4:7",
														"nodeType": "YulTypedName",
														"src": "12064:4:7",
														"type": ""
													}
												],
												"src": "11898:419:7"
											},
											{
												"body": {
													"nativeSrc": "12429:67:7",
													"nodeType": "YulBlock",
													"src": "12429:67:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12451:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12451:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12459:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12459:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12447:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12447:3:7"
																		},
																		"nativeSrc": "12447:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12447:14:7"
																	},
																	{
																		"hexValue": "456d61696c206d757374206e6f7420626520656d707479",
																		"kind": "string",
																		"nativeSrc": "12463:25:7",
																		"nodeType": "YulLiteral",
																		"src": "12463:25:7",
																		"type": "",
																		"value": "Email must not be empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12440:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12440:6:7"
																},
																"nativeSrc": "12440:49:7",
																"nodeType": "YulFunctionCall",
																"src": "12440:49:7"
															},
															"nativeSrc": "12440:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "12440:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2",
												"nativeSrc": "12323:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12421:6:7",
														"nodeType": "YulTypedName",
														"src": "12421:6:7",
														"type": ""
													}
												],
												"src": "12323:173:7"
											},
											{
												"body": {
													"nativeSrc": "12648:220:7",
													"nodeType": "YulBlock",
													"src": "12648:220:7",
													"statements": [
														{
															"nativeSrc": "12658:74:7",
															"nodeType": "YulAssignment",
															"src": "12658:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12724:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12724:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12729:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12729:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12665:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12665:58:7"
																},
																"nativeSrc": "12665:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12665:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12658:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12658:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12830:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12830:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2",
																	"nativeSrc": "12741:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12741:88:7"
																},
																"nativeSrc": "12741:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12741:93:7"
															},
															"nativeSrc": "12741:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12741:93:7"
														},
														{
															"nativeSrc": "12843:19:7",
															"nodeType": "YulAssignment",
															"src": "12843:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12854:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12854:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12859:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12859:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12850:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12850:3:7"
																},
																"nativeSrc": "12850:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12850:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12843:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12843:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12502:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12636:3:7",
														"nodeType": "YulTypedName",
														"src": "12636:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12644:3:7",
														"nodeType": "YulTypedName",
														"src": "12644:3:7",
														"type": ""
													}
												],
												"src": "12502:366:7"
											},
											{
												"body": {
													"nativeSrc": "13045:248:7",
													"nodeType": "YulBlock",
													"src": "13045:248:7",
													"statements": [
														{
															"nativeSrc": "13055:26:7",
															"nodeType": "YulAssignment",
															"src": "13055:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13067:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13067:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13078:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13078:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13063:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13063:3:7"
																},
																"nativeSrc": "13063:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13063:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13055:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13055:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13102:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13102:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13113:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13113:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13098:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13098:3:7"
																		},
																		"nativeSrc": "13098:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13098:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13121:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13121:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13127:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13127:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13117:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13117:3:7"
																		},
																		"nativeSrc": "13117:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13117:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13091:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13091:6:7"
																},
																"nativeSrc": "13091:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13091:47:7"
															},
															"nativeSrc": "13091:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13091:47:7"
														},
														{
															"nativeSrc": "13147:139:7",
															"nodeType": "YulAssignment",
															"src": "13147:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13281:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13281:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13155:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13155:124:7"
																},
																"nativeSrc": "13155:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13155:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13147:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13147:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12874:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13025:9:7",
														"nodeType": "YulTypedName",
														"src": "13025:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13040:4:7",
														"nodeType": "YulTypedName",
														"src": "13040:4:7",
														"type": ""
													}
												],
												"src": "12874:419:7"
											},
											{
												"body": {
													"nativeSrc": "13353:87:7",
													"nodeType": "YulBlock",
													"src": "13353:87:7",
													"statements": [
														{
															"nativeSrc": "13363:11:7",
															"nodeType": "YulAssignment",
															"src": "13363:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "13371:3:7",
																"nodeType": "YulIdentifier",
																"src": "13371:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13363:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13363:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13391:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13391:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "13394:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13394:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13384:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13384:6:7"
																},
																"nativeSrc": "13384:14:7",
																"nodeType": "YulFunctionCall",
																"src": "13384:14:7"
															},
															"nativeSrc": "13384:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "13384:14:7"
														},
														{
															"nativeSrc": "13407:26:7",
															"nodeType": "YulAssignment",
															"src": "13407:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13425:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13425:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13428:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13428:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "13415:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "13415:9:7"
																},
																"nativeSrc": "13415:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13415:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13407:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13407:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "13299:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13340:3:7",
														"nodeType": "YulTypedName",
														"src": "13340:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13348:4:7",
														"nodeType": "YulTypedName",
														"src": "13348:4:7",
														"type": ""
													}
												],
												"src": "13299:141:7"
											},
											{
												"body": {
													"nativeSrc": "13490:49:7",
													"nodeType": "YulBlock",
													"src": "13490:49:7",
													"statements": [
														{
															"nativeSrc": "13500:33:7",
															"nodeType": "YulAssignment",
															"src": "13500:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13518:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "13518:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13525:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13525:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13514:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13514:3:7"
																		},
																		"nativeSrc": "13514:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13514:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13530:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13530:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13510:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13510:3:7"
																},
																"nativeSrc": "13510:23:7",
																"nodeType": "YulFunctionCall",
																"src": "13510:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "13500:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13500:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "13446:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13473:5:7",
														"nodeType": "YulTypedName",
														"src": "13473:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13483:6:7",
														"nodeType": "YulTypedName",
														"src": "13483:6:7",
														"type": ""
													}
												],
												"src": "13446:93:7"
											},
											{
												"body": {
													"nativeSrc": "13598:54:7",
													"nodeType": "YulBlock",
													"src": "13598:54:7",
													"statements": [
														{
															"nativeSrc": "13608:37:7",
															"nodeType": "YulAssignment",
															"src": "13608:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "13633:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13633:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13639:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "13629:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13629:3:7"
																},
																"nativeSrc": "13629:16:7",
																"nodeType": "YulFunctionCall",
																"src": "13629:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13608:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "13608:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "13545:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "13573:4:7",
														"nodeType": "YulTypedName",
														"src": "13573:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "13579:5:7",
														"nodeType": "YulTypedName",
														"src": "13579:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13589:8:7",
														"nodeType": "YulTypedName",
														"src": "13589:8:7",
														"type": ""
													}
												],
												"src": "13545:107:7"
											},
											{
												"body": {
													"nativeSrc": "13734:317:7",
													"nodeType": "YulBlock",
													"src": "13734:317:7",
													"statements": [
														{
															"nativeSrc": "13744:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13744:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "13765:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "13765:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13777:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13777:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13761:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13761:3:7"
																},
																"nativeSrc": "13761:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13761:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "13748:9:7",
																	"nodeType": "YulTypedName",
																	"src": "13748:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13788:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13788:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "13819:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13819:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13830:66:7",
																		"nodeType": "YulLiteral",
																		"src": "13830:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "13800:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "13800:18:7"
																},
																"nativeSrc": "13800:97:7",
																"nodeType": "YulFunctionCall",
																"src": "13800:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "13792:4:7",
																	"nodeType": "YulTypedName",
																	"src": "13792:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13906:51:7",
															"nodeType": "YulAssignment",
															"src": "13906:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "13937:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13937:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "13948:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "13948:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "13918:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "13918:18:7"
																},
																"nativeSrc": "13918:39:7",
																"nodeType": "YulFunctionCall",
																"src": "13918:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "13906:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "13906:8:7"
																}
															]
														},
														{
															"nativeSrc": "13966:30:7",
															"nodeType": "YulAssignment",
															"src": "13966:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13979:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13979:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "13990:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13990:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "13986:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13986:3:7"
																		},
																		"nativeSrc": "13986:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13986:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13975:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13975:3:7"
																},
																"nativeSrc": "13975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "13975:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13966:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "13966:5:7"
																}
															]
														},
														{
															"nativeSrc": "14005:40:7",
															"nodeType": "YulAssignment",
															"src": "14005:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14018:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "14018:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "14029:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "14029:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "14039:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14039:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14025:3:7"
																		},
																		"nativeSrc": "14025:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14025:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14015:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14015:2:7"
																},
																"nativeSrc": "14015:30:7",
																"nodeType": "YulFunctionCall",
																"src": "14015:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14005:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14005:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "13658:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13695:5:7",
														"nodeType": "YulTypedName",
														"src": "13695:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "13702:10:7",
														"nodeType": "YulTypedName",
														"src": "13702:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "13714:8:7",
														"nodeType": "YulTypedName",
														"src": "13714:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13727:6:7",
														"nodeType": "YulTypedName",
														"src": "13727:6:7",
														"type": ""
													}
												],
												"src": "13658:393:7"
											},
											{
												"body": {
													"nativeSrc": "14089:28:7",
													"nodeType": "YulBlock",
													"src": "14089:28:7",
													"statements": [
														{
															"nativeSrc": "14099:12:7",
															"nodeType": "YulAssignment",
															"src": "14099:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "14106:5:7",
																"nodeType": "YulIdentifier",
																"src": "14106:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14099:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14099:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "14057:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14075:5:7",
														"nodeType": "YulTypedName",
														"src": "14075:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14085:3:7",
														"nodeType": "YulTypedName",
														"src": "14085:3:7",
														"type": ""
													}
												],
												"src": "14057:60:7"
											},
											{
												"body": {
													"nativeSrc": "14183:82:7",
													"nodeType": "YulBlock",
													"src": "14183:82:7",
													"statements": [
														{
															"nativeSrc": "14193:66:7",
															"nodeType": "YulAssignment",
															"src": "14193:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14251:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "14251:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "14233:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "14233:17:7"
																				},
																				"nativeSrc": "14233:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14233:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "14224:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "14224:8:7"
																		},
																		"nativeSrc": "14224:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14224:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14206:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14206:17:7"
																},
																"nativeSrc": "14206:53:7",
																"nodeType": "YulFunctionCall",
																"src": "14206:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "14193:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "14193:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "14123:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14163:5:7",
														"nodeType": "YulTypedName",
														"src": "14163:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "14173:9:7",
														"nodeType": "YulTypedName",
														"src": "14173:9:7",
														"type": ""
													}
												],
												"src": "14123:142:7"
											},
											{
												"body": {
													"nativeSrc": "14318:28:7",
													"nodeType": "YulBlock",
													"src": "14318:28:7",
													"statements": [
														{
															"nativeSrc": "14328:12:7",
															"nodeType": "YulAssignment",
															"src": "14328:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "14335:5:7",
																"nodeType": "YulIdentifier",
																"src": "14335:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14328:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14328:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "14271:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14304:5:7",
														"nodeType": "YulTypedName",
														"src": "14304:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14314:3:7",
														"nodeType": "YulTypedName",
														"src": "14314:3:7",
														"type": ""
													}
												],
												"src": "14271:75:7"
											},
											{
												"body": {
													"nativeSrc": "14428:193:7",
													"nodeType": "YulBlock",
													"src": "14428:193:7",
													"statements": [
														{
															"nativeSrc": "14438:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14438:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "14493:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "14493:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "14462:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "14462:30:7"
																},
																"nativeSrc": "14462:39:7",
																"nodeType": "YulFunctionCall",
																"src": "14462:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "14442:16:7",
																	"nodeType": "YulTypedName",
																	"src": "14442:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14517:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14517:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "14557:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "14557:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "14551:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "14551:5:7"
																				},
																				"nativeSrc": "14551:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14551:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "14564:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14564:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "14596:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "14596:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "14572:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "14572:23:7"
																				},
																				"nativeSrc": "14572:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14572:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "14523:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "14523:27:7"
																		},
																		"nativeSrc": "14523:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14523:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "14510:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14510:6:7"
																},
																"nativeSrc": "14510:105:7",
																"nodeType": "YulFunctionCall",
																"src": "14510:105:7"
															},
															"nativeSrc": "14510:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "14510:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "14352:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14405:4:7",
														"nodeType": "YulTypedName",
														"src": "14405:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14411:6:7",
														"nodeType": "YulTypedName",
														"src": "14411:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "14419:7:7",
														"nodeType": "YulTypedName",
														"src": "14419:7:7",
														"type": ""
													}
												],
												"src": "14352:269:7"
											},
											{
												"body": {
													"nativeSrc": "14676:24:7",
													"nodeType": "YulBlock",
													"src": "14676:24:7",
													"statements": [
														{
															"nativeSrc": "14686:8:7",
															"nodeType": "YulAssignment",
															"src": "14686:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "14693:1:7",
																"nodeType": "YulLiteral",
																"src": "14693:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14686:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14686:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "14627:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14672:3:7",
														"nodeType": "YulTypedName",
														"src": "14672:3:7",
														"type": ""
													}
												],
												"src": "14627:73:7"
											},
											{
												"body": {
													"nativeSrc": "14759:136:7",
													"nodeType": "YulBlock",
													"src": "14759:136:7",
													"statements": [
														{
															"nativeSrc": "14769:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14769:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "14783:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "14783:30:7"
																},
																"nativeSrc": "14783:32:7",
																"nodeType": "YulFunctionCall",
																"src": "14783:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "14773:6:7",
																	"nodeType": "YulTypedName",
																	"src": "14773:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14868:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14868:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "14874:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14874:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "14882:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14882:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "14824:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14824:43:7"
																},
																"nativeSrc": "14824:65:7",
																"nodeType": "YulFunctionCall",
																"src": "14824:65:7"
															},
															"nativeSrc": "14824:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "14824:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "14706:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14745:4:7",
														"nodeType": "YulTypedName",
														"src": "14745:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14751:6:7",
														"nodeType": "YulTypedName",
														"src": "14751:6:7",
														"type": ""
													}
												],
												"src": "14706:189:7"
											},
											{
												"body": {
													"nativeSrc": "14951:136:7",
													"nodeType": "YulBlock",
													"src": "14951:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "15018:63:7",
																"nodeType": "YulBlock",
																"src": "15018:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15062:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "15062:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15069:1:7",
																					"nodeType": "YulLiteral",
																					"src": "15069:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "15032:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "15032:29:7"
																			},
																			"nativeSrc": "15032:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15032:39:7"
																		},
																		"nativeSrc": "15032:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15032:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "14971:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "14971:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "14978:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14978:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14968:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14968:2:7"
																},
																"nativeSrc": "14968:14:7",
																"nodeType": "YulFunctionCall",
																"src": "14968:14:7"
															},
															"nativeSrc": "14961:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "14983:26:7",
																"nodeType": "YulBlock",
																"src": "14983:26:7",
																"statements": [
																	{
																		"nativeSrc": "14985:22:7",
																		"nodeType": "YulAssignment",
																		"src": "14985:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "14998:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "14998:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15005:1:7",
																					"nodeType": "YulLiteral",
																					"src": "15005:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14994:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "14994:3:7"
																			},
																			"nativeSrc": "14994:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14994:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "14985:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "14985:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "14965:2:7",
																"nodeType": "YulBlock",
																"src": "14965:2:7",
																"statements": []
															},
															"src": "14961:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "14901:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "14939:5:7",
														"nodeType": "YulTypedName",
														"src": "14939:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14946:3:7",
														"nodeType": "YulTypedName",
														"src": "14946:3:7",
														"type": ""
													}
												],
												"src": "14901:186:7"
											},
											{
												"body": {
													"nativeSrc": "15172:464:7",
													"nodeType": "YulBlock",
													"src": "15172:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "15198:431:7",
																"nodeType": "YulBlock",
																"src": "15198:431:7",
																"statements": [
																	{
																		"nativeSrc": "15212:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15212:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "15260:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "15260:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "15228:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "15228:31:7"
																			},
																			"nativeSrc": "15228:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15228:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "15216:8:7",
																				"nodeType": "YulTypedName",
																				"src": "15216:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15279:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15279:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "15302:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "15302:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "15330:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "15330:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "15312:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "15312:17:7"
																					},
																					"nativeSrc": "15312:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "15312:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15298:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "15298:3:7"
																			},
																			"nativeSrc": "15298:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15298:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "15283:11:7",
																				"nodeType": "YulTypedName",
																				"src": "15283:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15499:27:7",
																			"nodeType": "YulBlock",
																			"src": "15499:27:7",
																			"statements": [
																				{
																					"nativeSrc": "15501:23:7",
																					"nodeType": "YulAssignment",
																					"src": "15501:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "15516:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "15516:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "15501:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "15501:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "15483:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "15483:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15495:2:7",
																					"nodeType": "YulLiteral",
																					"src": "15495:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "15480:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "15480:2:7"
																			},
																			"nativeSrc": "15480:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15480:18:7"
																		},
																		"nativeSrc": "15477:49:7",
																		"nodeType": "YulIf",
																		"src": "15477:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "15568:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "15568:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "15585:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "15585:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "15613:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "15613:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "15595:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "15595:17:7"
																							},
																							"nativeSrc": "15595:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "15595:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "15581:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "15581:3:7"
																					},
																					"nativeSrc": "15581:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "15581:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "15539:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "15539:28:7"
																			},
																			"nativeSrc": "15539:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15539:80:7"
																		},
																		"nativeSrc": "15539:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15539:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "15189:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15189:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15194:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15194:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15186:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15186:2:7"
																},
																"nativeSrc": "15186:11:7",
																"nodeType": "YulFunctionCall",
																"src": "15186:11:7"
															},
															"nativeSrc": "15183:446:7",
															"nodeType": "YulIf",
															"src": "15183:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "15093:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "15148:5:7",
														"nodeType": "YulTypedName",
														"src": "15148:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15155:3:7",
														"nodeType": "YulTypedName",
														"src": "15155:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "15160:10:7",
														"nodeType": "YulTypedName",
														"src": "15160:10:7",
														"type": ""
													}
												],
												"src": "15093:543:7"
											},
											{
												"body": {
													"nativeSrc": "15705:54:7",
													"nodeType": "YulBlock",
													"src": "15705:54:7",
													"statements": [
														{
															"nativeSrc": "15715:37:7",
															"nodeType": "YulAssignment",
															"src": "15715:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "15740:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15740:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15746:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15746:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "15736:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15736:3:7"
																},
																"nativeSrc": "15736:16:7",
																"nodeType": "YulFunctionCall",
																"src": "15736:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15715:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "15715:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "15642:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "15680:4:7",
														"nodeType": "YulTypedName",
														"src": "15680:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "15686:5:7",
														"nodeType": "YulTypedName",
														"src": "15686:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15696:8:7",
														"nodeType": "YulTypedName",
														"src": "15696:8:7",
														"type": ""
													}
												],
												"src": "15642:117:7"
											},
											{
												"body": {
													"nativeSrc": "15816:118:7",
													"nodeType": "YulBlock",
													"src": "15816:118:7",
													"statements": [
														{
															"nativeSrc": "15826:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "15826:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "15875:1:7",
																						"nodeType": "YulLiteral",
																						"src": "15875:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "15878:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "15878:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "15871:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "15871:3:7"
																				},
																				"nativeSrc": "15871:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15871:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "15890:1:7",
																						"nodeType": "YulLiteral",
																						"src": "15890:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "15886:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "15886:3:7"
																				},
																				"nativeSrc": "15886:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15886:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "15842:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "15842:28:7"
																		},
																		"nativeSrc": "15842:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15842:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "15838:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15838:3:7"
																},
																"nativeSrc": "15838:56:7",
																"nodeType": "YulFunctionCall",
																"src": "15838:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "15830:4:7",
																	"nodeType": "YulTypedName",
																	"src": "15830:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15903:25:7",
															"nodeType": "YulAssignment",
															"src": "15903:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15917:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15917:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "15923:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15923:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15913:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15913:3:7"
																},
																"nativeSrc": "15913:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15913:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15903:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15903:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "15765:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15793:4:7",
														"nodeType": "YulTypedName",
														"src": "15793:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "15799:5:7",
														"nodeType": "YulTypedName",
														"src": "15799:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15809:6:7",
														"nodeType": "YulTypedName",
														"src": "15809:6:7",
														"type": ""
													}
												],
												"src": "15765:169:7"
											},
											{
												"body": {
													"nativeSrc": "16020:214:7",
													"nodeType": "YulBlock",
													"src": "16020:214:7",
													"statements": [
														{
															"nativeSrc": "16153:37:7",
															"nodeType": "YulAssignment",
															"src": "16153:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16180:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16180:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "16186:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16186:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "16161:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "16161:18:7"
																},
																"nativeSrc": "16161:29:7",
																"nodeType": "YulFunctionCall",
																"src": "16161:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16153:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16153:4:7"
																}
															]
														},
														{
															"nativeSrc": "16199:29:7",
															"nodeType": "YulAssignment",
															"src": "16199:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16210:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16210:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16220:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16220:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "16223:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "16223:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "16216:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16216:3:7"
																		},
																		"nativeSrc": "16216:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16216:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16207:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16207:2:7"
																},
																"nativeSrc": "16207:21:7",
																"nodeType": "YulFunctionCall",
																"src": "16207:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "16199:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16199:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "15939:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16001:4:7",
														"nodeType": "YulTypedName",
														"src": "16001:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16007:3:7",
														"nodeType": "YulTypedName",
														"src": "16007:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "16015:4:7",
														"nodeType": "YulTypedName",
														"src": "16015:4:7",
														"type": ""
													}
												],
												"src": "15939:295:7"
											},
											{
												"body": {
													"nativeSrc": "16331:1303:7",
													"nodeType": "YulBlock",
													"src": "16331:1303:7",
													"statements": [
														{
															"nativeSrc": "16342:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16342:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "16389:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16389:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16356:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "16356:32:7"
																},
																"nativeSrc": "16356:37:7",
																"nodeType": "YulFunctionCall",
																"src": "16356:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "16346:6:7",
																	"nodeType": "YulTypedName",
																	"src": "16346:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16478:22:7",
																"nodeType": "YulBlock",
																"src": "16478:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16480:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "16480:16:7"
																			},
																			"nativeSrc": "16480:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16480:18:7"
																		},
																		"nativeSrc": "16480:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16480:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16450:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16450:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16458:18:7",
																		"nodeType": "YulLiteral",
																		"src": "16458:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16447:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16447:2:7"
																},
																"nativeSrc": "16447:30:7",
																"nodeType": "YulFunctionCall",
																"src": "16447:30:7"
															},
															"nativeSrc": "16444:56:7",
															"nodeType": "YulIf",
															"src": "16444:56:7"
														},
														{
															"nativeSrc": "16510:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16510:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "16556:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16556:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "16550:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "16550:5:7"
																		},
																		"nativeSrc": "16550:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16550:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "16524:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "16524:25:7"
																},
																"nativeSrc": "16524:38:7",
																"nodeType": "YulFunctionCall",
																"src": "16524:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "16514:6:7",
																	"nodeType": "YulTypedName",
																	"src": "16514:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16655:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16655:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "16661:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16661:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "16669:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16669:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "16609:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "16609:45:7"
																},
																"nativeSrc": "16609:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16609:67:7"
															},
															"nativeSrc": "16609:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "16609:67:7"
														},
														{
															"nativeSrc": "16686:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16686:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "16703:1:7",
																"nodeType": "YulLiteral",
																"src": "16703:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "16690:9:7",
																	"nodeType": "YulTypedName",
																	"src": "16690:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16714:17:7",
															"nodeType": "YulAssignment",
															"src": "16714:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "16727:4:7",
																"nodeType": "YulLiteral",
																"src": "16727:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "16714:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "16714:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "16778:611:7",
																		"nodeType": "YulBlock",
																		"src": "16778:611:7",
																		"statements": [
																			{
																				"nativeSrc": "16792:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16792:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "16811:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "16811:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "16823:4:7",
																									"nodeType": "YulLiteral",
																									"src": "16823:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "16819:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "16819:3:7"
																							},
																							"nativeSrc": "16819:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "16819:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "16807:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "16807:3:7"
																					},
																					"nativeSrc": "16807:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "16807:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "16796:7:7",
																						"nodeType": "YulTypedName",
																						"src": "16796:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "16843:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16843:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16889:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "16889:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "16857:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "16857:31:7"
																					},
																					"nativeSrc": "16857:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "16857:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "16847:6:7",
																						"nodeType": "YulTypedName",
																						"src": "16847:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "16907:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16907:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "16916:1:7",
																					"nodeType": "YulLiteral",
																					"src": "16916:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "16911:1:7",
																						"nodeType": "YulTypedName",
																						"src": "16911:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16975:163:7",
																					"nodeType": "YulBlock",
																					"src": "16975:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17000:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "17000:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "17018:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "17018:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "17023:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "17023:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "17014:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "17014:3:7"
																												},
																												"nativeSrc": "17014:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "17014:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "17008:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "17008:5:7"
																										},
																										"nativeSrc": "17008:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "17008:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "16993:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "16993:6:7"
																								},
																								"nativeSrc": "16993:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "16993:42:7"
																							},
																							"nativeSrc": "16993:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "16993:42:7"
																						},
																						{
																							"nativeSrc": "17052:24:7",
																							"nodeType": "YulAssignment",
																							"src": "17052:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17066:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "17066:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17074:1:7",
																										"nodeType": "YulLiteral",
																										"src": "17074:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17062:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "17062:3:7"
																								},
																								"nativeSrc": "17062:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17062:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "17052:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "17052:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "17093:31:7",
																							"nodeType": "YulAssignment",
																							"src": "17093:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "17110:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "17110:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17121:2:7",
																										"nodeType": "YulLiteral",
																										"src": "17121:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17106:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "17106:3:7"
																								},
																								"nativeSrc": "17106:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17106:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "17093:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "17093:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "16941:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "16941:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "16944:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "16944:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "16938:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "16938:2:7"
																					},
																					"nativeSrc": "16938:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "16938:14:7"
																				},
																				"nativeSrc": "16930:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "16953:21:7",
																					"nodeType": "YulBlock",
																					"src": "16953:21:7",
																					"statements": [
																						{
																							"nativeSrc": "16955:17:7",
																							"nodeType": "YulAssignment",
																							"src": "16955:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "16964:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "16964:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16967:4:7",
																										"nodeType": "YulLiteral",
																										"src": "16967:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16960:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "16960:3:7"
																								},
																								"nativeSrc": "16960:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "16960:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "16955:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "16955:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "16934:3:7",
																					"nodeType": "YulBlock",
																					"src": "16934:3:7",
																					"statements": []
																				},
																				"src": "16930:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "17174:156:7",
																					"nodeType": "YulBlock",
																					"src": "17174:156:7",
																					"statements": [
																						{
																							"nativeSrc": "17192:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "17192:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17219:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "17219:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17224:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "17224:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17215:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "17215:3:7"
																										},
																										"nativeSrc": "17215:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "17215:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17209:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "17209:5:7"
																								},
																								"nativeSrc": "17209:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17209:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "17196:9:7",
																									"nodeType": "YulTypedName",
																									"src": "17196:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17259:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "17259:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "17286:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "17286:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "17301:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "17301:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "17309:4:7",
																														"nodeType": "YulLiteral",
																														"src": "17309:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "17297:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "17297:3:7"
																												},
																												"nativeSrc": "17297:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "17297:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "17267:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "17267:18:7"
																										},
																										"nativeSrc": "17267:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "17267:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17252:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "17252:6:7"
																								},
																								"nativeSrc": "17252:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17252:64:7"
																							},
																							"nativeSrc": "17252:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "17252:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17157:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "17157:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "17166:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "17166:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17154:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "17154:2:7"
																					},
																					"nativeSrc": "17154:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17154:19:7"
																				},
																				"nativeSrc": "17151:179:7",
																				"nodeType": "YulIf",
																				"src": "17151:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17350:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "17350:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "17364:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "17364:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "17372:1:7",
																											"nodeType": "YulLiteral",
																											"src": "17372:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "17360:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "17360:3:7"
																									},
																									"nativeSrc": "17360:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "17360:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17376:1:7",
																									"nodeType": "YulLiteral",
																									"src": "17376:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "17356:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "17356:3:7"
																							},
																							"nativeSrc": "17356:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "17356:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17343:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "17343:6:7"
																					},
																					"nativeSrc": "17343:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17343:36:7"
																				},
																				"nativeSrc": "17343:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "17343:36:7"
																			}
																		]
																	},
																	"nativeSrc": "16771:618:7",
																	"nodeType": "YulCase",
																	"src": "16771:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16776:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16776:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "17406:222:7",
																		"nodeType": "YulBlock",
																		"src": "17406:222:7",
																		"statements": [
																			{
																				"nativeSrc": "17420:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17420:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17433:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17433:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "17424:5:7",
																						"nodeType": "YulTypedName",
																						"src": "17424:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17457:67:7",
																					"nodeType": "YulBlock",
																					"src": "17457:67:7",
																					"statements": [
																						{
																							"nativeSrc": "17475:35:7",
																							"nodeType": "YulAssignment",
																							"src": "17475:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17494:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "17494:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17499:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "17499:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17490:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "17490:3:7"
																										},
																										"nativeSrc": "17490:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "17490:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "17484:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "17484:5:7"
																								},
																								"nativeSrc": "17484:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17484:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "17475:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "17475:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "17450:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "17450:6:7"
																				},
																				"nativeSrc": "17447:77:7",
																				"nodeType": "YulIf",
																				"src": "17447:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17544:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "17544:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "17603:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "17603:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "17610:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "17610:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "17550:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "17550:52:7"
																							},
																							"nativeSrc": "17550:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "17550:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17537:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "17537:6:7"
																					},
																					"nativeSrc": "17537:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17537:81:7"
																				},
																				"nativeSrc": "17537:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "17537:81:7"
																			}
																		]
																	},
																	"nativeSrc": "17398:230:7",
																	"nodeType": "YulCase",
																	"src": "17398:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "16751:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "16751:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16759:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16759:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16748:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16748:2:7"
																},
																"nativeSrc": "16748:14:7",
																"nodeType": "YulFunctionCall",
																"src": "16748:14:7"
															},
															"nativeSrc": "16741:887:7",
															"nodeType": "YulSwitch",
															"src": "16741:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "16239:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16320:4:7",
														"nodeType": "YulTypedName",
														"src": "16320:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "16326:3:7",
														"nodeType": "YulTypedName",
														"src": "16326:3:7",
														"type": ""
													}
												],
												"src": "16239:1395:7"
											},
											{
												"body": {
													"nativeSrc": "17668:152:7",
													"nodeType": "YulBlock",
													"src": "17668:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17685:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17685:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17688:77:7",
																		"nodeType": "YulLiteral",
																		"src": "17688:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17678:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17678:6:7"
																},
																"nativeSrc": "17678:88:7",
																"nodeType": "YulFunctionCall",
																"src": "17678:88:7"
															},
															"nativeSrc": "17678:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "17678:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17782:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17782:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17785:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17785:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17775:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17775:6:7"
																},
																"nativeSrc": "17775:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17775:15:7"
															},
															"nativeSrc": "17775:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17775:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17806:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17806:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17809:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17809:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17799:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17799:6:7"
																},
																"nativeSrc": "17799:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17799:15:7"
															},
															"nativeSrc": "17799:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17799:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "17640:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "17640:180:7"
											},
											{
												"body": {
													"nativeSrc": "17877:51:7",
													"nodeType": "YulBlock",
													"src": "17877:51:7",
													"statements": [
														{
															"nativeSrc": "17887:34:7",
															"nodeType": "YulAssignment",
															"src": "17887:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17912:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17912:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "17915:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "17915:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "17908:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17908:3:7"
																},
																"nativeSrc": "17908:13:7",
																"nodeType": "YulFunctionCall",
																"src": "17908:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "17887:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "17887:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "17826:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17858:5:7",
														"nodeType": "YulTypedName",
														"src": "17858:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "17868:8:7",
														"nodeType": "YulTypedName",
														"src": "17868:8:7",
														"type": ""
													}
												],
												"src": "17826:102:7"
											},
											{
												"body": {
													"nativeSrc": "18007:775:7",
													"nodeType": "YulBlock",
													"src": "18007:775:7",
													"statements": [
														{
															"nativeSrc": "18017:15:7",
															"nodeType": "YulAssignment",
															"src": "18017:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "18026:6:7",
																"nodeType": "YulIdentifier",
																"src": "18026:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "18017:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "18017:5:7"
																}
															]
														},
														{
															"nativeSrc": "18041:14:7",
															"nodeType": "YulAssignment",
															"src": "18041:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "18050:5:7",
																"nodeType": "YulIdentifier",
																"src": "18050:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "18041:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18041:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18099:677:7",
																"nodeType": "YulBlock",
																"src": "18099:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "18187:22:7",
																			"nodeType": "YulBlock",
																			"src": "18187:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "18189:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "18189:16:7"
																						},
																						"nativeSrc": "18189:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "18189:18:7"
																					},
																					"nativeSrc": "18189:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "18189:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "18165:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "18165:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "18175:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "18175:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "18180:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "18180:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "18171:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "18171:3:7"
																					},
																					"nativeSrc": "18171:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18171:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "18162:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "18162:2:7"
																			},
																			"nativeSrc": "18162:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18162:24:7"
																		},
																		"nativeSrc": "18159:50:7",
																		"nodeType": "YulIf",
																		"src": "18159:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "18254:419:7",
																			"nodeType": "YulBlock",
																			"src": "18254:419:7",
																			"statements": [
																				{
																					"nativeSrc": "18634:25:7",
																					"nodeType": "YulAssignment",
																					"src": "18634:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "18647:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "18647:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "18654:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "18654:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "18643:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "18643:3:7"
																						},
																						"nativeSrc": "18643:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "18643:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "18634:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "18634:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "18229:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "18229:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18239:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18239:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "18225:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18225:3:7"
																			},
																			"nativeSrc": "18225:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18225:16:7"
																		},
																		"nativeSrc": "18222:451:7",
																		"nodeType": "YulIf",
																		"src": "18222:451:7"
																	},
																	{
																		"nativeSrc": "18686:23:7",
																		"nodeType": "YulAssignment",
																		"src": "18686:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "18698:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "18698:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "18704:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "18704:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "18694:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18694:3:7"
																			},
																			"nativeSrc": "18694:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18694:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "18686:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "18686:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "18722:44:7",
																		"nodeType": "YulAssignment",
																		"src": "18722:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "18757:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "18757:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "18734:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "18734:22:7"
																			},
																			"nativeSrc": "18734:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18734:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "18722:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "18722:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "18075:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "18075:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18085:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18085:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18072:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18072:2:7"
																},
																"nativeSrc": "18072:15:7",
																"nodeType": "YulFunctionCall",
																"src": "18072:15:7"
															},
															"nativeSrc": "18064:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "18088:2:7",
																"nodeType": "YulBlock",
																"src": "18088:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "18068:3:7",
																"nodeType": "YulBlock",
																"src": "18068:3:7",
																"statements": []
															},
															"src": "18064:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "17934:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "17962:6:7",
														"nodeType": "YulTypedName",
														"src": "17962:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "17970:5:7",
														"nodeType": "YulTypedName",
														"src": "17970:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "17977:8:7",
														"nodeType": "YulTypedName",
														"src": "17977:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "17987:3:7",
														"nodeType": "YulTypedName",
														"src": "17987:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "17995:5:7",
														"nodeType": "YulTypedName",
														"src": "17995:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "18002:4:7",
														"nodeType": "YulTypedName",
														"src": "18002:4:7",
														"type": ""
													}
												],
												"src": "17934:848:7"
											},
											{
												"body": {
													"nativeSrc": "18848:1013:7",
													"nodeType": "YulBlock",
													"src": "18848:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "19043:20:7",
																"nodeType": "YulBlock",
																"src": "19043:20:7",
																"statements": [
																	{
																		"nativeSrc": "19045:10:7",
																		"nodeType": "YulAssignment",
																		"src": "19045:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "19054:1:7",
																			"nodeType": "YulLiteral",
																			"src": "19054:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "19045:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "19045:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "19056:5:7",
																		"nodeType": "YulLeave",
																		"src": "19056:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "19033:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "19033:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19026:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19026:6:7"
																},
																"nativeSrc": "19026:16:7",
																"nodeType": "YulFunctionCall",
																"src": "19026:16:7"
															},
															"nativeSrc": "19023:40:7",
															"nodeType": "YulIf",
															"src": "19023:40:7"
														},
														{
															"body": {
																"nativeSrc": "19088:20:7",
																"nodeType": "YulBlock",
																"src": "19088:20:7",
																"statements": [
																	{
																		"nativeSrc": "19090:10:7",
																		"nodeType": "YulAssignment",
																		"src": "19090:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "19099:1:7",
																			"nodeType": "YulLiteral",
																			"src": "19099:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "19090:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "19090:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "19101:5:7",
																		"nodeType": "YulLeave",
																		"src": "19101:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "19082:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19082:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19075:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19075:6:7"
																},
																"nativeSrc": "19075:12:7",
																"nodeType": "YulFunctionCall",
																"src": "19075:12:7"
															},
															"nativeSrc": "19072:36:7",
															"nodeType": "YulIf",
															"src": "19072:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "19218:20:7",
																		"nodeType": "YulBlock",
																		"src": "19218:20:7",
																		"statements": [
																			{
																				"nativeSrc": "19220:10:7",
																				"nodeType": "YulAssignment",
																				"src": "19220:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19229:1:7",
																					"nodeType": "YulLiteral",
																					"src": "19229:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "19220:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "19220:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "19231:5:7",
																				"nodeType": "YulLeave",
																				"src": "19231:5:7"
																			}
																		]
																	},
																	"nativeSrc": "19211:27:7",
																	"nodeType": "YulCase",
																	"src": "19211:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19216:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19216:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "19262:176:7",
																		"nodeType": "YulBlock",
																		"src": "19262:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "19297:22:7",
																					"nodeType": "YulBlock",
																					"src": "19297:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "19299:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "19299:16:7"
																								},
																								"nativeSrc": "19299:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "19299:18:7"
																							},
																							"nativeSrc": "19299:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "19299:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "19282:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "19282:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "19292:3:7",
																							"nodeType": "YulLiteral",
																							"src": "19292:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "19279:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "19279:2:7"
																					},
																					"nativeSrc": "19279:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "19279:17:7"
																				},
																				"nativeSrc": "19276:43:7",
																				"nodeType": "YulIf",
																				"src": "19276:43:7"
																			},
																			{
																				"nativeSrc": "19332:25:7",
																				"nodeType": "YulAssignment",
																				"src": "19332:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "19345:1:7",
																							"nodeType": "YulLiteral",
																							"src": "19345:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "19348:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "19348:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "19341:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "19341:3:7"
																					},
																					"nativeSrc": "19341:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "19341:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "19332:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "19332:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19388:22:7",
																					"nodeType": "YulBlock",
																					"src": "19388:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "19390:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "19390:16:7"
																								},
																								"nativeSrc": "19390:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "19390:18:7"
																							},
																							"nativeSrc": "19390:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "19390:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "19376:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "19376:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "19383:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "19383:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "19373:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "19373:2:7"
																					},
																					"nativeSrc": "19373:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "19373:14:7"
																				},
																				"nativeSrc": "19370:40:7",
																				"nodeType": "YulIf",
																				"src": "19370:40:7"
																			},
																			{
																				"nativeSrc": "19423:5:7",
																				"nodeType": "YulLeave",
																				"src": "19423:5:7"
																			}
																		]
																	},
																	"nativeSrc": "19247:191:7",
																	"nodeType": "YulCase",
																	"src": "19247:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19252:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19252:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "19168:4:7",
																"nodeType": "YulIdentifier",
																"src": "19168:4:7"
															},
															"nativeSrc": "19161:277:7",
															"nodeType": "YulSwitch",
															"src": "19161:277:7"
														},
														{
															"body": {
																"nativeSrc": "19570:123:7",
																"nodeType": "YulBlock",
																"src": "19570:123:7",
																"statements": [
																	{
																		"nativeSrc": "19584:28:7",
																		"nodeType": "YulAssignment",
																		"src": "19584:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "19597:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "19597:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "19603:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "19603:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "19593:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "19593:3:7"
																			},
																			"nativeSrc": "19593:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19593:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "19584:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "19584:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "19643:22:7",
																			"nodeType": "YulBlock",
																			"src": "19643:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "19645:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "19645:16:7"
																						},
																						"nativeSrc": "19645:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "19645:18:7"
																					},
																					"nativeSrc": "19645:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "19645:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "19631:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "19631:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "19638:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "19638:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "19628:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "19628:2:7"
																			},
																			"nativeSrc": "19628:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19628:14:7"
																		},
																		"nativeSrc": "19625:40:7",
																		"nodeType": "YulIf",
																		"src": "19625:40:7"
																	},
																	{
																		"nativeSrc": "19678:5:7",
																		"nodeType": "YulLeave",
																		"src": "19678:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "19473:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "19473:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19479:2:7",
																						"nodeType": "YulLiteral",
																						"src": "19479:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "19470:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "19470:2:7"
																				},
																				"nativeSrc": "19470:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19470:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "19487:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "19487:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19497:2:7",
																						"nodeType": "YulLiteral",
																						"src": "19497:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "19484:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "19484:2:7"
																				},
																				"nativeSrc": "19484:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19484:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19466:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19466:3:7"
																		},
																		"nativeSrc": "19466:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19466:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "19522:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "19522:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19528:3:7",
																						"nodeType": "YulLiteral",
																						"src": "19528:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "19519:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "19519:2:7"
																				},
																				"nativeSrc": "19519:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19519:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "19537:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "19537:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19547:2:7",
																						"nodeType": "YulLiteral",
																						"src": "19547:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "19534:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "19534:2:7"
																				},
																				"nativeSrc": "19534:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19534:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19515:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19515:3:7"
																		},
																		"nativeSrc": "19515:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19515:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19450:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "19450:2:7"
																},
																"nativeSrc": "19450:111:7",
																"nodeType": "YulFunctionCall",
																"src": "19450:111:7"
															},
															"nativeSrc": "19447:246:7",
															"nodeType": "YulIf",
															"src": "19447:246:7"
														},
														{
															"nativeSrc": "19703:57:7",
															"nodeType": "YulAssignment",
															"src": "19703:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19737:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19737:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "19740:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19740:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "19746:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "19746:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "19756:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19756:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "19718:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "19718:18:7"
																},
																"nativeSrc": "19718:42:7",
																"nodeType": "YulFunctionCall",
																"src": "19718:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "19703:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "19703:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "19710:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19710:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19799:22:7",
																"nodeType": "YulBlock",
																"src": "19799:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19801:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "19801:16:7"
																			},
																			"nativeSrc": "19801:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19801:18:7"
																		},
																		"nativeSrc": "19801:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "19801:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "19776:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "19776:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "19787:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "19787:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "19792:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "19792:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "19783:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19783:3:7"
																		},
																		"nativeSrc": "19783:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19783:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19773:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "19773:2:7"
																},
																"nativeSrc": "19773:25:7",
																"nodeType": "YulFunctionCall",
																"src": "19773:25:7"
															},
															"nativeSrc": "19770:51:7",
															"nodeType": "YulIf",
															"src": "19770:51:7"
														},
														{
															"nativeSrc": "19830:25:7",
															"nodeType": "YulAssignment",
															"src": "19830:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "19843:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "19843:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "19850:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19850:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "19839:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19839:3:7"
																},
																"nativeSrc": "19839:16:7",
																"nodeType": "YulFunctionCall",
																"src": "19839:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "19830:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "19830:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "18788:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "18818:4:7",
														"nodeType": "YulTypedName",
														"src": "18818:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "18824:8:7",
														"nodeType": "YulTypedName",
														"src": "18824:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "18834:3:7",
														"nodeType": "YulTypedName",
														"src": "18834:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "18842:5:7",
														"nodeType": "YulTypedName",
														"src": "18842:5:7",
														"type": ""
													}
												],
												"src": "18788:1073:7"
											},
											{
												"body": {
													"nativeSrc": "19931:217:7",
													"nodeType": "YulBlock",
													"src": "19931:217:7",
													"statements": [
														{
															"nativeSrc": "19941:31:7",
															"nodeType": "YulAssignment",
															"src": "19941:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "19967:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19967:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19949:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "19949:17:7"
																},
																"nativeSrc": "19949:23:7",
																"nodeType": "YulFunctionCall",
																"src": "19949:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "19941:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19941:4:7"
																}
															]
														},
														{
															"nativeSrc": "19981:37:7",
															"nodeType": "YulAssignment",
															"src": "19981:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "20009:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "20009:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "19993:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "19993:15:7"
																},
																"nativeSrc": "19993:25:7",
																"nodeType": "YulFunctionCall",
																"src": "19993:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "19981:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "19981:8:7"
																}
															]
														},
														{
															"nativeSrc": "20028:113:7",
															"nodeType": "YulAssignment",
															"src": "20028:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "20058:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20058:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "20064:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "20064:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20074:66:7",
																		"nodeType": "YulLiteral",
																		"src": "20074:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "20037:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "20037:20:7"
																},
																"nativeSrc": "20037:104:7",
																"nodeType": "YulFunctionCall",
																"src": "20037:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "20028:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "20028:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "19867:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "19906:4:7",
														"nodeType": "YulTypedName",
														"src": "19906:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "19912:8:7",
														"nodeType": "YulTypedName",
														"src": "19912:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "19925:5:7",
														"nodeType": "YulTypedName",
														"src": "19925:5:7",
														"type": ""
													}
												],
												"src": "19867:281:7"
											},
											{
												"body": {
													"nativeSrc": "20202:362:7",
													"nodeType": "YulBlock",
													"src": "20202:362:7",
													"statements": [
														{
															"nativeSrc": "20212:25:7",
															"nodeType": "YulAssignment",
															"src": "20212:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20235:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20235:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20217:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "20217:17:7"
																},
																"nativeSrc": "20217:20:7",
																"nodeType": "YulFunctionCall",
																"src": "20217:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20212:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "20212:1:7"
																}
															]
														},
														{
															"nativeSrc": "20246:25:7",
															"nodeType": "YulAssignment",
															"src": "20246:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20269:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20269:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20251:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "20251:17:7"
																},
																"nativeSrc": "20251:20:7",
																"nodeType": "YulFunctionCall",
																"src": "20251:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20246:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "20246:1:7"
																}
															]
														},
														{
															"nativeSrc": "20280:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "20280:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20303:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20303:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20306:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20306:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "20299:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20299:3:7"
																},
																"nativeSrc": "20299:9:7",
																"nodeType": "YulFunctionCall",
																"src": "20299:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "20284:11:7",
																	"nodeType": "YulTypedName",
																	"src": "20284:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20317:41:7",
															"nodeType": "YulAssignment",
															"src": "20317:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "20346:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "20346:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20328:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "20328:17:7"
																},
																"nativeSrc": "20328:30:7",
																"nodeType": "YulFunctionCall",
																"src": "20328:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "20317:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "20317:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20535:22:7",
																"nodeType": "YulBlock",
																"src": "20535:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20537:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "20537:16:7"
																			},
																			"nativeSrc": "20537:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20537:18:7"
																		},
																		"nativeSrc": "20537:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "20537:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "20468:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "20468:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "20461:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "20461:6:7"
																				},
																				"nativeSrc": "20461:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "20461:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "20491:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "20491:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "20498:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "20498:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "20507:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "20507:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "20494:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "20494:3:7"
																						},
																						"nativeSrc": "20494:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "20494:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "20488:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "20488:2:7"
																				},
																				"nativeSrc": "20488:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "20488:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "20441:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "20441:2:7"
																		},
																		"nativeSrc": "20441:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20441:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20421:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20421:6:7"
																},
																"nativeSrc": "20421:113:7",
																"nodeType": "YulFunctionCall",
																"src": "20421:113:7"
															},
															"nativeSrc": "20418:139:7",
															"nodeType": "YulIf",
															"src": "20418:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "20154:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20185:1:7",
														"nodeType": "YulTypedName",
														"src": "20185:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20188:1:7",
														"nodeType": "YulTypedName",
														"src": "20188:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "20194:7:7",
														"nodeType": "YulTypedName",
														"src": "20194:7:7",
														"type": ""
													}
												],
												"src": "20154:410:7"
											},
											{
												"body": {
													"nativeSrc": "20598:152:7",
													"nodeType": "YulBlock",
													"src": "20598:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20615:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20615:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20618:77:7",
																		"nodeType": "YulLiteral",
																		"src": "20618:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20608:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20608:6:7"
																},
																"nativeSrc": "20608:88:7",
																"nodeType": "YulFunctionCall",
																"src": "20608:88:7"
															},
															"nativeSrc": "20608:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "20608:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20712:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20712:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20715:4:7",
																		"nodeType": "YulLiteral",
																		"src": "20715:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20705:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20705:6:7"
																},
																"nativeSrc": "20705:15:7",
																"nodeType": "YulFunctionCall",
																"src": "20705:15:7"
															},
															"nativeSrc": "20705:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "20705:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20736:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20736:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20739:4:7",
																		"nodeType": "YulLiteral",
																		"src": "20739:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20729:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20729:6:7"
																},
																"nativeSrc": "20729:15:7",
																"nodeType": "YulFunctionCall",
																"src": "20729:15:7"
															},
															"nativeSrc": "20729:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "20729:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "20570:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "20570:180:7"
											},
											{
												"body": {
													"nativeSrc": "20798:143:7",
													"nodeType": "YulBlock",
													"src": "20798:143:7",
													"statements": [
														{
															"nativeSrc": "20808:25:7",
															"nodeType": "YulAssignment",
															"src": "20808:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20831:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20831:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20813:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "20813:17:7"
																},
																"nativeSrc": "20813:20:7",
																"nodeType": "YulFunctionCall",
																"src": "20813:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20808:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "20808:1:7"
																}
															]
														},
														{
															"nativeSrc": "20842:25:7",
															"nodeType": "YulAssignment",
															"src": "20842:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20865:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20865:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20847:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "20847:17:7"
																},
																"nativeSrc": "20847:20:7",
																"nodeType": "YulFunctionCall",
																"src": "20847:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20842:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "20842:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20889:22:7",
																"nodeType": "YulBlock",
																"src": "20889:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "20891:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "20891:16:7"
																			},
																			"nativeSrc": "20891:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20891:18:7"
																		},
																		"nativeSrc": "20891:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "20891:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20886:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20886:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20879:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20879:6:7"
																},
																"nativeSrc": "20879:9:7",
																"nodeType": "YulFunctionCall",
																"src": "20879:9:7"
															},
															"nativeSrc": "20876:35:7",
															"nodeType": "YulIf",
															"src": "20876:35:7"
														},
														{
															"nativeSrc": "20921:14:7",
															"nodeType": "YulAssignment",
															"src": "20921:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20930:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20930:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20933:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "20933:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "20926:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20926:3:7"
																},
																"nativeSrc": "20926:9:7",
																"nodeType": "YulFunctionCall",
																"src": "20926:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "20921:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "20921:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "20756:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20787:1:7",
														"nodeType": "YulTypedName",
														"src": "20787:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20790:1:7",
														"nodeType": "YulTypedName",
														"src": "20790:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "20796:1:7",
														"nodeType": "YulTypedName",
														"src": "20796:1:7",
														"type": ""
													}
												],
												"src": "20756:185:7"
											},
											{
												"body": {
													"nativeSrc": "21053:69:7",
													"nodeType": "YulBlock",
													"src": "21053:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21075:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "21075:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21083:1:7",
																				"nodeType": "YulLiteral",
																				"src": "21083:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21071:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21071:3:7"
																		},
																		"nativeSrc": "21071:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21071:14:7"
																	},
																	{
																		"hexValue": "496e636f72726563742045544820616d6f756e742073656e74",
																		"kind": "string",
																		"nativeSrc": "21087:27:7",
																		"nodeType": "YulLiteral",
																		"src": "21087:27:7",
																		"type": "",
																		"value": "Incorrect ETH amount sent"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21064:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21064:6:7"
																},
																"nativeSrc": "21064:51:7",
																"nodeType": "YulFunctionCall",
																"src": "21064:51:7"
															},
															"nativeSrc": "21064:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "21064:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186",
												"nativeSrc": "20947:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21045:6:7",
														"nodeType": "YulTypedName",
														"src": "21045:6:7",
														"type": ""
													}
												],
												"src": "20947:175:7"
											},
											{
												"body": {
													"nativeSrc": "21274:220:7",
													"nodeType": "YulBlock",
													"src": "21274:220:7",
													"statements": [
														{
															"nativeSrc": "21284:74:7",
															"nodeType": "YulAssignment",
															"src": "21284:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21350:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21350:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21355:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21355:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21291:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "21291:58:7"
																},
																"nativeSrc": "21291:67:7",
																"nodeType": "YulFunctionCall",
																"src": "21291:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21284:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21284:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21456:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21456:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186",
																	"nativeSrc": "21367:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "21367:88:7"
																},
																"nativeSrc": "21367:93:7",
																"nodeType": "YulFunctionCall",
																"src": "21367:93:7"
															},
															"nativeSrc": "21367:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "21367:93:7"
														},
														{
															"nativeSrc": "21469:19:7",
															"nodeType": "YulAssignment",
															"src": "21469:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21480:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21480:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21485:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21485:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21476:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21476:3:7"
																},
																"nativeSrc": "21476:12:7",
																"nodeType": "YulFunctionCall",
																"src": "21476:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21469:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21469:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21128:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21262:3:7",
														"nodeType": "YulTypedName",
														"src": "21262:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21270:3:7",
														"nodeType": "YulTypedName",
														"src": "21270:3:7",
														"type": ""
													}
												],
												"src": "21128:366:7"
											},
											{
												"body": {
													"nativeSrc": "21671:248:7",
													"nodeType": "YulBlock",
													"src": "21671:248:7",
													"statements": [
														{
															"nativeSrc": "21681:26:7",
															"nodeType": "YulAssignment",
															"src": "21681:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21693:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "21693:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21704:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21704:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21689:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21689:3:7"
																},
																"nativeSrc": "21689:18:7",
																"nodeType": "YulFunctionCall",
																"src": "21689:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21681:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21681:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21728:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21728:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21739:1:7",
																				"nodeType": "YulLiteral",
																				"src": "21739:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21724:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21724:3:7"
																		},
																		"nativeSrc": "21724:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21724:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21747:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "21747:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21753:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21753:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21743:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21743:3:7"
																		},
																		"nativeSrc": "21743:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21743:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21717:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21717:6:7"
																},
																"nativeSrc": "21717:47:7",
																"nodeType": "YulFunctionCall",
																"src": "21717:47:7"
															},
															"nativeSrc": "21717:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "21717:47:7"
														},
														{
															"nativeSrc": "21773:139:7",
															"nodeType": "YulAssignment",
															"src": "21773:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21907:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "21907:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21781:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "21781:124:7"
																},
																"nativeSrc": "21781:131:7",
																"nodeType": "YulFunctionCall",
																"src": "21781:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21773:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21773:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21500:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21651:9:7",
														"nodeType": "YulTypedName",
														"src": "21651:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21666:4:7",
														"nodeType": "YulTypedName",
														"src": "21666:4:7",
														"type": ""
													}
												],
												"src": "21500:419:7"
											},
											{
												"body": {
													"nativeSrc": "22031:67:7",
													"nodeType": "YulBlock",
													"src": "22031:67:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22053:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "22053:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22061:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22061:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22049:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22049:3:7"
																		},
																		"nativeSrc": "22049:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22049:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e74204e422062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "22065:25:7",
																		"nodeType": "YulLiteral",
																		"src": "22065:25:7",
																		"type": "",
																		"value": "Insufficient NB balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22042:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "22042:6:7"
																},
																"nativeSrc": "22042:49:7",
																"nodeType": "YulFunctionCall",
																"src": "22042:49:7"
															},
															"nativeSrc": "22042:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "22042:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca",
												"nativeSrc": "21925:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22023:6:7",
														"nodeType": "YulTypedName",
														"src": "22023:6:7",
														"type": ""
													}
												],
												"src": "21925:173:7"
											},
											{
												"body": {
													"nativeSrc": "22250:220:7",
													"nodeType": "YulBlock",
													"src": "22250:220:7",
													"statements": [
														{
															"nativeSrc": "22260:74:7",
															"nodeType": "YulAssignment",
															"src": "22260:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22326:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "22326:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22331:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22331:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22267:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "22267:58:7"
																},
																"nativeSrc": "22267:67:7",
																"nodeType": "YulFunctionCall",
																"src": "22267:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22260:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22260:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22432:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "22432:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca",
																	"nativeSrc": "22343:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "22343:88:7"
																},
																"nativeSrc": "22343:93:7",
																"nodeType": "YulFunctionCall",
																"src": "22343:93:7"
															},
															"nativeSrc": "22343:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "22343:93:7"
														},
														{
															"nativeSrc": "22445:19:7",
															"nodeType": "YulAssignment",
															"src": "22445:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22456:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "22456:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22461:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22461:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22452:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22452:3:7"
																},
																"nativeSrc": "22452:12:7",
																"nodeType": "YulFunctionCall",
																"src": "22452:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22445:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22445:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22104:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22238:3:7",
														"nodeType": "YulTypedName",
														"src": "22238:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22246:3:7",
														"nodeType": "YulTypedName",
														"src": "22246:3:7",
														"type": ""
													}
												],
												"src": "22104:366:7"
											},
											{
												"body": {
													"nativeSrc": "22647:248:7",
													"nodeType": "YulBlock",
													"src": "22647:248:7",
													"statements": [
														{
															"nativeSrc": "22657:26:7",
															"nodeType": "YulAssignment",
															"src": "22657:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22669:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "22669:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22680:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22680:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22665:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22665:3:7"
																},
																"nativeSrc": "22665:18:7",
																"nodeType": "YulFunctionCall",
																"src": "22665:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22657:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22657:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22704:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22704:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22715:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22715:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22700:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22700:3:7"
																		},
																		"nativeSrc": "22700:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22700:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22723:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "22723:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22729:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22729:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22719:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22719:3:7"
																		},
																		"nativeSrc": "22719:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22719:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22693:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "22693:6:7"
																},
																"nativeSrc": "22693:47:7",
																"nodeType": "YulFunctionCall",
																"src": "22693:47:7"
															},
															"nativeSrc": "22693:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "22693:47:7"
														},
														{
															"nativeSrc": "22749:139:7",
															"nodeType": "YulAssignment",
															"src": "22749:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22883:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "22883:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22757:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "22757:124:7"
																},
																"nativeSrc": "22757:131:7",
																"nodeType": "YulFunctionCall",
																"src": "22757:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22749:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22749:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22476:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22627:9:7",
														"nodeType": "YulTypedName",
														"src": "22627:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22642:4:7",
														"nodeType": "YulTypedName",
														"src": "22642:4:7",
														"type": ""
													}
												],
												"src": "22476:419:7"
											},
											{
												"body": {
													"nativeSrc": "23055:288:7",
													"nodeType": "YulBlock",
													"src": "23055:288:7",
													"statements": [
														{
															"nativeSrc": "23065:26:7",
															"nodeType": "YulAssignment",
															"src": "23065:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23077:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "23077:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23088:2:7",
																		"nodeType": "YulLiteral",
																		"src": "23088:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23073:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23073:3:7"
																},
																"nativeSrc": "23073:18:7",
																"nodeType": "YulFunctionCall",
																"src": "23073:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23065:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "23065:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23145:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "23145:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23158:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "23158:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23169:1:7",
																				"nodeType": "YulLiteral",
																				"src": "23169:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23154:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23154:3:7"
																		},
																		"nativeSrc": "23154:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23154:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23101:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "23101:43:7"
																},
																"nativeSrc": "23101:71:7",
																"nodeType": "YulFunctionCall",
																"src": "23101:71:7"
															},
															"nativeSrc": "23101:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "23101:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23226:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "23226:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23239:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "23239:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23250:2:7",
																				"nodeType": "YulLiteral",
																				"src": "23250:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23235:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23235:3:7"
																		},
																		"nativeSrc": "23235:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23235:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23182:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "23182:43:7"
																},
																"nativeSrc": "23182:72:7",
																"nodeType": "YulFunctionCall",
																"src": "23182:72:7"
															},
															"nativeSrc": "23182:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "23182:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23308:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "23308:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23321:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "23321:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23332:2:7",
																				"nodeType": "YulLiteral",
																				"src": "23332:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23317:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23317:3:7"
																		},
																		"nativeSrc": "23317:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23317:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23264:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "23264:43:7"
																},
																"nativeSrc": "23264:72:7",
																"nodeType": "YulFunctionCall",
																"src": "23264:72:7"
															},
															"nativeSrc": "23264:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "23264:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "22901:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23011:9:7",
														"nodeType": "YulTypedName",
														"src": "23011:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23023:6:7",
														"nodeType": "YulTypedName",
														"src": "23023:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23031:6:7",
														"nodeType": "YulTypedName",
														"src": "23031:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23039:6:7",
														"nodeType": "YulTypedName",
														"src": "23039:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23050:4:7",
														"nodeType": "YulTypedName",
														"src": "23050:4:7",
														"type": ""
													}
												],
												"src": "22901:442:7"
											},
											{
												"body": {
													"nativeSrc": "23393:147:7",
													"nodeType": "YulBlock",
													"src": "23393:147:7",
													"statements": [
														{
															"nativeSrc": "23403:25:7",
															"nodeType": "YulAssignment",
															"src": "23403:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23426:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "23426:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23408:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "23408:17:7"
																},
																"nativeSrc": "23408:20:7",
																"nodeType": "YulFunctionCall",
																"src": "23408:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23403:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "23403:1:7"
																}
															]
														},
														{
															"nativeSrc": "23437:25:7",
															"nodeType": "YulAssignment",
															"src": "23437:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23460:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "23460:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23442:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "23442:17:7"
																},
																"nativeSrc": "23442:20:7",
																"nodeType": "YulFunctionCall",
																"src": "23442:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23437:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "23437:1:7"
																}
															]
														},
														{
															"nativeSrc": "23471:16:7",
															"nodeType": "YulAssignment",
															"src": "23471:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23482:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "23482:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23485:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "23485:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23478:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23478:3:7"
																},
																"nativeSrc": "23478:9:7",
																"nodeType": "YulFunctionCall",
																"src": "23478:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "23471:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23471:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23511:22:7",
																"nodeType": "YulBlock",
																"src": "23511:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23513:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "23513:16:7"
																			},
																			"nativeSrc": "23513:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "23513:18:7"
																		},
																		"nativeSrc": "23513:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "23513:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23503:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "23503:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "23506:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "23506:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23500:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "23500:2:7"
																},
																"nativeSrc": "23500:10:7",
																"nodeType": "YulFunctionCall",
																"src": "23500:10:7"
															},
															"nativeSrc": "23497:36:7",
															"nodeType": "YulIf",
															"src": "23497:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "23349:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23380:1:7",
														"nodeType": "YulTypedName",
														"src": "23380:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23383:1:7",
														"nodeType": "YulTypedName",
														"src": "23383:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "23389:3:7",
														"nodeType": "YulTypedName",
														"src": "23389:3:7",
														"type": ""
													}
												],
												"src": "23349:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Username must not be empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Email must not be empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect ETH amount sent\")\n\n    }\n\n    function abi_encode_t_stringliteral_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient NB balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061012d575f3560e01c806395d89b41116100aa578063d637dcfa1161006e578063d637dcfa146103f0578063d96a094a14610418578063dd62ed3e14610434578063e4849b3214610470578063f2fde38b14610498578063fc37987b146104c057610134565b806395d89b4114610312578063a9059cbb1461033c578063ac6af28014610378578063cb797836146103a0578063d0679d34146103c857610134565b80636217229b116100f15780636217229b1461022e5780636386c1c71461025857806370a0823114610296578063715018a6146102d25780638da5cb5b146102e857610134565b806306fdde0314610138578063095ea7b31461016257806318160ddd1461019e57806323b872dd146101c8578063313ce5671461020457610134565b3661013457005b5f80fd5b348015610143575f80fd5b5061014c6104ea565b6040516101599190611546565b60405180910390f35b34801561016d575f80fd5b5061018860048036038101906101839190611604565b61057a565b604051610195919061165c565b60405180910390f35b3480156101a9575f80fd5b506101b261059c565b6040516101bf9190611684565b60405180910390f35b3480156101d3575f80fd5b506101ee60048036038101906101e9919061169d565b6105a5565b6040516101fb919061165c565b60405180910390f35b34801561020f575f80fd5b506102186105d3565b6040516102259190611708565b60405180910390f35b348015610239575f80fd5b506102426105db565b60405161024f9190611684565b60405180910390f35b348015610263575f80fd5b5061027e60048036038101906102799190611721565b6105e1565b60405161028d9392919061174c565b60405180910390f35b3480156102a1575f80fd5b506102bc60048036038101906102b79190611721565b6107fc565b6040516102c99190611684565b60405180910390f35b3480156102dd575f80fd5b506102e6610841565b005b3480156102f3575f80fd5b506102fc610854565b60405161030991906117a5565b60405180910390f35b34801561031d575f80fd5b5061032661087c565b6040516103339190611546565b60405180910390f35b348015610347575f80fd5b50610362600480360381019061035d9190611604565b61090c565b60405161036f919061165c565b60405180910390f35b348015610383575f80fd5b5061039e600480360381019061039991906117be565b61092e565b005b3480156103ab575f80fd5b506103c660048036038101906103c191906117fc565b610948565b005b3480156103d3575f80fd5b506103ee60048036038101906103e99190611604565b610965565b005b3480156103fb575f80fd5b5061041660048036038101906104119190611953565b610974565b005b610432600480360381019061042d91906117fc565b610a9a565b005b34801561043f575f80fd5b5061045a600480360381019061045591906119f7565b610b19565b6040516104679190611684565b60405180910390f35b34801561047b575f80fd5b50610496600480360381019061049191906117fc565b610b9b565b005b3480156104a3575f80fd5b506104be60048036038101906104b99190611721565b610c67565b005b3480156104cb575f80fd5b506104d4610ceb565b6040516104e19190611684565b60405180910390f35b6060600380546104f990611a62565b80601f016020809104026020016040519081016040528092919081815260200182805461052590611a62565b80156105705780601f1061054757610100808354040283529160200191610570565b820191905f5260205f20905b81548152906001019060200180831161055357829003601f168201915b5050505050905090565b5f80610584610cf1565b9050610591818585610cf8565b600191505092915050565b5f600254905090565b5f806105af610cf1565b90506105bc858285610d0a565b6105c7858585610d9c565b60019150509392505050565b5f6012905090565b60065481565b60608060605f60085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f8201805461063e90611a62565b80601f016020809104026020016040519081016040528092919081815260200182805461066a90611a62565b80156106b55780601f1061068c576101008083540402835291602001916106b5565b820191905f5260205f20905b81548152906001019060200180831161069857829003601f168201915b505050505081526020016001820180546106ce90611a62565b80601f01602080910402602001604051908101604052809291908181526020018280546106fa90611a62565b80156107455780601f1061071c57610100808354040283529160200191610745565b820191905f5260205f20905b81548152906001019060200180831161072857829003601f168201915b5050505050815260200160028201805461075e90611a62565b80601f016020809104026020016040519081016040528092919081815260200182805461078a90611a62565b80156107d55780601f106107ac576101008083540402835291602001916107d5565b820191905f5260205f20905b8154815290600101906020018083116107b857829003601f168201915b5050505050815250509050805f015181602001518260400151935093509350509193909250565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610849610e8c565b6108525f610f13565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461088b90611a62565b80601f01602080910402602001604051908101604052809291908181526020018280546108b790611a62565b80156109025780601f106108d957610100808354040283529160200191610902565b820191905f5260205f20905b8154815290600101906020018083116108e557829003601f168201915b5050505050905090565b5f80610916610cf1565b9050610923818585610d9c565b600191505092915050565b610936610e8c565b81600681905550806007819055505050565b610950610e8c565b6109623361095c610854565b83610d9c565b50565b610970338383610d9c565b5050565b5f8351116109b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ae90611adc565b60405180910390fd5b5f8251116109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190611b44565b60405180910390fd5b60405180606001604052808481526020018381526020018281525060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f019081610a659190611cff565b506020820151816001019081610a7b9190611cff565b506040820151816002019081610a919190611cff565b50905050505050565b5f610aa36105d3565b600a610aaf9190611f2a565b60065483610abd9190611f74565b610ac79190611fe2565b9050803414610b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b029061205c565b60405180910390fd5b610b153383610fd6565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f610ba46105d3565b600a610bb09190611f2a565b60075483610bbe9190611f74565b610bc89190611fe2565b905081610bd4336107fc565b1015610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c906120c4565b60405180910390fd5b610c1f3383611055565b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610c62573d5f803e3d5ffd5b505050565b610c6f610e8c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cdf575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610cd691906117a5565b60405180910390fd5b610ce881610f13565b50565b60075481565b5f33905090565b610d0583838360016110d4565b505050565b5f610d158484610b19565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610d965781811015610d87578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610d7e939291906120e2565b60405180910390fd5b610d9584848484035f6110d4565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e0c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e0391906117a5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e7c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e7391906117a5565b60405180910390fd5b610e878383836112a3565b505050565b610e94610cf1565b73ffffffffffffffffffffffffffffffffffffffff16610eb2610854565b73ffffffffffffffffffffffffffffffffffffffff1614610f1157610ed5610cf1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f0891906117a5565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611046575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161103d91906117a5565b60405180910390fd5b6110515f83836112a3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110c5575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110bc91906117a5565b60405180910390fd5b6110d0825f836112a3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611144575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161113b91906117a5565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111b4575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111ab91906117a5565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561129d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516112949190611684565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112f3578060025f8282546112e79190612117565b925050819055506113c1565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561137c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611373939291906120e2565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611408578060025f8282540392505081905550611452565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114af9190611684565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156114f35780820151818401526020810190506114d8565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611518826114bc565b61152281856114c6565b93506115328185602086016114d6565b61153b816114fe565b840191505092915050565b5f6020820190508181035f83015261155e818461150e565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115a082611577565b9050919050565b6115b081611596565b81146115ba575f80fd5b50565b5f813590506115cb816115a7565b92915050565b5f819050919050565b6115e3816115d1565b81146115ed575f80fd5b50565b5f813590506115fe816115da565b92915050565b5f806040838503121561161a5761161961156f565b5b5f611627858286016115bd565b9250506020611638858286016115f0565b9150509250929050565b5f8115159050919050565b61165681611642565b82525050565b5f60208201905061166f5f83018461164d565b92915050565b61167e816115d1565b82525050565b5f6020820190506116975f830184611675565b92915050565b5f805f606084860312156116b4576116b361156f565b5b5f6116c1868287016115bd565b93505060206116d2868287016115bd565b92505060406116e3868287016115f0565b9150509250925092565b5f60ff82169050919050565b611702816116ed565b82525050565b5f60208201905061171b5f8301846116f9565b92915050565b5f602082840312156117365761173561156f565b5b5f611743848285016115bd565b91505092915050565b5f6060820190508181035f830152611764818661150e565b90508181036020830152611778818561150e565b9050818103604083015261178c818461150e565b9050949350505050565b61179f81611596565b82525050565b5f6020820190506117b85f830184611796565b92915050565b5f80604083850312156117d4576117d361156f565b5b5f6117e1858286016115f0565b92505060206117f2858286016115f0565b9150509250929050565b5f602082840312156118115761181061156f565b5b5f61181e848285016115f0565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611865826114fe565b810181811067ffffffffffffffff821117156118845761188361182f565b5b80604052505050565b5f611896611566565b90506118a2828261185c565b919050565b5f67ffffffffffffffff8211156118c1576118c061182f565b5b6118ca826114fe565b9050602081019050919050565b828183375f83830152505050565b5f6118f76118f2846118a7565b61188d565b9050828152602081018484840111156119135761191261182b565b5b61191e8482856118d7565b509392505050565b5f82601f83011261193a57611939611827565b5b813561194a8482602086016118e5565b91505092915050565b5f805f6060848603121561196a5761196961156f565b5b5f84013567ffffffffffffffff81111561198757611986611573565b5b61199386828701611926565b935050602084013567ffffffffffffffff8111156119b4576119b3611573565b5b6119c086828701611926565b925050604084013567ffffffffffffffff8111156119e1576119e0611573565b5b6119ed86828701611926565b9150509250925092565b5f8060408385031215611a0d57611a0c61156f565b5b5f611a1a858286016115bd565b9250506020611a2b858286016115bd565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a7957607f821691505b602082108103611a8c57611a8b611a35565b5b50919050565b7f557365726e616d65206d757374206e6f7420626520656d7074790000000000005f82015250565b5f611ac6601a836114c6565b9150611ad182611a92565b602082019050919050565b5f6020820190508181035f830152611af381611aba565b9050919050565b7f456d61696c206d757374206e6f7420626520656d7074790000000000000000005f82015250565b5f611b2e6017836114c6565b9150611b3982611afa565b602082019050919050565b5f6020820190508181035f830152611b5b81611b22565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611bbe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611b83565b611bc88683611b83565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611c03611bfe611bf9846115d1565b611be0565b6115d1565b9050919050565b5f819050919050565b611c1c83611be9565b611c30611c2882611c0a565b848454611b8f565b825550505050565b5f90565b611c44611c38565b611c4f818484611c13565b505050565b5b81811015611c7257611c675f82611c3c565b600181019050611c55565b5050565b601f821115611cb757611c8881611b62565b611c9184611b74565b81016020851015611ca0578190505b611cb4611cac85611b74565b830182611c54565b50505b505050565b5f82821c905092915050565b5f611cd75f1984600802611cbc565b1980831691505092915050565b5f611cef8383611cc8565b9150826002028217905092915050565b611d08826114bc565b67ffffffffffffffff811115611d2157611d2061182f565b5b611d2b8254611a62565b611d36828285611c76565b5f60209050601f831160018114611d67575f8415611d55578287015190505b611d5f8582611ce4565b865550611dc6565b601f198416611d7586611b62565b5f5b82811015611d9c57848901518255600182019150602085019450602081019050611d77565b86831015611db95784890151611db5601f891682611cc8565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115611e5057808604811115611e2c57611e2b611dce565b5b6001851615611e3b5780820291505b8081029050611e4985611dfb565b9450611e10565b94509492505050565b5f82611e685760019050611f23565b81611e75575f9050611f23565b8160018114611e8b5760028114611e9557611ec4565b6001915050611f23565b60ff841115611ea757611ea6611dce565b5b8360020a915084821115611ebe57611ebd611dce565b5b50611f23565b5060208310610133831016604e8410600b8410161715611ef95782820a905083811115611ef457611ef3611dce565b5b611f23565b611f068484846001611e07565b92509050818404811115611f1d57611f1c611dce565b5b81810290505b9392505050565b5f611f34826115d1565b9150611f3f836116ed565b9250611f6c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611e59565b905092915050565b5f611f7e826115d1565b9150611f89836115d1565b9250828202611f97816115d1565b91508282048414831517611fae57611fad611dce565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611fec826115d1565b9150611ff7836115d1565b92508261200757612006611fb5565b5b828204905092915050565b7f496e636f72726563742045544820616d6f756e742073656e74000000000000005f82015250565b5f6120466019836114c6565b915061205182612012565b602082019050919050565b5f6020820190508181035f8301526120738161203a565b9050919050565b7f496e73756666696369656e74204e422062616c616e63650000000000000000005f82015250565b5f6120ae6017836114c6565b91506120b98261207a565b602082019050919050565b5f6020820190508181035f8301526120db816120a2565b9050919050565b5f6060820190506120f55f830186611796565b6121026020830185611675565b61210f6040830184611675565b949350505050565b5f612121826115d1565b915061212c836115d1565b925082820190508082111561214457612143611dce565b5b9291505056fea26469706673582212206081271ba147e3e4e4647ffcbe81946f695845a4225ca1877056e9d5d70e58fc64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xD637DCFA GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD637DCFA EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0xFC37987B EQ PUSH2 0x4C0 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xAC6AF280 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xCB797836 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xD0679D34 EQ PUSH2 0x3C8 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x6217229B GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x6217229B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E8 JUMPI PUSH2 0x134 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x204 JUMPI PUSH2 0x134 JUMP JUMPDEST CALLDATASIZE PUSH2 0x134 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x218 PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH2 0x841 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x383 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x92E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0x948 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH2 0x965 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x974 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0xA9A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH2 0xB9B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B9 SWAP2 SWAP1 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0xC67 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D4 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E1 SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4F9 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x525 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x570 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x547 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x570 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x553 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x584 PUSH2 0xCF1 JUMP JUMPDEST SWAP1 POP PUSH2 0x591 DUP2 DUP6 DUP6 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5AF PUSH2 0xCF1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5BC DUP6 DUP3 DUP6 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x5C7 DUP6 DUP6 DUP6 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH0 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0x63E SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x66A SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x68C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6B5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x698 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x6CE SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6FA SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x745 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x745 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x728 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x75E SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x78A SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x849 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x852 PUSH0 PUSH2 0xF13 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x88B SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B7 SWAP1 PUSH2 0x1A62 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x902 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x902 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x916 PUSH2 0xCF1 JUMP JUMPDEST SWAP1 POP PUSH2 0x923 DUP2 DUP6 DUP6 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x936 PUSH2 0xE8C JUMP JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x950 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x962 CALLER PUSH2 0x95C PUSH2 0x854 JUMP JUMPDEST DUP4 PUSH2 0xD9C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x970 CALLER DUP4 DUP4 PUSH2 0xD9C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP4 MLOAD GT PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AE SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD GT PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F1 SWAP1 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAA3 PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0xA PUSH2 0xAAF SWAP2 SWAP1 PUSH2 0x1F2A JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 PUSH2 0xABD SWAP2 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0xAC7 SWAP2 SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB02 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB15 CALLER DUP4 PUSH2 0xFD6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBA4 PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0xA PUSH2 0xBB0 SWAP2 SWAP1 PUSH2 0x1F2A JUMP JUMPDEST PUSH1 0x7 SLOAD DUP4 PUSH2 0xBBE SWAP2 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0xBC8 SWAP2 SWAP1 PUSH2 0x1FE2 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xBD4 CALLER PUSH2 0x7FC JUMP JUMPDEST LT ISZERO PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0C SWAP1 PUSH2 0x20C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC1F CALLER DUP4 PUSH2 0x1055 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC62 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC6F PUSH2 0xE8C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD6 SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE8 DUP2 PUSH2 0xF13 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD05 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD15 DUP5 DUP5 PUSH2 0xB19 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xD96 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD87 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD95 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x10D4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE03 SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE7C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE73 SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE87 DUP4 DUP4 DUP4 PUSH2 0x12A3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE94 PUSH2 0xCF1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEB2 PUSH2 0x854 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF11 JUMPI PUSH2 0xED5 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF08 SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1046 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103D SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1051 PUSH0 DUP4 DUP4 PUSH2 0x12A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BC SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10D0 DUP3 PUSH0 DUP4 PUSH2 0x12A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1144 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113B SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AB SWAP2 SWAP1 PUSH2 0x17A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x129D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1294 SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12F3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12E7 SWAP2 SWAP1 PUSH2 0x2117 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13C1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x137C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1373 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1408 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1452 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x14AF SWAP2 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14F3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14D8 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1518 DUP3 PUSH2 0x14BC JUMP JUMPDEST PUSH2 0x1522 DUP2 DUP6 PUSH2 0x14C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1532 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14D6 JUMP JUMPDEST PUSH2 0x153B DUP2 PUSH2 0x14FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x155E DUP2 DUP5 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15A0 DUP3 PUSH2 0x1577 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B0 DUP2 PUSH2 0x1596 JUMP JUMPDEST DUP2 EQ PUSH2 0x15BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15CB DUP2 PUSH2 0x15A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E3 DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x15ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15FE DUP2 PUSH2 0x15DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x161A JUMPI PUSH2 0x1619 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1627 DUP6 DUP3 DUP7 ADD PUSH2 0x15BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1638 DUP6 DUP3 DUP7 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1656 DUP2 PUSH2 0x1642 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x166F PUSH0 DUP4 ADD DUP5 PUSH2 0x164D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x167E DUP2 PUSH2 0x15D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1697 PUSH0 DUP4 ADD DUP5 PUSH2 0x1675 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16B4 JUMPI PUSH2 0x16B3 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16C1 DUP7 DUP3 DUP8 ADD PUSH2 0x15BD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16D2 DUP7 DUP3 DUP8 ADD PUSH2 0x15BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16E3 DUP7 DUP3 DUP8 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1702 DUP2 PUSH2 0x16ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171B PUSH0 DUP4 ADD DUP5 PUSH2 0x16F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1736 JUMPI PUSH2 0x1735 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1743 DUP5 DUP3 DUP6 ADD PUSH2 0x15BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1764 DUP2 DUP7 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1778 DUP2 DUP6 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x178C DUP2 DUP5 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x179F DUP2 PUSH2 0x1596 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17B8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1796 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D4 JUMPI PUSH2 0x17D3 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E1 DUP6 DUP3 DUP7 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17F2 DUP6 DUP3 DUP7 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1811 JUMPI PUSH2 0x1810 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x181E DUP5 DUP3 DUP6 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1865 DUP3 PUSH2 0x14FE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1884 JUMPI PUSH2 0x1883 PUSH2 0x182F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1896 PUSH2 0x1566 JUMP JUMPDEST SWAP1 POP PUSH2 0x18A2 DUP3 DUP3 PUSH2 0x185C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18C1 JUMPI PUSH2 0x18C0 PUSH2 0x182F JUMP JUMPDEST JUMPDEST PUSH2 0x18CA DUP3 PUSH2 0x14FE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18F7 PUSH2 0x18F2 DUP5 PUSH2 0x18A7 JUMP JUMPDEST PUSH2 0x188D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1913 JUMPI PUSH2 0x1912 PUSH2 0x182B JUMP JUMPDEST JUMPDEST PUSH2 0x191E DUP5 DUP3 DUP6 PUSH2 0x18D7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x193A JUMPI PUSH2 0x1939 PUSH2 0x1827 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x194A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x196A JUMPI PUSH2 0x1969 PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1987 JUMPI PUSH2 0x1986 PUSH2 0x1573 JUMP JUMPDEST JUMPDEST PUSH2 0x1993 DUP7 DUP3 DUP8 ADD PUSH2 0x1926 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19B4 JUMPI PUSH2 0x19B3 PUSH2 0x1573 JUMP JUMPDEST JUMPDEST PUSH2 0x19C0 DUP7 DUP3 DUP8 ADD PUSH2 0x1926 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19E1 JUMPI PUSH2 0x19E0 PUSH2 0x1573 JUMP JUMPDEST JUMPDEST PUSH2 0x19ED DUP7 DUP3 DUP8 ADD PUSH2 0x1926 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A0D JUMPI PUSH2 0x1A0C PUSH2 0x156F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A1A DUP6 DUP3 DUP7 ADD PUSH2 0x15BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A2B DUP6 DUP3 DUP7 ADD PUSH2 0x15BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A79 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A8C JUMPI PUSH2 0x1A8B PUSH2 0x1A35 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x557365726E616D65206D757374206E6F7420626520656D707479000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC6 PUSH1 0x1A DUP4 PUSH2 0x14C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD1 DUP3 PUSH2 0x1A92 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AF3 DUP2 PUSH2 0x1ABA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456D61696C206D757374206E6F7420626520656D707479000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B2E PUSH1 0x17 DUP4 PUSH2 0x14C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B39 DUP3 PUSH2 0x1AFA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B5B DUP2 PUSH2 0x1B22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1BBE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x1BC8 DUP7 DUP4 PUSH2 0x1B83 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C03 PUSH2 0x1BFE PUSH2 0x1BF9 DUP5 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C1C DUP4 PUSH2 0x1BE9 JUMP JUMPDEST PUSH2 0x1C30 PUSH2 0x1C28 DUP3 PUSH2 0x1C0A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1B8F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1C44 PUSH2 0x1C38 JUMP JUMPDEST PUSH2 0x1C4F DUP2 DUP5 DUP5 PUSH2 0x1C13 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C72 JUMPI PUSH2 0x1C67 PUSH0 DUP3 PUSH2 0x1C3C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C55 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1CB7 JUMPI PUSH2 0x1C88 DUP2 PUSH2 0x1B62 JUMP JUMPDEST PUSH2 0x1C91 DUP5 PUSH2 0x1B74 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1CA0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1CB4 PUSH2 0x1CAC DUP6 PUSH2 0x1B74 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1C54 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1CBC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CEF DUP4 DUP4 PUSH2 0x1CC8 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D08 DUP3 PUSH2 0x14BC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D21 JUMPI PUSH2 0x1D20 PUSH2 0x182F JUMP JUMPDEST JUMPDEST PUSH2 0x1D2B DUP3 SLOAD PUSH2 0x1A62 JUMP JUMPDEST PUSH2 0x1D36 DUP3 DUP3 DUP6 PUSH2 0x1C76 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1D67 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1D55 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1D5F DUP6 DUP3 PUSH2 0x1CE4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1D75 DUP7 PUSH2 0x1B62 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D9C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D77 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1DB9 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1DB5 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1CC8 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1E50 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1E2C JUMPI PUSH2 0x1E2B PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1E3B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1E49 DUP6 PUSH2 0x1DFB JUMP JUMPDEST SWAP5 POP PUSH2 0x1E10 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1E68 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1F23 JUMP JUMPDEST DUP2 PUSH2 0x1E75 JUMPI PUSH0 SWAP1 POP PUSH2 0x1F23 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1E8B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1E95 JUMPI PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1EA7 JUMPI PUSH2 0x1EA6 PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1EBE JUMPI PUSH2 0x1EBD PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST POP PUSH2 0x1F23 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1EF9 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1EF4 JUMPI PUSH2 0x1EF3 PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST PUSH2 0x1F23 JUMP JUMPDEST PUSH2 0x1F06 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1E07 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1F1D JUMPI PUSH2 0x1F1C PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F34 DUP3 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3F DUP4 PUSH2 0x16ED JUMP JUMPDEST SWAP3 POP PUSH2 0x1F6C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1E59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F7E DUP3 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F89 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1F97 DUP2 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FAE JUMPI PUSH2 0x1FAD PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FEC DUP3 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF7 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2007 JUMPI PUSH2 0x2006 PUSH2 0x1FB5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E636F72726563742045544820616D6F756E742073656E7400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2046 PUSH1 0x19 DUP4 PUSH2 0x14C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2051 DUP3 PUSH2 0x2012 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2073 DUP2 PUSH2 0x203A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74204E422062616C616E6365000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20AE PUSH1 0x17 DUP4 PUSH2 0x14C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B9 DUP3 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20DB DUP2 PUSH2 0x20A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20F5 PUSH0 DUP4 ADD DUP7 PUSH2 0x1796 JUMP JUMPDEST PUSH2 0x2102 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1675 JUMP JUMPDEST PUSH2 0x210F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1675 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2121 DUP3 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x212C DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2144 JUMPI PUSH2 0x2143 PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x81 0x27 SHL LOG1 SELFBALANCE 0xE3 0xE4 0xE4 PUSH5 0x7FFCBE8194 PUSH16 0x695845A4225CA1877056E9D5D70E58FC PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "168:1932:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;210:28:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;933:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3299:116:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1926:137:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1811:109;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1702:103;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;627:300;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1147:265;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1418:278:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;273:26:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;210:28:6:-;;;;:::o;933:208::-;992:13;1007;1022;1047:16;1066:5;:14;1072:7;1066:14;;;;;;;;;;;;;;;1047:33;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1098:4;:13;;;1113:4;:10;;;1125:4;:8;;;1090:44;;;;;;;933:208;;;;;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1926:137:6:-;1531:13:0;:11;:13::i;:::-;2019:9:6::1;2008:8;:20;;;;2048:8;2038:7;:18;;;;1926:137:::0;;:::o;1811:109::-;1531:13:0;:11;:13::i;:::-;1875:38:6::1;1885:10;1897:7;:5;:7::i;:::-;1906:6;1875:9;:38::i;:::-;1811:109:::0;:::o;1702:103::-;1763:35;1773:10;1785:2;1789:8;1763:9;:35::i;:::-;1702:103;;:::o;627:300::-;763:1;744:8;738:22;:26;730:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;835:1;819:5;813:19;:23;805:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;894:26;;;;;;;;899:8;894:26;;;;909:5;894:26;;;;916:3;894:26;;;874:5;:17;880:10;874:17;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;627:300;;;:::o;1147:265::-;1203:19;1253:10;:8;:10::i;:::-;1249:2;:14;;;;:::i;:::-;1237:8;;1226;:19;;;;:::i;:::-;1225:38;;;;:::i;:::-;1203:60;;1294:11;1281:9;:24;1273:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1345:27;1351:10;1363:8;1345:5;:27::i;:::-;1193:219;1147:265;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;1418:278:6:-;1467:17;1514:10;:8;:10::i;:::-;1510:2;:14;;;;:::i;:::-;1499:7;;1488:8;:18;;;;:::i;:::-;1487:37;;;;:::i;:::-;1467:57;;1567:8;1542:21;1552:10;1542:9;:21::i;:::-;:33;;1534:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1613:27;1619:10;1631:8;1613:5;:27::i;:::-;1658:10;1650:28;;:39;1679:9;1650:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1457:239;1418:278;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;273:26:6:-;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:715::-;5397:4;5435:2;5424:9;5420:18;5412:26;;5484:9;5478:4;5474:20;5470:1;5459:9;5455:17;5448:47;5512:78;5585:4;5576:6;5512:78;:::i;:::-;5504:86;;5637:9;5631:4;5627:20;5622:2;5611:9;5607:18;5600:48;5665:78;5738:4;5729:6;5665:78;:::i;:::-;5657:86;;5790:9;5784:4;5780:20;5775:2;5764:9;5760:18;5753:48;5818:78;5891:4;5882:6;5818:78;:::i;:::-;5810:86;;5188:715;;;;;;:::o;5909:118::-;5996:24;6014:5;5996:24;:::i;:::-;5991:3;5984:37;5909:118;;:::o;6033:222::-;6126:4;6164:2;6153:9;6149:18;6141:26;;6177:71;6245:1;6234:9;6230:17;6221:6;6177:71;:::i;:::-;6033:222;;;;:::o;6261:474::-;6329:6;6337;6386:2;6374:9;6365:7;6361:23;6357:32;6354:119;;;6392:79;;:::i;:::-;6354:119;6512:1;6537:53;6582:7;6573:6;6562:9;6558:22;6537:53;:::i;:::-;6527:63;;6483:117;6639:2;6665:53;6710:7;6701:6;6690:9;6686:22;6665:53;:::i;:::-;6655:63;;6610:118;6261:474;;;;;:::o;6741:329::-;6800:6;6849:2;6837:9;6828:7;6824:23;6820:32;6817:119;;;6855:79;;:::i;:::-;6817:119;6975:1;7000:53;7045:7;7036:6;7025:9;7021:22;7000:53;:::i;:::-;6990:63;;6946:117;6741:329;;;;:::o;7076:117::-;7185:1;7182;7175:12;7199:117;7308:1;7305;7298:12;7322:180;7370:77;7367:1;7360:88;7467:4;7464:1;7457:15;7491:4;7488:1;7481:15;7508:281;7591:27;7613:4;7591:27;:::i;:::-;7583:6;7579:40;7721:6;7709:10;7706:22;7685:18;7673:10;7670:34;7667:62;7664:88;;;7732:18;;:::i;:::-;7664:88;7772:10;7768:2;7761:22;7551:238;7508:281;;:::o;7795:129::-;7829:6;7856:20;;:::i;:::-;7846:30;;7885:33;7913:4;7905:6;7885:33;:::i;:::-;7795:129;;;:::o;7930:308::-;7992:4;8082:18;8074:6;8071:30;8068:56;;;8104:18;;:::i;:::-;8068:56;8142:29;8164:6;8142:29;:::i;:::-;8134:37;;8226:4;8220;8216:15;8208:23;;7930:308;;;:::o;8244:146::-;8341:6;8336:3;8331;8318:30;8382:1;8373:6;8368:3;8364:16;8357:27;8244:146;;;:::o;8396:425::-;8474:5;8499:66;8515:49;8557:6;8515:49;:::i;:::-;8499:66;:::i;:::-;8490:75;;8588:6;8581:5;8574:21;8626:4;8619:5;8615:16;8664:3;8655:6;8650:3;8646:16;8643:25;8640:112;;;8671:79;;:::i;:::-;8640:112;8761:54;8808:6;8803:3;8798;8761:54;:::i;:::-;8480:341;8396:425;;;;;:::o;8841:340::-;8897:5;8946:3;8939:4;8931:6;8927:17;8923:27;8913:122;;8954:79;;:::i;:::-;8913:122;9071:6;9058:20;9096:79;9171:3;9163:6;9156:4;9148:6;9144:17;9096:79;:::i;:::-;9087:88;;8903:278;8841:340;;;;:::o;9187:1159::-;9294:6;9302;9310;9359:2;9347:9;9338:7;9334:23;9330:32;9327:119;;;9365:79;;:::i;:::-;9327:119;9513:1;9502:9;9498:17;9485:31;9543:18;9535:6;9532:30;9529:117;;;9565:79;;:::i;:::-;9529:117;9670:63;9725:7;9716:6;9705:9;9701:22;9670:63;:::i;:::-;9660:73;;9456:287;9810:2;9799:9;9795:18;9782:32;9841:18;9833:6;9830:30;9827:117;;;9863:79;;:::i;:::-;9827:117;9968:63;10023:7;10014:6;10003:9;9999:22;9968:63;:::i;:::-;9958:73;;9753:288;10108:2;10097:9;10093:18;10080:32;10139:18;10131:6;10128:30;10125:117;;;10161:79;;:::i;:::-;10125:117;10266:63;10321:7;10312:6;10301:9;10297:22;10266:63;:::i;:::-;10256:73;;10051:288;9187:1159;;;;;:::o;10352:474::-;10420:6;10428;10477:2;10465:9;10456:7;10452:23;10448:32;10445:119;;;10483:79;;:::i;:::-;10445:119;10603:1;10628:53;10673:7;10664:6;10653:9;10649:22;10628:53;:::i;:::-;10618:63;;10574:117;10730:2;10756:53;10801:7;10792:6;10781:9;10777:22;10756:53;:::i;:::-;10746:63;;10701:118;10352:474;;;;;:::o;10832:180::-;10880:77;10877:1;10870:88;10977:4;10974:1;10967:15;11001:4;10998:1;10991:15;11018:320;11062:6;11099:1;11093:4;11089:12;11079:22;;11146:1;11140:4;11136:12;11167:18;11157:81;;11223:4;11215:6;11211:17;11201:27;;11157:81;11285:2;11277:6;11274:14;11254:18;11251:38;11248:84;;11304:18;;:::i;:::-;11248:84;11069:269;11018:320;;;:::o;11344:176::-;11484:28;11480:1;11472:6;11468:14;11461:52;11344:176;:::o;11526:366::-;11668:3;11689:67;11753:2;11748:3;11689:67;:::i;:::-;11682:74;;11765:93;11854:3;11765:93;:::i;:::-;11883:2;11878:3;11874:12;11867:19;;11526:366;;;:::o;11898:419::-;12064:4;12102:2;12091:9;12087:18;12079:26;;12151:9;12145:4;12141:20;12137:1;12126:9;12122:17;12115:47;12179:131;12305:4;12179:131;:::i;:::-;12171:139;;11898:419;;;:::o;12323:173::-;12463:25;12459:1;12451:6;12447:14;12440:49;12323:173;:::o;12502:366::-;12644:3;12665:67;12729:2;12724:3;12665:67;:::i;:::-;12658:74;;12741:93;12830:3;12741:93;:::i;:::-;12859:2;12854:3;12850:12;12843:19;;12502:366;;;:::o;12874:419::-;13040:4;13078:2;13067:9;13063:18;13055:26;;13127:9;13121:4;13117:20;13113:1;13102:9;13098:17;13091:47;13155:131;13281:4;13155:131;:::i;:::-;13147:139;;12874:419;;;:::o;13299:141::-;13348:4;13371:3;13363:11;;13394:3;13391:1;13384:14;13428:4;13425:1;13415:18;13407:26;;13299:141;;;:::o;13446:93::-;13483:6;13530:2;13525;13518:5;13514:14;13510:23;13500:33;;13446:93;;;:::o;13545:107::-;13589:8;13639:5;13633:4;13629:16;13608:37;;13545:107;;;;:::o;13658:393::-;13727:6;13777:1;13765:10;13761:18;13800:97;13830:66;13819:9;13800:97;:::i;:::-;13918:39;13948:8;13937:9;13918:39;:::i;:::-;13906:51;;13990:4;13986:9;13979:5;13975:21;13966:30;;14039:4;14029:8;14025:19;14018:5;14015:30;14005:40;;13734:317;;13658:393;;;;;:::o;14057:60::-;14085:3;14106:5;14099:12;;14057:60;;;:::o;14123:142::-;14173:9;14206:53;14224:34;14233:24;14251:5;14233:24;:::i;:::-;14224:34;:::i;:::-;14206:53;:::i;:::-;14193:66;;14123:142;;;:::o;14271:75::-;14314:3;14335:5;14328:12;;14271:75;;;:::o;14352:269::-;14462:39;14493:7;14462:39;:::i;:::-;14523:91;14572:41;14596:16;14572:41;:::i;:::-;14564:6;14557:4;14551:11;14523:91;:::i;:::-;14517:4;14510:105;14428:193;14352:269;;;:::o;14627:73::-;14672:3;14627:73;:::o;14706:189::-;14783:32;;:::i;:::-;14824:65;14882:6;14874;14868:4;14824:65;:::i;:::-;14759:136;14706:189;;:::o;14901:186::-;14961:120;14978:3;14971:5;14968:14;14961:120;;;15032:39;15069:1;15062:5;15032:39;:::i;:::-;15005:1;14998:5;14994:13;14985:22;;14961:120;;;14901:186;;:::o;15093:543::-;15194:2;15189:3;15186:11;15183:446;;;15228:38;15260:5;15228:38;:::i;:::-;15312:29;15330:10;15312:29;:::i;:::-;15302:8;15298:44;15495:2;15483:10;15480:18;15477:49;;;15516:8;15501:23;;15477:49;15539:80;15595:22;15613:3;15595:22;:::i;:::-;15585:8;15581:37;15568:11;15539:80;:::i;:::-;15198:431;;15183:446;15093:543;;;:::o;15642:117::-;15696:8;15746:5;15740:4;15736:16;15715:37;;15642:117;;;;:::o;15765:169::-;15809:6;15842:51;15890:1;15886:6;15878:5;15875:1;15871:13;15842:51;:::i;:::-;15838:56;15923:4;15917;15913:15;15903:25;;15816:118;15765:169;;;;:::o;15939:295::-;16015:4;16161:29;16186:3;16180:4;16161:29;:::i;:::-;16153:37;;16223:3;16220:1;16216:11;16210:4;16207:21;16199:29;;15939:295;;;;:::o;16239:1395::-;16356:37;16389:3;16356:37;:::i;:::-;16458:18;16450:6;16447:30;16444:56;;;16480:18;;:::i;:::-;16444:56;16524:38;16556:4;16550:11;16524:38;:::i;:::-;16609:67;16669:6;16661;16655:4;16609:67;:::i;:::-;16703:1;16727:4;16714:17;;16759:2;16751:6;16748:14;16776:1;16771:618;;;;17433:1;17450:6;17447:77;;;17499:9;17494:3;17490:19;17484:26;17475:35;;17447:77;17550:67;17610:6;17603:5;17550:67;:::i;:::-;17544:4;17537:81;17406:222;16741:887;;16771:618;16823:4;16819:9;16811:6;16807:22;16857:37;16889:4;16857:37;:::i;:::-;16916:1;16930:208;16944:7;16941:1;16938:14;16930:208;;;17023:9;17018:3;17014:19;17008:26;17000:6;16993:42;17074:1;17066:6;17062:14;17052:24;;17121:2;17110:9;17106:18;17093:31;;16967:4;16964:1;16960:12;16955:17;;16930:208;;;17166:6;17157:7;17154:19;17151:179;;;17224:9;17219:3;17215:19;17209:26;17267:48;17309:4;17301:6;17297:17;17286:9;17267:48;:::i;:::-;17259:6;17252:64;17174:156;17151:179;17376:1;17372;17364:6;17360:14;17356:22;17350:4;17343:36;16778:611;;;16741:887;;16331:1303;;;16239:1395;;:::o;17640:180::-;17688:77;17685:1;17678:88;17785:4;17782:1;17775:15;17809:4;17806:1;17799:15;17826:102;17868:8;17915:5;17912:1;17908:13;17887:34;;17826:102;;;:::o;17934:848::-;17995:5;18002:4;18026:6;18017:15;;18050:5;18041:14;;18064:712;18085:1;18075:8;18072:15;18064:712;;;18180:4;18175:3;18171:14;18165:4;18162:24;18159:50;;;18189:18;;:::i;:::-;18159:50;18239:1;18229:8;18225:16;18222:451;;;18654:4;18647:5;18643:16;18634:25;;18222:451;18704:4;18698;18694:15;18686:23;;18734:32;18757:8;18734:32;:::i;:::-;18722:44;;18064:712;;;17934:848;;;;;;;:::o;18788:1073::-;18842:5;19033:8;19023:40;;19054:1;19045:10;;19056:5;;19023:40;19082:4;19072:36;;19099:1;19090:10;;19101:5;;19072:36;19168:4;19216:1;19211:27;;;;19252:1;19247:191;;;;19161:277;;19211:27;19229:1;19220:10;;19231:5;;;19247:191;19292:3;19282:8;19279:17;19276:43;;;19299:18;;:::i;:::-;19276:43;19348:8;19345:1;19341:16;19332:25;;19383:3;19376:5;19373:14;19370:40;;;19390:18;;:::i;:::-;19370:40;19423:5;;;19161:277;;19547:2;19537:8;19534:16;19528:3;19522:4;19519:13;19515:36;19497:2;19487:8;19484:16;19479:2;19473:4;19470:12;19466:35;19450:111;19447:246;;;19603:8;19597:4;19593:19;19584:28;;19638:3;19631:5;19628:14;19625:40;;;19645:18;;:::i;:::-;19625:40;19678:5;;19447:246;19718:42;19756:3;19746:8;19740:4;19737:1;19718:42;:::i;:::-;19703:57;;;;19792:4;19787:3;19783:14;19776:5;19773:25;19770:51;;;19801:18;;:::i;:::-;19770:51;19850:4;19843:5;19839:16;19830:25;;18788:1073;;;;;;:::o;19867:281::-;19925:5;19949:23;19967:4;19949:23;:::i;:::-;19941:31;;19993:25;20009:8;19993:25;:::i;:::-;19981:37;;20037:104;20074:66;20064:8;20058:4;20037:104;:::i;:::-;20028:113;;19867:281;;;;:::o;20154:410::-;20194:7;20217:20;20235:1;20217:20;:::i;:::-;20212:25;;20251:20;20269:1;20251:20;:::i;:::-;20246:25;;20306:1;20303;20299:9;20328:30;20346:11;20328:30;:::i;:::-;20317:41;;20507:1;20498:7;20494:15;20491:1;20488:22;20468:1;20461:9;20441:83;20418:139;;20537:18;;:::i;:::-;20418:139;20202:362;20154:410;;;;:::o;20570:180::-;20618:77;20615:1;20608:88;20715:4;20712:1;20705:15;20739:4;20736:1;20729:15;20756:185;20796:1;20813:20;20831:1;20813:20;:::i;:::-;20808:25;;20847:20;20865:1;20847:20;:::i;:::-;20842:25;;20886:1;20876:35;;20891:18;;:::i;:::-;20876:35;20933:1;20930;20926:9;20921:14;;20756:185;;;;:::o;20947:175::-;21087:27;21083:1;21075:6;21071:14;21064:51;20947:175;:::o;21128:366::-;21270:3;21291:67;21355:2;21350:3;21291:67;:::i;:::-;21284:74;;21367:93;21456:3;21367:93;:::i;:::-;21485:2;21480:3;21476:12;21469:19;;21128:366;;;:::o;21500:419::-;21666:4;21704:2;21693:9;21689:18;21681:26;;21753:9;21747:4;21743:20;21739:1;21728:9;21724:17;21717:47;21781:131;21907:4;21781:131;:::i;:::-;21773:139;;21500:419;;;:::o;21925:173::-;22065:25;22061:1;22053:6;22049:14;22042:49;21925:173;:::o;22104:366::-;22246:3;22267:67;22331:2;22326:3;22267:67;:::i;:::-;22260:74;;22343:93;22432:3;22343:93;:::i;:::-;22461:2;22456:3;22452:12;22445:19;;22104:366;;;:::o;22476:419::-;22642:4;22680:2;22669:9;22665:18;22657:26;;22729:9;22723:4;22719:20;22715:1;22704:9;22700:17;22693:47;22757:131;22883:4;22757:131;:::i;:::-;22749:139;;22476:419;;;:::o;22901:442::-;23050:4;23088:2;23077:9;23073:18;23065:26;;23101:71;23169:1;23158:9;23154:17;23145:6;23101:71;:::i;:::-;23182:72;23250:2;23239:9;23235:18;23226:6;23182:72;:::i;:::-;23264;23332:2;23321:9;23317:18;23308:6;23264:72;:::i;:::-;22901:442;;;;;;:::o;23349:191::-;23389:3;23408:20;23426:1;23408:20;:::i;:::-;23403:25;;23442:20;23460:1;23442:20;:::i;:::-;23437:25;;23485:1;23482;23478:9;23471:16;;23506:3;23503:1;23500:10;23497:36;;;23513:18;;:::i;:::-;23497:36;23349:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1715200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"buy(uint256)": "infinite",
								"buyRate()": "2557",
								"decimals()": "450",
								"getUserInfo(address)": "infinite",
								"name()": "infinite",
								"owner()": "2626",
								"registerUser(string,string,string)": "infinite",
								"renounceOwnership()": "infinite",
								"sell(uint256)": "infinite",
								"sellRate()": "2448",
								"send(address,uint256)": "infinite",
								"sendToOwner(uint256)": "infinite",
								"setRates(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 168,
									"end": 2100,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 168,
									"end": 2100,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 2100,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 236,
									"end": 238,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 210,
									"end": 238,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 210,
									"end": 238,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 273,
									"end": 299,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 273,
									"end": 299,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 476,
									"end": 621,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 476,
									"end": 621,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 476,
									"end": 621,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 476,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 476,
									"end": 621,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 476,
									"end": 621,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 621,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 476,
									"end": 621,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 476,
									"end": 621,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 476,
									"end": 621,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 476,
									"end": 621,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 530,
									"end": 540,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4E616D617A62656B277320546F6B656E00000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4E42000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 551,
									"end": 591,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 557,
									"end": 567,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 580,
									"end": 590,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 588,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 580,
									"end": 588,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 580,
									"end": 588,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 580,
									"end": 590,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 580,
									"end": 590,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 580,
									"end": 590,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 590,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 590,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 576,
									"end": 578,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 576,
									"end": 590,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 576,
									"end": 590,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 576,
									"end": 590,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 576,
									"end": 590,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 576,
									"end": 590,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 576,
									"end": 590,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 576,
									"end": 590,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 569,
									"end": 573,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3E8"
								},
								{
									"begin": 569,
									"end": 590,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 569,
									"end": 590,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 569,
									"end": 590,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 569,
									"end": 590,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 569,
									"end": 590,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 569,
									"end": 590,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 569,
									"end": 590,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 551,
									"end": 556,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 551,
									"end": 556,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 551,
									"end": 556,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 551,
									"end": 591,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 551,
									"end": 591,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 551,
									"end": 591,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 551,
									"end": 591,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 551,
									"end": 591,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 168,
									"end": 2100,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 168,
									"end": 2100,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3002,
									"end": 3084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6048,
									"end": 6056,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6095,
									"end": 6100,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6092,
									"end": 6093,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6088,
									"end": 6101,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 6067,
									"end": 6101,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6067,
									"end": 6101,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6175,
									"end": 6180,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6182,
									"end": 6186,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6206,
									"end": 6212,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6197,
									"end": 6212,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6197,
									"end": 6212,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6221,
									"end": 6235,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6221,
									"end": 6235,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6265,
									"end": 6266,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6255,
									"end": 6263,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6252,
									"end": 6267,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6355,
									"end": 6358,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6351,
									"end": 6365,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 6345,
									"end": 6349,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6342,
									"end": 6366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6369,
									"end": 6387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6419,
									"end": 6420,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6409,
									"end": 6417,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6405,
									"end": 6421,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6834,
									"end": 6838,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6827,
									"end": 6832,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6823,
									"end": 6839,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6814,
									"end": 6839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6814,
									"end": 6839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6884,
									"end": 6888,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6878,
									"end": 6882,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6874,
									"end": 6889,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6866,
									"end": 6889,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6866,
									"end": 6889,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6914,
									"end": 6946,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 6937,
									"end": 6945,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6914,
									"end": 6946,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6914,
									"end": 6946,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6914,
									"end": 6946,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 6914,
									"end": 6946,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6902,
									"end": 6946,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6902,
									"end": 6946,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7022,
									"end": 7027,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7213,
									"end": 7221,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7203,
									"end": 7243,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7203,
									"end": 7243,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7234,
									"end": 7235,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7225,
									"end": 7235,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7225,
									"end": 7235,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7236,
									"end": 7241,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 7236,
									"end": 7241,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7203,
									"end": 7243,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7203,
									"end": 7243,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7266,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7252,
									"end": 7288,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 7252,
									"end": 7288,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7280,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7270,
									"end": 7280,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7270,
									"end": 7280,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7281,
									"end": 7286,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 7281,
									"end": 7286,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7252,
									"end": 7288,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 7252,
									"end": 7288,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7348,
									"end": 7352,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7396,
									"end": 7397,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7432,
									"end": 7433,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7409,
									"end": 7410,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7400,
									"end": 7410,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7400,
									"end": 7410,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7411,
									"end": 7416,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7411,
									"end": 7416,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 7411,
									"end": 7416,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7472,
									"end": 7475,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 7462,
									"end": 7470,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7459,
									"end": 7476,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7479,
									"end": 7497,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7479,
									"end": 7497,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7479,
									"end": 7497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7479,
									"end": 7497,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7479,
									"end": 7497,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7528,
									"end": 7536,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7525,
									"end": 7526,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7521,
									"end": 7537,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 7512,
									"end": 7537,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7512,
									"end": 7537,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7563,
									"end": 7566,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7556,
									"end": 7561,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7553,
									"end": 7567,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7570,
									"end": 7588,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7570,
									"end": 7588,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7570,
									"end": 7588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7570,
									"end": 7588,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7570,
									"end": 7588,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7603,
									"end": 7608,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7603,
									"end": 7608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 7603,
									"end": 7608,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7727,
									"end": 7729,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7717,
									"end": 7725,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7714,
									"end": 7730,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7708,
									"end": 7711,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 7702,
									"end": 7706,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7699,
									"end": 7712,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7695,
									"end": 7731,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7677,
									"end": 7679,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 7667,
									"end": 7675,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7664,
									"end": 7680,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7659,
									"end": 7661,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7650,
									"end": 7662,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7646,
									"end": 7681,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7630,
									"end": 7741,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7783,
									"end": 7791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7777,
									"end": 7781,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7773,
									"end": 7792,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 7764,
									"end": 7792,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7764,
									"end": 7792,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7818,
									"end": 7821,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7811,
									"end": 7816,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7808,
									"end": 7822,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7825,
									"end": 7843,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 7825,
									"end": 7843,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7825,
									"end": 7843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7825,
									"end": 7843,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 7825,
									"end": 7843,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7858,
									"end": 7863,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 7858,
									"end": 7863,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7898,
									"end": 7940,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7936,
									"end": 7939,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7926,
									"end": 7934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7920,
									"end": 7924,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7917,
									"end": 7918,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7898,
									"end": 7940,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 7898,
									"end": 7940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7898,
									"end": 7940,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7898,
									"end": 7940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7883,
									"end": 7940,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7883,
									"end": 7940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7883,
									"end": 7940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7883,
									"end": 7940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7972,
									"end": 7976,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7967,
									"end": 7970,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7963,
									"end": 7977,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 7956,
									"end": 7961,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7953,
									"end": 7978,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7981,
									"end": 7999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7981,
									"end": 7999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7981,
									"end": 7999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7981,
									"end": 7999,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7981,
									"end": 7999,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8030,
									"end": 8034,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8023,
									"end": 8028,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8019,
									"end": 8035,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8010,
									"end": 8035,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8010,
									"end": 8035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8047,
									"end": 8133,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 8047,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8082,
									"end": 8089,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8122,
									"end": 8126,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 8115,
									"end": 8120,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8111,
									"end": 8127,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8100,
									"end": 8127,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8100,
									"end": 8127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8047,
									"end": 8133,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8047,
									"end": 8133,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8047,
									"end": 8133,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8047,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8420,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8139,
									"end": 8420,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8221,
									"end": 8244,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 8239,
									"end": 8243,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8221,
									"end": 8244,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 8221,
									"end": 8244,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8221,
									"end": 8244,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 8221,
									"end": 8244,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8213,
									"end": 8244,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8213,
									"end": 8244,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8265,
									"end": 8290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8281,
									"end": 8289,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8265,
									"end": 8290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 8265,
									"end": 8290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8265,
									"end": 8290,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8265,
									"end": 8290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8253,
									"end": 8290,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8253,
									"end": 8290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8309,
									"end": 8413,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8346,
									"end": 8412,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8336,
									"end": 8344,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8330,
									"end": 8334,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8309,
									"end": 8413,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 8309,
									"end": 8413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8309,
									"end": 8413,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8309,
									"end": 8413,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8300,
									"end": 8413,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8300,
									"end": 8413,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8420,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8420,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8420,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8420,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8420,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8836,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 8426,
									"end": 8836,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8466,
									"end": 8473,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8489,
									"end": 8509,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8507,
									"end": 8508,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8489,
									"end": 8509,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 8489,
									"end": 8509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8489,
									"end": 8509,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8489,
									"end": 8509,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8484,
									"end": 8509,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8484,
									"end": 8509,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8523,
									"end": 8543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8541,
									"end": 8542,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8523,
									"end": 8543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 8523,
									"end": 8543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8523,
									"end": 8543,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8523,
									"end": 8543,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8518,
									"end": 8543,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8518,
									"end": 8543,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8578,
									"end": 8579,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8575,
									"end": 8576,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8571,
									"end": 8580,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8600,
									"end": 8630,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8618,
									"end": 8629,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8600,
									"end": 8630,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 8600,
									"end": 8630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8600,
									"end": 8630,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8600,
									"end": 8630,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8589,
									"end": 8630,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8589,
									"end": 8630,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8779,
									"end": 8780,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8770,
									"end": 8777,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8766,
									"end": 8781,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 8763,
									"end": 8764,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8760,
									"end": 8782,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8740,
									"end": 8741,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8733,
									"end": 8742,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8713,
									"end": 8796,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 8690,
									"end": 8829,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8690,
									"end": 8829,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8809,
									"end": 8827,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8809,
									"end": 8827,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 8809,
									"end": 8827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8809,
									"end": 8827,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8809,
									"end": 8827,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8690,
									"end": 8829,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8690,
									"end": 8829,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8474,
									"end": 8836,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8836,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8836,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8836,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8836,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8882,
									"end": 8885,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8919,
									"end": 8920,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 8901,
									"end": 8921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8896,
									"end": 8921,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8896,
									"end": 8921,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8953,
									"end": 8954,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 8935,
									"end": 8955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8930,
									"end": 8955,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8930,
									"end": 8955,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8978,
									"end": 8979,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8975,
									"end": 8976,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8971,
									"end": 8980,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8964,
									"end": 8980,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8964,
									"end": 8980,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8999,
									"end": 9002,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8996,
									"end": 8997,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8993,
									"end": 9003,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 9006,
									"end": 9024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8842,
									"end": 9033,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 9144,
									"end": 9149,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 9126,
									"end": 9150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9121,
									"end": 9124,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9114,
									"end": 9151,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9039,
									"end": 9157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9312,
									"end": 9316,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9350,
									"end": 9352,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 9339,
									"end": 9348,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9335,
									"end": 9353,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9327,
									"end": 9353,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9327,
									"end": 9353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 9431,
									"end": 9432,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9420,
									"end": 9429,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9416,
									"end": 9433,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9407,
									"end": 9413,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 9363,
									"end": 9434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 9512,
									"end": 9514,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9501,
									"end": 9510,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9497,
									"end": 9515,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9488,
									"end": 9494,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 9444,
									"end": 9516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 9594,
									"end": 9596,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9583,
									"end": 9592,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9570,
									"end": 9576,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 9526,
									"end": 9598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9704,
									"end": 9708,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9742,
									"end": 9744,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9731,
									"end": 9740,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9727,
									"end": 9745,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9719,
									"end": 9745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9719,
									"end": 9745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 9823,
									"end": 9824,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9812,
									"end": 9821,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9808,
									"end": 9825,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9799,
									"end": 9805,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 9755,
									"end": 9826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9611,
									"end": 9833,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 168,
									"end": 2100,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 168,
									"end": 2100,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 168,
									"end": 2100,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 2100,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 168,
									"end": 2100,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 2100,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 2100,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 168,
									"end": 2100,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 2100,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206081271ba147e3e4e4647ffcbe81946f695845a4225ca1877056e9d5d70e58fc64736f6c63430008160033",
									".code": [
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "D637DCFA"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "D637DCFA"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "D96A094A"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "E4849B32"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "FC37987B"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "AC6AF280"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "CB797836"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "D0679D34"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "6217229B"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "6217229B"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "6386C1C7"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2100,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 210,
											"end": 238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 210,
											"end": 238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 933,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 933,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 933,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1926,
											"end": 2063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1926,
											"end": 2063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1811,
											"end": 1920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1811,
											"end": 1920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1702,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1702,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 627,
											"end": 927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 627,
											"end": 927,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 927,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 627,
											"end": 927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 627,
											"end": 927,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 627,
											"end": 927,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 627,
											"end": 927,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 627,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 627,
											"end": 927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 627,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 627,
											"end": 927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1147,
											"end": 1412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1147,
											"end": 1412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1418,
											"end": 1696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1418,
											"end": 1696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 299,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 273,
											"end": 299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 273,
											"end": 299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 210,
											"end": 238,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 210,
											"end": 238,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 210,
											"end": 238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1005,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1007,
											"end": 1020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1022,
											"end": 1035,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1071,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1080,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1047,
											"end": 1080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1047,
											"end": 1080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1047,
											"end": 1080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1047,
											"end": 1080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1047,
											"end": 1080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1047,
											"end": 1080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1102,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1111,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1111,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1117,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1123,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1113,
											"end": 1123,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1123,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1129,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1133,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1133,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1133,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1134,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1134,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1134,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 933,
											"end": 1141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2028,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2008,
											"end": 2028,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2028,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2028,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2028,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2038,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2056,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2056,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 2063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1885,
											"end": 1895,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1897,
											"end": 1904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1897,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1897,
											"end": 1904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1897,
											"end": 1904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1897,
											"end": 1904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1912,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1875,
											"end": 1913,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1875,
											"end": 1913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1763,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1773,
											"end": 1783,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1789,
											"end": 1797,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1763,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1763,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1763,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1763,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 627,
											"end": 927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 763,
											"end": 764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 752,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 738,
											"end": 760,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 738,
											"end": 764,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 730,
											"end": 795,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 730,
											"end": 795,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 730,
											"end": 795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 730,
											"end": 795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 730,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 730,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 730,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 730,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 835,
											"end": 836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 813,
											"end": 832,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 813,
											"end": 836,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 805,
											"end": 864,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 805,
											"end": 864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 805,
											"end": 864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 805,
											"end": 864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 805,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 805,
											"end": 864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 805,
											"end": 864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 805,
											"end": 864,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 805,
											"end": 864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 920,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 894,
											"end": 920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 899,
											"end": 907,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 909,
											"end": 914,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 916,
											"end": 919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 894,
											"end": 920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 879,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 874,
											"end": 891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 890,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 874,
											"end": 891,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 891,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 874,
											"end": 891,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 891,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 874,
											"end": 891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 874,
											"end": 891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 874,
											"end": 891,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 874,
											"end": 891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 874,
											"end": 891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 874,
											"end": 891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 874,
											"end": 891,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 874,
											"end": 891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 891,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 874,
											"end": 920,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 874,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 874,
											"end": 920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 874,
											"end": 920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 874,
											"end": 920,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 874,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 874,
											"end": 920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 874,
											"end": 920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 874,
											"end": 920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 874,
											"end": 920,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 874,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 874,
											"end": 920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 874,
											"end": 920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1253,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1253,
											"end": 1263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1263,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1253,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1249,
											"end": 1263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1237,
											"end": 1245,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1237,
											"end": 1245,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1226,
											"end": 1234,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1226,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1226,
											"end": 1245,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1226,
											"end": 1245,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1226,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1226,
											"end": 1245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1226,
											"end": 1245,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1226,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1225,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1225,
											"end": 1263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1225,
											"end": 1263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1225,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1225,
											"end": 1263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1225,
											"end": 1263,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1225,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 1263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 1263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1305,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1281,
											"end": 1290,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1281,
											"end": 1305,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1273,
											"end": 1335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1273,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1351,
											"end": 1361,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1345,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1345,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1412,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1514,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1514,
											"end": 1524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 1524,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1514,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1510,
											"end": 1512,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1510,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1510,
											"end": 1524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1510,
											"end": 1524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1510,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1510,
											"end": 1524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1510,
											"end": 1524,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1510,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1506,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1499,
											"end": 1506,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1496,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 1488,
											"end": 1506,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1488,
											"end": 1506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1506,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 1488,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 1487,
											"end": 1524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1487,
											"end": 1524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1524,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 1487,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1567,
											"end": 1575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1552,
											"end": 1562,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1542,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1542,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1542,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1542,
											"end": 1575,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1542,
											"end": 1575,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1534,
											"end": 1603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 1534,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1613,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1619,
											"end": 1629,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1613,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1613,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1613,
											"end": 1640,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1613,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1668,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1678,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1650,
											"end": 1678,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "8FC"
										},
										{
											"begin": 1679,
											"end": 1688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 299,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 273,
											"end": 299,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 273,
											"end": 299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1382,
											"end": 1388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1663,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1660,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1664,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5903,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5188,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5435,
											"end": 5437,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5424,
											"end": 5433,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5438,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5438,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5493,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5478,
											"end": 5482,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5474,
											"end": 5494,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5470,
											"end": 5471,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5468,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5455,
											"end": 5472,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5495,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5512,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 5585,
											"end": 5589,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5576,
											"end": 5582,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5512,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 5512,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5512,
											"end": 5590,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 5512,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5631,
											"end": 5635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5647,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5622,
											"end": 5624,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5607,
											"end": 5625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5600,
											"end": 5648,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5729,
											"end": 5735,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 5665,
											"end": 5743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5743,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 5665,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5790,
											"end": 5799,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5784,
											"end": 5788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5800,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5775,
											"end": 5777,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5773,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 5778,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5753,
											"end": 5801,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5818,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 5891,
											"end": 5895,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5818,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 5818,
											"end": 5896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5818,
											"end": 5896,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 5818,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5903,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5903,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5909,
											"end": 6027,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 5909,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 6014,
											"end": 6019,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 5996,
											"end": 6020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 5996,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 5994,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5984,
											"end": 6021,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5909,
											"end": 6027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5909,
											"end": 6027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5909,
											"end": 6027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6255,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6033,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6126,
											"end": 6130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6166,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6167,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 6245,
											"end": 6246,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6243,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6230,
											"end": 6247,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6221,
											"end": 6227,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6177,
											"end": 6248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6248,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 6177,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6255,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6255,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6261,
											"end": 6735,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 6261,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6335,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6337,
											"end": 6343,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6388,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6374,
											"end": 6383,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6372,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6384,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6357,
											"end": 6389,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6473,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 6354,
											"end": 6473,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6392,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 6392,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 6392,
											"end": 6471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6392,
											"end": 6471,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 6392,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6473,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 6354,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6513,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6537,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 6582,
											"end": 6589,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6579,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6562,
											"end": 6571,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6558,
											"end": 6580,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6537,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 6537,
											"end": 6590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6537,
											"end": 6590,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 6537,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6527,
											"end": 6590,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6527,
											"end": 6590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6639,
											"end": 6641,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6665,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 6710,
											"end": 6717,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6701,
											"end": 6707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6690,
											"end": 6699,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6686,
											"end": 6708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6665,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 6665,
											"end": 6718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6665,
											"end": 6718,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 6665,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6718,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6655,
											"end": 6718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 6728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6261,
											"end": 6735,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6261,
											"end": 6735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6261,
											"end": 6735,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6261,
											"end": 6735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6261,
											"end": 6735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6261,
											"end": 6735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6741,
											"end": 7070,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6741,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6849,
											"end": 6851,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6837,
											"end": 6846,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6824,
											"end": 6847,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6820,
											"end": 6852,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6936,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 6817,
											"end": 6936,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 6855,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 6855,
											"end": 6934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6934,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 6855,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6936,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 6817,
											"end": 6936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6975,
											"end": 6976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7000,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 7045,
											"end": 7052,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7042,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7034,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7000,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 7000,
											"end": 7053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7000,
											"end": 7053,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 7000,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6990,
											"end": 7053,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6990,
											"end": 7053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6946,
											"end": 7063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6741,
											"end": 7070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6741,
											"end": 7070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6741,
											"end": 7070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6741,
											"end": 7070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6741,
											"end": 7070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7076,
											"end": 7193,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 7076,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7185,
											"end": 7186,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7182,
											"end": 7183,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7175,
											"end": 7187,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7316,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 7199,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7308,
											"end": 7309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7305,
											"end": 7306,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7310,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7322,
											"end": 7502,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 7322,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7370,
											"end": 7447,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7367,
											"end": 7368,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7360,
											"end": 7448,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7471,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 7464,
											"end": 7465,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7457,
											"end": 7472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7491,
											"end": 7495,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7488,
											"end": 7489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7481,
											"end": 7496,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7508,
											"end": 7789,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 7508,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 7613,
											"end": 7617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 7591,
											"end": 7618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7618,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 7591,
											"end": 7618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7583,
											"end": 7589,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7579,
											"end": 7619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7721,
											"end": 7727,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7709,
											"end": 7719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7728,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7685,
											"end": 7703,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7673,
											"end": 7683,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 7704,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7667,
											"end": 7729,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 7664,
											"end": 7752,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7664,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 7664,
											"end": 7752,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 7732,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 7732,
											"end": 7750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7750,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 7732,
											"end": 7750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7664,
											"end": 7752,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 7664,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7768,
											"end": 7770,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7761,
											"end": 7783,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7551,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7508,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7508,
											"end": 7789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7508,
											"end": 7789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 7924,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 7795,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7829,
											"end": 7835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 7856,
											"end": 7876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7846,
											"end": 7876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7846,
											"end": 7876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7885,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 7913,
											"end": 7917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7905,
											"end": 7911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7885,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 7885,
											"end": 7918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7885,
											"end": 7918,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 7885,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 7924,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 7924,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 7924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 7924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7930,
											"end": 8238,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7930,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7992,
											"end": 7996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8082,
											"end": 8100,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8074,
											"end": 8080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8071,
											"end": 8101,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8124,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 8068,
											"end": 8124,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8104,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 8104,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 8104,
											"end": 8122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8104,
											"end": 8122,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 8104,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8124,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 8068,
											"end": 8124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 8164,
											"end": 8170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 8142,
											"end": 8171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8142,
											"end": 8171,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 8142,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8134,
											"end": 8171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8134,
											"end": 8171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8226,
											"end": 8230,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8220,
											"end": 8224,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8216,
											"end": 8231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8231,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7930,
											"end": 8238,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7930,
											"end": 8238,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7930,
											"end": 8238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7930,
											"end": 8238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8390,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 8244,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8336,
											"end": 8339,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8331,
											"end": 8334,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8318,
											"end": 8348,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 8382,
											"end": 8383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8373,
											"end": 8379,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8368,
											"end": 8371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8380,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8357,
											"end": 8384,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8244,
											"end": 8390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8821,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 8396,
											"end": 8821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8474,
											"end": 8479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8499,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 8515,
											"end": 8564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 8557,
											"end": 8563,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 8515,
											"end": 8564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8564,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 8515,
											"end": 8564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8499,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 8499,
											"end": 8565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8499,
											"end": 8565,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 8499,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8594,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8581,
											"end": 8586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8574,
											"end": 8595,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8626,
											"end": 8630,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8619,
											"end": 8624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8615,
											"end": 8631,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8664,
											"end": 8667,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8655,
											"end": 8661,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8650,
											"end": 8653,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8662,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8643,
											"end": 8668,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8640,
											"end": 8752,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8640,
											"end": 8752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 8640,
											"end": 8752,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8671,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 8671,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 8671,
											"end": 8750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8671,
											"end": 8750,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 8671,
											"end": 8750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8640,
											"end": 8752,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 8640,
											"end": 8752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8761,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 8808,
											"end": 8814,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8798,
											"end": 8801,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8761,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 8761,
											"end": 8815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8761,
											"end": 8815,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 8761,
											"end": 8815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8480,
											"end": 8821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8821,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8821,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8841,
											"end": 9181,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 8841,
											"end": 9181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 8902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8949,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8939,
											"end": 8943,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8931,
											"end": 8937,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8927,
											"end": 8944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8923,
											"end": 8950,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8913,
											"end": 9035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 8913,
											"end": 9035,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8954,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 8954,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 8954,
											"end": 9033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8954,
											"end": 9033,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 8954,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8913,
											"end": 9035,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 8913,
											"end": 9035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9077,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9078,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 9096,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 9171,
											"end": 9174,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9163,
											"end": 9169,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9156,
											"end": 9160,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9148,
											"end": 9154,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9144,
											"end": 9161,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9096,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9096,
											"end": 9175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9096,
											"end": 9175,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 9096,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9087,
											"end": 9175,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9087,
											"end": 9175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8903,
											"end": 9181,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8841,
											"end": 9181,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8841,
											"end": 9181,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8841,
											"end": 9181,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8841,
											"end": 9181,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8841,
											"end": 9181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 10346,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 9187,
											"end": 10346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9294,
											"end": 9300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9302,
											"end": 9308,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9310,
											"end": 9316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9359,
											"end": 9361,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9347,
											"end": 9356,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9338,
											"end": 9345,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9334,
											"end": 9357,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9362,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9327,
											"end": 9446,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9327,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 9327,
											"end": 9446,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9365,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 9365,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 9365,
											"end": 9444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9365,
											"end": 9444,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 9365,
											"end": 9444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9327,
											"end": 9446,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 9327,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9502,
											"end": 9511,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9498,
											"end": 9515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9485,
											"end": 9516,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 9543,
											"end": 9561,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9535,
											"end": 9541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9532,
											"end": 9562,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9529,
											"end": 9646,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9529,
											"end": 9646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 9529,
											"end": 9646,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9565,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 9565,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 9565,
											"end": 9644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9565,
											"end": 9644,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 9565,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9529,
											"end": 9646,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 9529,
											"end": 9646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9670,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 9725,
											"end": 9732,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9716,
											"end": 9722,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9705,
											"end": 9714,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9701,
											"end": 9723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9670,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 9670,
											"end": 9733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9670,
											"end": 9733,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 9670,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9660,
											"end": 9733,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9660,
											"end": 9733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9456,
											"end": 9743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9799,
											"end": 9808,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9782,
											"end": 9814,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 9841,
											"end": 9859,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9833,
											"end": 9839,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9860,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9827,
											"end": 9944,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9827,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 9827,
											"end": 9944,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9863,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 9863,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 9863,
											"end": 9942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9863,
											"end": 9942,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 9863,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9827,
											"end": 9944,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 9827,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9968,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 10023,
											"end": 10030,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10014,
											"end": 10020,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10003,
											"end": 10012,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9999,
											"end": 10021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9968,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 9968,
											"end": 10031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9968,
											"end": 10031,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 9968,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 10031,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 10031,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9753,
											"end": 10041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10108,
											"end": 10110,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10097,
											"end": 10106,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10093,
											"end": 10111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10112,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 10139,
											"end": 10157,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10131,
											"end": 10137,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10158,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10125,
											"end": 10242,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10125,
											"end": 10242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 10125,
											"end": 10242,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10161,
											"end": 10240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 10161,
											"end": 10240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 10161,
											"end": 10240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10161,
											"end": 10240,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 10161,
											"end": 10240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10125,
											"end": 10242,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 10125,
											"end": 10242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10266,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 10321,
											"end": 10328,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10312,
											"end": 10318,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10310,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10297,
											"end": 10319,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10266,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 10266,
											"end": 10329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10266,
											"end": 10329,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 10266,
											"end": 10329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10329,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10256,
											"end": 10329,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10051,
											"end": 10339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 10346,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 10346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 10346,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 10346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 10346,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 10346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10352,
											"end": 10826,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 10352,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10420,
											"end": 10426,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10428,
											"end": 10434,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10479,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10465,
											"end": 10474,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10456,
											"end": 10463,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10452,
											"end": 10475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10448,
											"end": 10480,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10445,
											"end": 10564,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10445,
											"end": 10564,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 10445,
											"end": 10564,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10483,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 10483,
											"end": 10562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 10483,
											"end": 10562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10483,
											"end": 10562,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 10483,
											"end": 10562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10445,
											"end": 10564,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 10445,
											"end": 10564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10603,
											"end": 10604,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10628,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 10673,
											"end": 10680,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10664,
											"end": 10670,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10653,
											"end": 10662,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10649,
											"end": 10671,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 10628,
											"end": 10681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10681,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 10628,
											"end": 10681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10681,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10574,
											"end": 10691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10730,
											"end": 10732,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10756,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 10801,
											"end": 10808,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10781,
											"end": 10790,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10777,
											"end": 10799,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10756,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 10756,
											"end": 10809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10756,
											"end": 10809,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 10756,
											"end": 10809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10746,
											"end": 10809,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10746,
											"end": 10809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10701,
											"end": 10819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10352,
											"end": 10826,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10352,
											"end": 10826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10352,
											"end": 10826,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10352,
											"end": 10826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10352,
											"end": 10826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10352,
											"end": 10826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10832,
											"end": 11012,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 10832,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10880,
											"end": 10957,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10877,
											"end": 10878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10870,
											"end": 10958,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10977,
											"end": 10981,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 10974,
											"end": 10975,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10967,
											"end": 10982,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11001,
											"end": 11005,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10998,
											"end": 10999,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10991,
											"end": 11006,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11018,
											"end": 11338,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 11018,
											"end": 11338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11062,
											"end": 11068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11099,
											"end": 11100,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11093,
											"end": 11097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11089,
											"end": 11101,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11079,
											"end": 11101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11146,
											"end": 11147,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11140,
											"end": 11144,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11136,
											"end": 11148,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11167,
											"end": 11185,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11157,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 11157,
											"end": 11238,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11223,
											"end": 11227,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 11215,
											"end": 11221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11211,
											"end": 11228,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11201,
											"end": 11228,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11201,
											"end": 11228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11157,
											"end": 11238,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 11157,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11285,
											"end": 11287,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11277,
											"end": 11283,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11274,
											"end": 11288,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11254,
											"end": 11272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11251,
											"end": 11289,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11248,
											"end": 11332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 11248,
											"end": 11332,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11304,
											"end": 11322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 11304,
											"end": 11322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 11304,
											"end": 11322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11304,
											"end": 11322,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 11304,
											"end": 11322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11248,
											"end": 11332,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 11248,
											"end": 11332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11069,
											"end": 11338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11018,
											"end": 11338,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11018,
											"end": 11338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11018,
											"end": 11338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11018,
											"end": 11338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11344,
											"end": 11520,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 11344,
											"end": 11520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11484,
											"end": 11512,
											"name": "PUSH",
											"source": 7,
											"value": "557365726E616D65206D757374206E6F7420626520656D707479000000000000"
										},
										{
											"begin": 11480,
											"end": 11481,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11478,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11468,
											"end": 11482,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11461,
											"end": 11513,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11344,
											"end": 11520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11344,
											"end": 11520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11526,
											"end": 11892,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 11526,
											"end": 11892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11668,
											"end": 11671,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11689,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 11753,
											"end": 11755,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 11748,
											"end": 11751,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11689,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 11689,
											"end": 11756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11689,
											"end": 11756,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 11689,
											"end": 11756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11682,
											"end": 11756,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11682,
											"end": 11756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11765,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 11854,
											"end": 11857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11765,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 11765,
											"end": 11858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11765,
											"end": 11858,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 11765,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11883,
											"end": 11885,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11878,
											"end": 11881,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11874,
											"end": 11886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11867,
											"end": 11886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11867,
											"end": 11886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11526,
											"end": 11892,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11526,
											"end": 11892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11526,
											"end": 11892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11526,
											"end": 11892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11898,
											"end": 12317,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 11898,
											"end": 12317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12064,
											"end": 12068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12102,
											"end": 12104,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12091,
											"end": 12100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12087,
											"end": 12105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12079,
											"end": 12105,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12079,
											"end": 12105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12151,
											"end": 12160,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12145,
											"end": 12149,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12141,
											"end": 12161,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12137,
											"end": 12138,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12126,
											"end": 12135,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12122,
											"end": 12139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12115,
											"end": 12162,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12179,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 12305,
											"end": 12309,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12179,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 12179,
											"end": 12310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12179,
											"end": 12310,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 12179,
											"end": 12310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12171,
											"end": 12310,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12171,
											"end": 12310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11898,
											"end": 12317,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11898,
											"end": 12317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11898,
											"end": 12317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11898,
											"end": 12317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12323,
											"end": 12496,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 12323,
											"end": 12496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12463,
											"end": 12488,
											"name": "PUSH",
											"source": 7,
											"value": "456D61696C206D757374206E6F7420626520656D707479000000000000000000"
										},
										{
											"begin": 12459,
											"end": 12460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12451,
											"end": 12457,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12447,
											"end": 12461,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12440,
											"end": 12489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12323,
											"end": 12496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12323,
											"end": 12496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12502,
											"end": 12868,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 12502,
											"end": 12868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12644,
											"end": 12647,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12665,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 12729,
											"end": 12731,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 12724,
											"end": 12727,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12665,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 12665,
											"end": 12732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12665,
											"end": 12732,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 12665,
											"end": 12732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12658,
											"end": 12732,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12658,
											"end": 12732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12741,
											"end": 12834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 12830,
											"end": 12833,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12741,
											"end": 12834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 12741,
											"end": 12834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12741,
											"end": 12834,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 12741,
											"end": 12834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12859,
											"end": 12861,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12854,
											"end": 12857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12850,
											"end": 12862,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12843,
											"end": 12862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12843,
											"end": 12862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12502,
											"end": 12868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12502,
											"end": 12868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12502,
											"end": 12868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12502,
											"end": 12868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12874,
											"end": 13293,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 12874,
											"end": 13293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13040,
											"end": 13044,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13078,
											"end": 13080,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13067,
											"end": 13076,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13063,
											"end": 13081,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13055,
											"end": 13081,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13055,
											"end": 13081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13127,
											"end": 13136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13121,
											"end": 13125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13117,
											"end": 13137,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13113,
											"end": 13114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13102,
											"end": 13111,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13098,
											"end": 13115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13091,
											"end": 13138,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13155,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 13281,
											"end": 13285,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13155,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 13155,
											"end": 13286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13155,
											"end": 13286,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 13155,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13147,
											"end": 13286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13147,
											"end": 13286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12874,
											"end": 13293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12874,
											"end": 13293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12874,
											"end": 13293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12874,
											"end": 13293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13299,
											"end": 13440,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 13299,
											"end": 13440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13348,
											"end": 13352,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13371,
											"end": 13374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13363,
											"end": 13374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13363,
											"end": 13374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13394,
											"end": 13397,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13391,
											"end": 13392,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13384,
											"end": 13398,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13428,
											"end": 13432,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13425,
											"end": 13426,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13415,
											"end": 13433,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 13407,
											"end": 13433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13407,
											"end": 13433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13299,
											"end": 13440,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13299,
											"end": 13440,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13299,
											"end": 13440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13299,
											"end": 13440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13539,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 13446,
											"end": 13539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13483,
											"end": 13489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13530,
											"end": 13532,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13525,
											"end": 13527,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 13518,
											"end": 13523,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13514,
											"end": 13528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13510,
											"end": 13533,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13500,
											"end": 13533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13500,
											"end": 13533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13539,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13539,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13446,
											"end": 13539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13545,
											"end": 13652,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 13545,
											"end": 13652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13589,
											"end": 13597,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13639,
											"end": 13644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13633,
											"end": 13637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13629,
											"end": 13645,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 13608,
											"end": 13645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13608,
											"end": 13645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13545,
											"end": 13652,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13545,
											"end": 13652,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13545,
											"end": 13652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13545,
											"end": 13652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13545,
											"end": 13652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13658,
											"end": 14051,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 13658,
											"end": 14051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13727,
											"end": 13733,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13778,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 13765,
											"end": 13775,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13761,
											"end": 13779,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 13800,
											"end": 13897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 13830,
											"end": 13896,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13819,
											"end": 13828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13800,
											"end": 13897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 13800,
											"end": 13897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13800,
											"end": 13897,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 13800,
											"end": 13897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13918,
											"end": 13957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 13948,
											"end": 13956,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13937,
											"end": 13946,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13918,
											"end": 13957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 13918,
											"end": 13957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13918,
											"end": 13957,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 13918,
											"end": 13957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13906,
											"end": 13957,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 13906,
											"end": 13957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13990,
											"end": 13994,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13986,
											"end": 13995,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 13979,
											"end": 13984,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13975,
											"end": 13996,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13966,
											"end": 13996,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13966,
											"end": 13996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14039,
											"end": 14043,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14029,
											"end": 14037,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14025,
											"end": 14044,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14018,
											"end": 14023,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14015,
											"end": 14045,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 14005,
											"end": 14045,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14005,
											"end": 14045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13734,
											"end": 14051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13734,
											"end": 14051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13658,
											"end": 14051,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13658,
											"end": 14051,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13658,
											"end": 14051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13658,
											"end": 14051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13658,
											"end": 14051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13658,
											"end": 14051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14057,
											"end": 14117,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 14057,
											"end": 14117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14085,
											"end": 14088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14106,
											"end": 14111,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14099,
											"end": 14111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14099,
											"end": 14111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14057,
											"end": 14117,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14057,
											"end": 14117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14057,
											"end": 14117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14057,
											"end": 14117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14123,
											"end": 14265,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 14123,
											"end": 14265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14173,
											"end": 14182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14206,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 14224,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 14233,
											"end": 14257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 14251,
											"end": 14256,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14233,
											"end": 14257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 14233,
											"end": 14257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14233,
											"end": 14257,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 14233,
											"end": 14257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14224,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 14224,
											"end": 14258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14224,
											"end": 14258,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 14224,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14206,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 14206,
											"end": 14259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14206,
											"end": 14259,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 14206,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14193,
											"end": 14259,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14193,
											"end": 14259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14123,
											"end": 14265,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14123,
											"end": 14265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14123,
											"end": 14265,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14123,
											"end": 14265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14271,
											"end": 14346,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 14271,
											"end": 14346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14314,
											"end": 14317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14335,
											"end": 14340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14328,
											"end": 14340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14328,
											"end": 14340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14271,
											"end": 14346,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14271,
											"end": 14346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14271,
											"end": 14346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14271,
											"end": 14346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14352,
											"end": 14621,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 14352,
											"end": 14621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14462,
											"end": 14501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 14493,
											"end": 14500,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14462,
											"end": 14501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 14462,
											"end": 14501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14462,
											"end": 14501,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 14462,
											"end": 14501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14523,
											"end": 14614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 14572,
											"end": 14613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 14596,
											"end": 14612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14572,
											"end": 14613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 14572,
											"end": 14613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14572,
											"end": 14613,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 14572,
											"end": 14613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14564,
											"end": 14570,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14557,
											"end": 14561,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14551,
											"end": 14562,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14523,
											"end": 14614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 14523,
											"end": 14614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14523,
											"end": 14614,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 14523,
											"end": 14614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14517,
											"end": 14521,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14510,
											"end": 14615,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 14428,
											"end": 14621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14352,
											"end": 14621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14352,
											"end": 14621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14352,
											"end": 14621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14352,
											"end": 14621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14627,
											"end": 14700,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 14627,
											"end": 14700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14672,
											"end": 14675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14627,
											"end": 14700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14627,
											"end": 14700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14706,
											"end": 14895,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 14706,
											"end": 14895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14783,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 14783,
											"end": 14815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 14783,
											"end": 14815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14783,
											"end": 14815,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 14783,
											"end": 14815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14824,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 14882,
											"end": 14888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14874,
											"end": 14880,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14868,
											"end": 14872,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14824,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 14824,
											"end": 14889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14824,
											"end": 14889,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 14824,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14759,
											"end": 14895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14706,
											"end": 14895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14706,
											"end": 14895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14706,
											"end": 14895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14901,
											"end": 15087,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 14901,
											"end": 15087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14961,
											"end": 15081,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 14961,
											"end": 15081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14978,
											"end": 14981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14971,
											"end": 14976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14968,
											"end": 14982,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 14961,
											"end": 15081,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14961,
											"end": 15081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 14961,
											"end": 15081,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15032,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 15069,
											"end": 15070,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15062,
											"end": 15067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15032,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 15032,
											"end": 15071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15032,
											"end": 15071,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 15032,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15005,
											"end": 15006,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14998,
											"end": 15003,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14994,
											"end": 15007,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14985,
											"end": 15007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14985,
											"end": 15007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14961,
											"end": 15081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 14961,
											"end": 15081,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14961,
											"end": 15081,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 14961,
											"end": 15081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14901,
											"end": 15087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14901,
											"end": 15087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14901,
											"end": 15087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15636,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 15093,
											"end": 15636,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15194,
											"end": 15196,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 15189,
											"end": 15192,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15186,
											"end": 15197,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 15183,
											"end": 15629,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15183,
											"end": 15629,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 15183,
											"end": 15629,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15228,
											"end": 15266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 15260,
											"end": 15265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15228,
											"end": 15266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 15228,
											"end": 15266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15228,
											"end": 15266,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 15228,
											"end": 15266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15312,
											"end": 15341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 15330,
											"end": 15340,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15312,
											"end": 15341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 15312,
											"end": 15341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15312,
											"end": 15341,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 15312,
											"end": 15341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15302,
											"end": 15310,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15298,
											"end": 15342,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15495,
											"end": 15497,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15483,
											"end": 15493,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15480,
											"end": 15498,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15477,
											"end": 15526,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15477,
											"end": 15526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 15477,
											"end": 15526,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15516,
											"end": 15524,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15501,
											"end": 15524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15501,
											"end": 15524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15477,
											"end": 15526,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 15477,
											"end": 15526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15539,
											"end": 15619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 15595,
											"end": 15617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 15613,
											"end": 15616,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 15595,
											"end": 15617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 15595,
											"end": 15617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15595,
											"end": 15617,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 15595,
											"end": 15617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15585,
											"end": 15593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15581,
											"end": 15618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15568,
											"end": 15579,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15539,
											"end": 15619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 15539,
											"end": 15619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15539,
											"end": 15619,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 15539,
											"end": 15619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15198,
											"end": 15629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15198,
											"end": 15629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15183,
											"end": 15629,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 15183,
											"end": 15629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15642,
											"end": 15759,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 15642,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15696,
											"end": 15704,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15746,
											"end": 15751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15740,
											"end": 15744,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15736,
											"end": 15752,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 15715,
											"end": 15752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15715,
											"end": 15752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15642,
											"end": 15759,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15642,
											"end": 15759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15642,
											"end": 15759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15642,
											"end": 15759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15642,
											"end": 15759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15765,
											"end": 15934,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 15765,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15809,
											"end": 15815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15842,
											"end": 15893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 15890,
											"end": 15891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 15878,
											"end": 15883,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15875,
											"end": 15876,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 15871,
											"end": 15884,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 15842,
											"end": 15893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 15842,
											"end": 15893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15842,
											"end": 15893,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 15842,
											"end": 15893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15838,
											"end": 15894,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 15923,
											"end": 15927,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 15917,
											"end": 15921,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15913,
											"end": 15928,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15903,
											"end": 15928,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15903,
											"end": 15928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15816,
											"end": 15934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15765,
											"end": 15934,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15765,
											"end": 15934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15765,
											"end": 15934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15765,
											"end": 15934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15765,
											"end": 15934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 16234,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 15939,
											"end": 16234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16015,
											"end": 16019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16161,
											"end": 16190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 16186,
											"end": 16189,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16180,
											"end": 16184,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16161,
											"end": 16190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 16161,
											"end": 16190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16161,
											"end": 16190,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 16161,
											"end": 16190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16153,
											"end": 16190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16223,
											"end": 16226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16220,
											"end": 16221,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 16216,
											"end": 16227,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16210,
											"end": 16214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16207,
											"end": 16228,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 16199,
											"end": 16228,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16199,
											"end": 16228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 16234,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 16234,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 16234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 16234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 16234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16239,
											"end": 17634,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 16239,
											"end": 17634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16356,
											"end": 16393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 16389,
											"end": 16392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16356,
											"end": 16393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 16356,
											"end": 16393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16356,
											"end": 16393,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 16356,
											"end": 16393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16458,
											"end": 16476,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16450,
											"end": 16456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16447,
											"end": 16477,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16444,
											"end": 16500,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16444,
											"end": 16500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 16444,
											"end": 16500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16480,
											"end": 16498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 16480,
											"end": 16498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 16480,
											"end": 16498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16480,
											"end": 16498,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 16480,
											"end": 16498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16444,
											"end": 16500,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 16444,
											"end": 16500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16524,
											"end": 16562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 16556,
											"end": 16560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16550,
											"end": 16561,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 16524,
											"end": 16562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 16524,
											"end": 16562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16524,
											"end": 16562,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 16524,
											"end": 16562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16609,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 16669,
											"end": 16675,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16661,
											"end": 16667,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16655,
											"end": 16659,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16609,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 16609,
											"end": 16676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16609,
											"end": 16676,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 16609,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16703,
											"end": 16704,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16727,
											"end": 16731,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16714,
											"end": 16731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16714,
											"end": 16731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16759,
											"end": 16761,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 16751,
											"end": 16757,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16748,
											"end": 16762,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16776,
											"end": 16777,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 16771,
											"end": 17389,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16771,
											"end": 17389,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 16771,
											"end": 17389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 16771,
											"end": 17389,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17433,
											"end": 17434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17450,
											"end": 17456,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17447,
											"end": 17524,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17447,
											"end": 17524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 17447,
											"end": 17524,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17499,
											"end": 17508,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17494,
											"end": 17497,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 17490,
											"end": 17509,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17484,
											"end": 17510,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17475,
											"end": 17510,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17475,
											"end": 17510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17447,
											"end": 17524,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 17447,
											"end": 17524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17550,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 17610,
											"end": 17616,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17603,
											"end": 17608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17550,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 17550,
											"end": 17617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17550,
											"end": 17617,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 17550,
											"end": 17617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17544,
											"end": 17548,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17537,
											"end": 17618,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 17406,
											"end": 17628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16741,
											"end": 17628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 16741,
											"end": 17628,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16771,
											"end": 17389,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 16771,
											"end": 17389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16823,
											"end": 16827,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 16819,
											"end": 16828,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 16811,
											"end": 16817,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16807,
											"end": 16829,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16857,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16857,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 16857,
											"end": 16894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16857,
											"end": 16894,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 16857,
											"end": 16894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16916,
											"end": 16917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16930,
											"end": 17138,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 16930,
											"end": 17138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16944,
											"end": 16951,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16941,
											"end": 16942,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16938,
											"end": 16952,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16930,
											"end": 17138,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16930,
											"end": 17138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 16930,
											"end": 17138,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17023,
											"end": 17032,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17018,
											"end": 17021,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 17014,
											"end": 17033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17008,
											"end": 17034,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17000,
											"end": 17006,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16993,
											"end": 17035,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 17074,
											"end": 17075,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17066,
											"end": 17072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17062,
											"end": 17076,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17052,
											"end": 17076,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17052,
											"end": 17076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17121,
											"end": 17123,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17110,
											"end": 17119,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17106,
											"end": 17124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17093,
											"end": 17124,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 17093,
											"end": 17124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16967,
											"end": 16971,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16964,
											"end": 16965,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16960,
											"end": 16972,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16955,
											"end": 16972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16955,
											"end": 16972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16930,
											"end": 17138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 16930,
											"end": 17138,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16930,
											"end": 17138,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 16930,
											"end": 17138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17166,
											"end": 17172,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17157,
											"end": 17164,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17154,
											"end": 17173,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 17151,
											"end": 17330,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17151,
											"end": 17330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 17151,
											"end": 17330,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17224,
											"end": 17233,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17219,
											"end": 17222,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 17215,
											"end": 17234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17209,
											"end": 17235,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17267,
											"end": 17315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 17309,
											"end": 17313,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17301,
											"end": 17307,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 17297,
											"end": 17314,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17286,
											"end": 17295,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17267,
											"end": 17315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 17267,
											"end": 17315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17267,
											"end": 17315,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 17267,
											"end": 17315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17259,
											"end": 17265,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17252,
											"end": 17316,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 17174,
											"end": 17330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17151,
											"end": 17330,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 17151,
											"end": 17330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17376,
											"end": 17377,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17372,
											"end": 17373,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 17364,
											"end": 17370,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 17360,
											"end": 17374,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 17356,
											"end": 17378,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17350,
											"end": 17354,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 17343,
											"end": 17379,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 16778,
											"end": 17389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16778,
											"end": 17389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16778,
											"end": 17389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16741,
											"end": 17628,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 16741,
											"end": 17628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16741,
											"end": 17628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16331,
											"end": 17634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16331,
											"end": 17634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16331,
											"end": 17634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16239,
											"end": 17634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16239,
											"end": 17634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16239,
											"end": 17634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17640,
											"end": 17820,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 17640,
											"end": 17820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17688,
											"end": 17765,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17685,
											"end": 17686,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17678,
											"end": 17766,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17785,
											"end": 17789,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 17782,
											"end": 17783,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17775,
											"end": 17790,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17809,
											"end": 17813,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 17806,
											"end": 17807,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17799,
											"end": 17814,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17826,
											"end": 17928,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 17826,
											"end": 17928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17868,
											"end": 17876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17915,
											"end": 17920,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17912,
											"end": 17913,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17908,
											"end": 17921,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 17887,
											"end": 17921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17887,
											"end": 17921,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17826,
											"end": 17928,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17826,
											"end": 17928,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17826,
											"end": 17928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17826,
											"end": 17928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17934,
											"end": 18782,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 17934,
											"end": 18782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17995,
											"end": 18000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18002,
											"end": 18006,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18026,
											"end": 18032,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18017,
											"end": 18032,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18017,
											"end": 18032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18050,
											"end": 18055,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18041,
											"end": 18055,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18041,
											"end": 18055,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18064,
											"end": 18776,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 18064,
											"end": 18776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18085,
											"end": 18086,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 18075,
											"end": 18083,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18072,
											"end": 18087,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18064,
											"end": 18776,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18064,
											"end": 18776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 18064,
											"end": 18776,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18180,
											"end": 18184,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18175,
											"end": 18178,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18171,
											"end": 18185,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 18165,
											"end": 18169,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18162,
											"end": 18186,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18159,
											"end": 18209,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18159,
											"end": 18209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 18159,
											"end": 18209,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18189,
											"end": 18207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 18189,
											"end": 18207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 18189,
											"end": 18207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18189,
											"end": 18207,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 18189,
											"end": 18207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18159,
											"end": 18209,
											"name": "tag",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 18159,
											"end": 18209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18239,
											"end": 18240,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 18229,
											"end": 18237,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18225,
											"end": 18241,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 18222,
											"end": 18673,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18222,
											"end": 18673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 18222,
											"end": 18673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18654,
											"end": 18658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18647,
											"end": 18652,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18643,
											"end": 18659,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 18634,
											"end": 18659,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18634,
											"end": 18659,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18222,
											"end": 18673,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 18222,
											"end": 18673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18704,
											"end": 18708,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18698,
											"end": 18702,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18694,
											"end": 18709,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 18686,
											"end": 18709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18686,
											"end": 18709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18734,
											"end": 18766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 18757,
											"end": 18765,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18734,
											"end": 18766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 18734,
											"end": 18766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18734,
											"end": 18766,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 18734,
											"end": 18766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18722,
											"end": 18766,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 18722,
											"end": 18766,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18064,
											"end": 18776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 18064,
											"end": 18776,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18064,
											"end": 18776,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 18064,
											"end": 18776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17934,
											"end": 18782,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 17934,
											"end": 18782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17934,
											"end": 18782,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 17934,
											"end": 18782,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17934,
											"end": 18782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17934,
											"end": 18782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17934,
											"end": 18782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17934,
											"end": 18782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18788,
											"end": 19861,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 18788,
											"end": 19861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18842,
											"end": 18847,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19033,
											"end": 19041,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19023,
											"end": 19063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 19023,
											"end": 19063,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19054,
											"end": 19055,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 19045,
											"end": 19055,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19045,
											"end": 19055,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19056,
											"end": 19061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 19056,
											"end": 19061,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19023,
											"end": 19063,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 19023,
											"end": 19063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19082,
											"end": 19086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19072,
											"end": 19108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 19072,
											"end": 19108,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19099,
											"end": 19100,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19090,
											"end": 19100,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19090,
											"end": 19100,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19101,
											"end": 19106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 19101,
											"end": 19106,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19072,
											"end": 19108,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 19072,
											"end": 19108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19168,
											"end": 19172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19216,
											"end": 19217,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 19211,
											"end": 19238,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19211,
											"end": 19238,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 19211,
											"end": 19238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 19211,
											"end": 19238,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19252,
											"end": 19253,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 19247,
											"end": 19438,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19247,
											"end": 19438,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 19247,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 19247,
											"end": 19438,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19161,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 19161,
											"end": 19438,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19211,
											"end": 19238,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 19211,
											"end": 19238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19229,
											"end": 19230,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 19220,
											"end": 19230,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19220,
											"end": 19230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19231,
											"end": 19236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19231,
											"end": 19236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 19231,
											"end": 19236,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19247,
											"end": 19438,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 19247,
											"end": 19438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19292,
											"end": 19295,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 19282,
											"end": 19290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19279,
											"end": 19296,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 19276,
											"end": 19319,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19276,
											"end": 19319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 19276,
											"end": 19319,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19299,
											"end": 19317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 19299,
											"end": 19317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 19299,
											"end": 19317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19299,
											"end": 19317,
											"name": "tag",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 19299,
											"end": 19317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19276,
											"end": 19319,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 19276,
											"end": 19319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19348,
											"end": 19356,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19345,
											"end": 19346,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 19341,
											"end": 19357,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 19332,
											"end": 19357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19332,
											"end": 19357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19383,
											"end": 19386,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19376,
											"end": 19381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19373,
											"end": 19387,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 19370,
											"end": 19410,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19370,
											"end": 19410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 19370,
											"end": 19410,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19390,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 19390,
											"end": 19408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 19390,
											"end": 19408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19390,
											"end": 19408,
											"name": "tag",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 19390,
											"end": 19408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19370,
											"end": 19410,
											"name": "tag",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 19370,
											"end": 19410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19423,
											"end": 19428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19423,
											"end": 19428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 19423,
											"end": 19428,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19161,
											"end": 19438,
											"name": "tag",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 19161,
											"end": 19438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19161,
											"end": 19438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19547,
											"end": 19549,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19537,
											"end": 19545,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19534,
											"end": 19550,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 19528,
											"end": 19531,
											"name": "PUSH",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 19522,
											"end": 19526,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19519,
											"end": 19532,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 19515,
											"end": 19551,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19497,
											"end": 19499,
											"name": "PUSH",
											"source": 7,
											"value": "4E"
										},
										{
											"begin": 19487,
											"end": 19495,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19484,
											"end": 19500,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 19479,
											"end": 19481,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 19473,
											"end": 19477,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19470,
											"end": 19482,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 19466,
											"end": 19501,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19450,
											"end": 19561,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 19447,
											"end": 19693,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19447,
											"end": 19693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 19447,
											"end": 19693,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19603,
											"end": 19611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19597,
											"end": 19601,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19593,
											"end": 19612,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 19584,
											"end": 19612,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19584,
											"end": 19612,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19638,
											"end": 19641,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19631,
											"end": 19636,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19628,
											"end": 19642,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 19625,
											"end": 19665,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19625,
											"end": 19665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 19625,
											"end": 19665,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19645,
											"end": 19663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 19645,
											"end": 19663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 19645,
											"end": 19663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19645,
											"end": 19663,
											"name": "tag",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 19645,
											"end": 19663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19625,
											"end": 19665,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 19625,
											"end": 19665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19678,
											"end": 19683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 19678,
											"end": 19683,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19447,
											"end": 19693,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 19447,
											"end": 19693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19718,
											"end": 19760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 19756,
											"end": 19759,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19746,
											"end": 19754,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19740,
											"end": 19744,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19737,
											"end": 19738,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 19718,
											"end": 19760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 19718,
											"end": 19760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19718,
											"end": 19760,
											"name": "tag",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 19718,
											"end": 19760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19703,
											"end": 19760,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19703,
											"end": 19760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19703,
											"end": 19760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19703,
											"end": 19760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19792,
											"end": 19796,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19787,
											"end": 19790,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19783,
											"end": 19797,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 19776,
											"end": 19781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19773,
											"end": 19798,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 19770,
											"end": 19821,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19770,
											"end": 19821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 19770,
											"end": 19821,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19801,
											"end": 19819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 19801,
											"end": 19819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 19801,
											"end": 19819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19801,
											"end": 19819,
											"name": "tag",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 19801,
											"end": 19819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19770,
											"end": 19821,
											"name": "tag",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 19770,
											"end": 19821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19850,
											"end": 19854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19843,
											"end": 19848,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19839,
											"end": 19855,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 19830,
											"end": 19855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19830,
											"end": 19855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18788,
											"end": 19861,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 18788,
											"end": 19861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18788,
											"end": 19861,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18788,
											"end": 19861,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18788,
											"end": 19861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18788,
											"end": 19861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18788,
											"end": 19861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18788,
											"end": 19861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19867,
											"end": 20148,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 19867,
											"end": 20148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19925,
											"end": 19930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19949,
											"end": 19972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 19967,
											"end": 19971,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19949,
											"end": 19972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 19949,
											"end": 19972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19949,
											"end": 19972,
											"name": "tag",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 19949,
											"end": 19972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19941,
											"end": 19972,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19941,
											"end": 19972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19993,
											"end": 20018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 20009,
											"end": 20017,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19993,
											"end": 20018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 19993,
											"end": 20018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19993,
											"end": 20018,
											"name": "tag",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 19993,
											"end": 20018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19981,
											"end": 20018,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19981,
											"end": 20018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20037,
											"end": 20141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 20074,
											"end": 20140,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20064,
											"end": 20072,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20058,
											"end": 20062,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20037,
											"end": 20141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 20037,
											"end": 20141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20037,
											"end": 20141,
											"name": "tag",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 20037,
											"end": 20141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20028,
											"end": 20141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20028,
											"end": 20141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19867,
											"end": 20148,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19867,
											"end": 20148,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19867,
											"end": 20148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19867,
											"end": 20148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19867,
											"end": 20148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20154,
											"end": 20564,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 20154,
											"end": 20564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20194,
											"end": 20201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20217,
											"end": 20237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 20235,
											"end": 20236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20217,
											"end": 20237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 20217,
											"end": 20237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20217,
											"end": 20237,
											"name": "tag",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 20217,
											"end": 20237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20212,
											"end": 20237,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20212,
											"end": 20237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20251,
											"end": 20271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 20269,
											"end": 20270,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20251,
											"end": 20271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 20251,
											"end": 20271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20251,
											"end": 20271,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 20251,
											"end": 20271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20246,
											"end": 20271,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20246,
											"end": 20271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20306,
											"end": 20307,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20303,
											"end": 20304,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20299,
											"end": 20308,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 20328,
											"end": 20358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 20346,
											"end": 20357,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20328,
											"end": 20358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 20328,
											"end": 20358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20328,
											"end": 20358,
											"name": "tag",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 20328,
											"end": 20358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20317,
											"end": 20358,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20317,
											"end": 20358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20507,
											"end": 20508,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20498,
											"end": 20505,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20494,
											"end": 20509,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 20491,
											"end": 20492,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20488,
											"end": 20510,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 20468,
											"end": 20469,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20461,
											"end": 20470,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20441,
											"end": 20524,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 20418,
											"end": 20557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 20418,
											"end": 20557,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20537,
											"end": 20555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 20537,
											"end": 20555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 20537,
											"end": 20555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20537,
											"end": 20555,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 20537,
											"end": 20555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20418,
											"end": 20557,
											"name": "tag",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 20418,
											"end": 20557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20202,
											"end": 20564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20154,
											"end": 20564,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20154,
											"end": 20564,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20154,
											"end": 20564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20154,
											"end": 20564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20154,
											"end": 20564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20570,
											"end": 20750,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 20570,
											"end": 20750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20618,
											"end": 20695,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20615,
											"end": 20616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20608,
											"end": 20696,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20715,
											"end": 20719,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 20712,
											"end": 20713,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 20705,
											"end": 20720,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20739,
											"end": 20743,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 20736,
											"end": 20737,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20729,
											"end": 20744,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 20756,
											"end": 20941,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 20756,
											"end": 20941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20796,
											"end": 20797,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20813,
											"end": 20833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 20831,
											"end": 20832,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20813,
											"end": 20833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 20813,
											"end": 20833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20813,
											"end": 20833,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 20813,
											"end": 20833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20808,
											"end": 20833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20808,
											"end": 20833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20847,
											"end": 20867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 20865,
											"end": 20866,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20847,
											"end": 20867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 20847,
											"end": 20867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20847,
											"end": 20867,
											"name": "tag",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 20847,
											"end": 20867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20842,
											"end": 20867,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20842,
											"end": 20867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20886,
											"end": 20887,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20876,
											"end": 20911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 20876,
											"end": 20911,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20891,
											"end": 20909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 20891,
											"end": 20909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 20891,
											"end": 20909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20891,
											"end": 20909,
											"name": "tag",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 20891,
											"end": 20909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20876,
											"end": 20911,
											"name": "tag",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 20876,
											"end": 20911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20933,
											"end": 20934,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20930,
											"end": 20931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20926,
											"end": 20935,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 20921,
											"end": 20935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20921,
											"end": 20935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20756,
											"end": 20941,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20756,
											"end": 20941,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20756,
											"end": 20941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20756,
											"end": 20941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20756,
											"end": 20941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20947,
											"end": 21122,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 20947,
											"end": 21122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21087,
											"end": 21114,
											"name": "PUSH",
											"source": 7,
											"value": "496E636F72726563742045544820616D6F756E742073656E7400000000000000"
										},
										{
											"begin": 21083,
											"end": 21084,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21075,
											"end": 21081,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21071,
											"end": 21085,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21064,
											"end": 21115,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20947,
											"end": 21122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20947,
											"end": 21122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21128,
											"end": 21494,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 21128,
											"end": 21494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21270,
											"end": 21273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21291,
											"end": 21358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 21355,
											"end": 21357,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 21350,
											"end": 21353,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21291,
											"end": 21358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 21291,
											"end": 21358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21291,
											"end": 21358,
											"name": "tag",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 21291,
											"end": 21358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21284,
											"end": 21358,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21284,
											"end": 21358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21367,
											"end": 21460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 21456,
											"end": 21459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21367,
											"end": 21460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 21367,
											"end": 21460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21367,
											"end": 21460,
											"name": "tag",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 21367,
											"end": 21460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21485,
											"end": 21487,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21480,
											"end": 21483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21476,
											"end": 21488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21469,
											"end": 21488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21469,
											"end": 21488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21128,
											"end": 21494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21128,
											"end": 21494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21128,
											"end": 21494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21128,
											"end": 21494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21500,
											"end": 21919,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 21500,
											"end": 21919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21666,
											"end": 21670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21704,
											"end": 21706,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21693,
											"end": 21702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21689,
											"end": 21707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21681,
											"end": 21707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21681,
											"end": 21707,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21753,
											"end": 21762,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21747,
											"end": 21751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21743,
											"end": 21763,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 21739,
											"end": 21740,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21728,
											"end": 21737,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21724,
											"end": 21741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21717,
											"end": 21764,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21781,
											"end": 21912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 21907,
											"end": 21911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21781,
											"end": 21912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 21781,
											"end": 21912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21781,
											"end": 21912,
											"name": "tag",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 21781,
											"end": 21912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21773,
											"end": 21912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21773,
											"end": 21912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21500,
											"end": 21919,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21500,
											"end": 21919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21500,
											"end": 21919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21500,
											"end": 21919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21925,
											"end": 22098,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 21925,
											"end": 22098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22065,
											"end": 22090,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E74204E422062616C616E6365000000000000000000"
										},
										{
											"begin": 22061,
											"end": 22062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22053,
											"end": 22059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22049,
											"end": 22063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22042,
											"end": 22091,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21925,
											"end": 22098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21925,
											"end": 22098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22104,
											"end": 22470,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 22104,
											"end": 22470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22246,
											"end": 22249,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22267,
											"end": 22334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 22331,
											"end": 22333,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 22326,
											"end": 22329,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22267,
											"end": 22334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 22267,
											"end": 22334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22267,
											"end": 22334,
											"name": "tag",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 22267,
											"end": 22334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22260,
											"end": 22334,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22260,
											"end": 22334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22343,
											"end": 22436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 22432,
											"end": 22435,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22343,
											"end": 22436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 22343,
											"end": 22436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22343,
											"end": 22436,
											"name": "tag",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 22343,
											"end": 22436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22461,
											"end": 22463,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22456,
											"end": 22459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22452,
											"end": 22464,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22445,
											"end": 22464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22445,
											"end": 22464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22104,
											"end": 22470,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22104,
											"end": 22470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22104,
											"end": 22470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22104,
											"end": 22470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22476,
											"end": 22895,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 22476,
											"end": 22895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22642,
											"end": 22646,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22680,
											"end": 22682,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22669,
											"end": 22678,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22665,
											"end": 22683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22657,
											"end": 22683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22657,
											"end": 22683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22729,
											"end": 22738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22723,
											"end": 22727,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22719,
											"end": 22739,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 22715,
											"end": 22716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22704,
											"end": 22713,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22700,
											"end": 22717,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22693,
											"end": 22740,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22757,
											"end": 22888,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 22883,
											"end": 22887,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22757,
											"end": 22888,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 22757,
											"end": 22888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22757,
											"end": 22888,
											"name": "tag",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 22757,
											"end": 22888,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22749,
											"end": 22888,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22749,
											"end": 22888,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22476,
											"end": 22895,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22476,
											"end": 22895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22476,
											"end": 22895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22476,
											"end": 22895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22901,
											"end": 23343,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 22901,
											"end": 23343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23050,
											"end": 23054,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23088,
											"end": 23090,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 23077,
											"end": 23086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23073,
											"end": 23091,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23065,
											"end": 23091,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23065,
											"end": 23091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23101,
											"end": 23172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 23169,
											"end": 23170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23158,
											"end": 23167,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23154,
											"end": 23171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23145,
											"end": 23151,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 23101,
											"end": 23172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 23101,
											"end": 23172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23101,
											"end": 23172,
											"name": "tag",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 23101,
											"end": 23172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23182,
											"end": 23254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 23250,
											"end": 23252,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23239,
											"end": 23248,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23235,
											"end": 23253,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23226,
											"end": 23232,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 23182,
											"end": 23254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 23182,
											"end": 23254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23182,
											"end": 23254,
											"name": "tag",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 23182,
											"end": 23254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23264,
											"end": 23336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 23332,
											"end": 23334,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 23321,
											"end": 23330,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23317,
											"end": 23335,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23308,
											"end": 23314,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 23264,
											"end": 23336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 23264,
											"end": 23336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23264,
											"end": 23336,
											"name": "tag",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 23264,
											"end": 23336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22901,
											"end": 23343,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 22901,
											"end": 23343,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 22901,
											"end": 23343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22901,
											"end": 23343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22901,
											"end": 23343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22901,
											"end": 23343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22901,
											"end": 23343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23349,
											"end": 23540,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 23349,
											"end": 23540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23389,
											"end": 23392,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23408,
											"end": 23428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 23426,
											"end": 23427,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23408,
											"end": 23428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 23408,
											"end": 23428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23408,
											"end": 23428,
											"name": "tag",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 23408,
											"end": 23428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23403,
											"end": 23428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23403,
											"end": 23428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23442,
											"end": 23462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 23460,
											"end": 23461,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23442,
											"end": 23462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 23442,
											"end": 23462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23442,
											"end": 23462,
											"name": "tag",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 23442,
											"end": 23462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23437,
											"end": 23462,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 23437,
											"end": 23462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23485,
											"end": 23486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23482,
											"end": 23483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23478,
											"end": 23487,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23471,
											"end": 23487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23471,
											"end": 23487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23506,
											"end": 23509,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 23503,
											"end": 23504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23500,
											"end": 23510,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 23497,
											"end": 23533,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 23497,
											"end": 23533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 23497,
											"end": 23533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 23513,
											"end": 23531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 23513,
											"end": 23531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 23513,
											"end": 23531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23513,
											"end": 23531,
											"name": "tag",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 23513,
											"end": 23531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23497,
											"end": 23533,
											"name": "tag",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 23497,
											"end": 23533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23349,
											"end": 23540,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 23349,
											"end": 23540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23349,
											"end": 23540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23349,
											"end": 23540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23349,
											"end": 23540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"FinalProject2/GameCoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buy(uint256)": "d96a094a",
							"buyRate()": "fc37987b",
							"decimals()": "313ce567",
							"getUserInfo(address)": "6386c1c7",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"registerUser(string,string,string)": "d637dcfa",
							"renounceOwnership()": "715018a6",
							"sell(uint256)": "e4849b32",
							"sellRate()": "6217229b",
							"send(address,uint256)": "d0679d34",
							"sendToOwner(uint256)": "cb797836",
							"setRates(uint256,uint256)": "ac6af280",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gcAmount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gcAmount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gcAmount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sendToOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sellRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_buyRate\",\"type\":\"uint256\"}],\"name\":\"setRates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"FinalProject2/GameCoin.sol\":\"GameCoin\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"FinalProject2/GameCoin.sol\":{\"keccak256\":\"0x1cc541d3ed520975dedbb27c41fed1255fca42993ec2c593fa5f3b396d9bed89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f40110ba35384fe25ca776e8399c4b6af248c9bf3f8700d2cfdcbcb7036f65e\",\"dweb:/ipfs/QmdCRWRxt85c9rghR8SC8XSxFnyQFXFfBxHHMkHknGrKPm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "FinalProject2/GameCoin.sol:GameCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "FinalProject2/GameCoin.sol:GameCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "FinalProject2/GameCoin.sol:GameCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "FinalProject2/GameCoin.sol:GameCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "FinalProject2/GameCoin.sol:GameCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "FinalProject2/GameCoin.sol:GameCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 944,
								"contract": "FinalProject2/GameCoin.sol:GameCoin",
								"label": "sellRate",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 947,
								"contract": "FinalProject2/GameCoin.sol:GameCoin",
								"label": "buyRate",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 952,
								"contract": "FinalProject2/GameCoin.sol:GameCoin",
								"label": "users",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_struct(User)959_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(User)959_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct GameCoin.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)959_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(User)959_storage": {
								"encoding": "inplace",
								"label": "struct GameCoin.User",
								"members": [
									{
										"astId": 954,
										"contract": "FinalProject2/GameCoin.sol:GameCoin",
										"label": "username",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 956,
										"contract": "FinalProject2/GameCoin.sol:GameCoin",
										"label": "email",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 958,
										"contract": "FinalProject2/GameCoin.sol:GameCoin",
										"label": "bio",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"FinalProject2/GameCoin.sol": {
				"ast": {
					"absolutePath": "FinalProject2/GameCoin.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"GameCoin": [
							1181
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1182,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1182,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1182,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"189:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "189:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "189:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"196:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "196:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "196:7:6"
								}
							],
							"canonicalName": "GameCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1181,
							"linearizedBaseContracts": [
								1181,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "GameCoin",
							"nameLocation": "177:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "6217229b",
									"id": 944,
									"mutability": "mutable",
									"name": "sellRate",
									"nameLocation": "225:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "210:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 942,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 943,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "236:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc37987b",
									"id": 947,
									"mutability": "mutable",
									"name": "buyRate",
									"nameLocation": "288:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "273:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 945,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "36",
										"id": 946,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "298:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 952,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "372:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1181,
									"src": "339:38:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$959_storage_$",
										"typeString": "mapping(address => struct GameCoin.User)"
									},
									"typeName": {
										"id": 951,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 948,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "347:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "339:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$959_storage_$",
											"typeString": "mapping(address => struct GameCoin.User)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 950,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 949,
												"name": "User",
												"nameLocations": [
													"358:4:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 959,
												"src": "358:4:6"
											},
											"referencedDeclaration": 959,
											"src": "358:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$959_storage_ptr",
												"typeString": "struct GameCoin.User"
											}
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "GameCoin.User",
									"id": 959,
									"members": [
										{
											"constant": false,
											"id": 954,
											"mutability": "mutable",
											"name": "username",
											"nameLocation": "413:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 959,
											"src": "406:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 953,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "406:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 956,
											"mutability": "mutable",
											"name": "email",
											"nameLocation": "438:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 959,
											"src": "431:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 955,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "431:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 958,
											"mutability": "mutable",
											"name": "bio",
											"nameLocation": "460:3:6",
											"nodeType": "VariableDeclaration",
											"scope": 959,
											"src": "453:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 957,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "453:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "391:4:6",
									"nodeType": "StructDefinition",
									"scope": 1181,
									"src": "384:86:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "541:80:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 971,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "557:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "561:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "557:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "569:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "576:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 975,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "580:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "580:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "576:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "569:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 970,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "551:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "551:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "551:40:6"
											}
										]
									},
									"id": 982,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4e616d617a62656b277320546f6b656e",
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "496:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2638e40e045aaaec1e12898327dfac3c6a280c5ea30a262420b3531b04d276b7",
														"typeString": "literal_string \"Namazbek's Token\""
													},
													"value": "Namazbek's Token"
												},
												{
													"hexValue": "4e42",
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "516:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2be87c6dcdaa3b04048aaaf034b00d6a394b08b49c99b41315a5fbe7dfa6eabe",
														"typeString": "literal_string \"NB\""
													},
													"value": "NB"
												}
											],
											"id": 964,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 961,
												"name": "ERC20",
												"nameLocations": [
													"490:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "490:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "490:31:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 966,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "530:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "534:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "530:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 968,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 965,
												"name": "Ownable",
												"nameLocations": [
													"522:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "522:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "522:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "487:2:6"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:0:6"
									},
									"scope": 1181,
									"src": "476:145:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "720:207:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 994,
																			"name": "username",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 984,
																			"src": "744:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "738:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 992,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "738:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "738:15:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "754:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "738:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "763:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "738:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "557365726e616d65206d757374206e6f7420626520656d707479",
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "766:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9",
																"typeString": "literal_string \"Username must not be empty\""
															},
															"value": "Username must not be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7fe086f58aab617572f5a8000915378f51ae3bbb8a7c46e238f0f1a0e91739f9",
																"typeString": "literal_string \"Username must not be empty\""
															}
														],
														"id": 991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "730:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "730:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1005,
																			"name": "email",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 986,
																			"src": "819:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "813:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1003,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "813:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "813:12:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "826:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "813:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "835:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "813:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d61696c206d757374206e6f7420626520656d707479",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "838:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2",
																"typeString": "literal_string \"Email must not be empty\""
															},
															"value": "Email must not be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb5d2621cd019aebc07c17d504b96d37bd9f5ecec2734cfb5fd6abfd60478fa2",
																"typeString": "literal_string \"Email must not be empty\""
															}
														],
														"id": 1002,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "805:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "805:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "805:59:6"
											},
											{
												"expression": {
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1013,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "874:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$959_storage_$",
																"typeString": "mapping(address => struct GameCoin.User storage ref)"
															}
														},
														"id": 1016,
														"indexExpression": {
															"expression": {
																"id": 1014,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "880:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "884:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "880:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "874:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$959_storage",
															"typeString": "struct GameCoin.User storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1018,
																"name": "username",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "899:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 1019,
																"name": "email",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "909:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 1020,
																"name": "bio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "916:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 1017,
															"name": "User",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "894:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_User_$959_storage_ptr_$",
																"typeString": "type(struct GameCoin.User storage pointer)"
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "894:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$959_memory_ptr",
															"typeString": "struct GameCoin.User memory"
														}
													},
													"src": "874:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$959_storage",
														"typeString": "struct GameCoin.User storage ref"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "874:46:6"
											}
										]
									},
									"functionSelector": "d637dcfa",
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerUser",
									"nameLocation": "636:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "username",
												"nameLocation": "663:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "649:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 983,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "649:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "email",
												"nameLocation": "687:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "673:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 985,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "673:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "bio",
												"nameLocation": "708:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "694:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 987,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "694:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:64:6"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "720:0:6"
									},
									"scope": 1181,
									"src": "627:300:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "1037:104:6",
										"statements": [
											{
												"assignments": [
													1038
												],
												"declarations": [
													{
														"constant": false,
														"id": 1038,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "1059:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1051,
														"src": "1047:16:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$959_memory_ptr",
															"typeString": "struct GameCoin.User"
														},
														"typeName": {
															"id": 1037,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1036,
																"name": "User",
																"nameLocations": [
																	"1047:4:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 959,
																"src": "1047:4:6"
															},
															"referencedDeclaration": 959,
															"src": "1047:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$959_storage_ptr",
																"typeString": "struct GameCoin.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1042,
												"initialValue": {
													"baseExpression": {
														"id": 1039,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "1066:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$959_storage_$",
															"typeString": "mapping(address => struct GameCoin.User storage ref)"
														}
													},
													"id": 1041,
													"indexExpression": {
														"id": 1040,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "1072:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1066:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$959_storage",
														"typeString": "struct GameCoin.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1047:33:6"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1043,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "1098:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$959_memory_ptr",
																	"typeString": "struct GameCoin.User memory"
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1103:8:6",
															"memberName": "username",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "1098:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1045,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "1113:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$959_memory_ptr",
																	"typeString": "struct GameCoin.User memory"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1118:5:6",
															"memberName": "email",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 956,
															"src": "1113:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1047,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "1125:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$959_memory_ptr",
																	"typeString": "struct GameCoin.User memory"
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1130:3:6",
															"memberName": "bio",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 958,
															"src": "1125:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"id": 1049,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1097:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$",
														"typeString": "tuple(string memory,string memory,string memory)"
													}
												},
												"functionReturnParameters": 1035,
												"id": 1050,
												"nodeType": "Return",
												"src": "1090:44:6"
											}
										]
									},
									"functionSelector": "6386c1c7",
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserInfo",
									"nameLocation": "942:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "962:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "954:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "954:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "953:17:6"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "992:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1029,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "992:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1007:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1031,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1007:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1022:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1033,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1022:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "991:45:6"
									},
									"scope": 1181,
									"src": "933:208:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "1193:219:6",
										"statements": [
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "requiredETH",
														"nameLocation": "1211:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1083,
														"src": "1203:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1057,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1203:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1059,
																	"name": "gcAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "1226:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1060,
																	"name": "sellRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "1237:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1226:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1062,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1225:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1249:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1064,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "1253:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1253:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "1249:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1225:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1203:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1070,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1281:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1285:5:6",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1281:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1072,
																"name": "requiredETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1058,
																"src": "1294:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1281:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f72726563742045544820616d6f756e742073656e74",
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1307:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186",
																"typeString": "literal_string \"Incorrect ETH amount sent\""
															},
															"value": "Incorrect ETH amount sent"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f92caa8d48493700a00d239733fbcffec894e11cf5a0ae8c3607c25795e1186",
																"typeString": "literal_string \"Incorrect ETH amount sent\""
															}
														],
														"id": 1069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1273:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1273:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "1273:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1078,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1351:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1355:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1351:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "gcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "1363:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1077,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1345:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1345:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "1345:27:6"
											}
										]
									},
									"functionSelector": "d96a094a",
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "1156:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "gcAmount",
												"nameLocation": "1168:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1160:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1159:18:6"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1193:0:6"
									},
									"scope": 1181,
									"src": "1147:265:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "1457:239:6",
										"statements": [
											{
												"assignments": [
													1090
												],
												"declarations": [
													{
														"constant": false,
														"id": 1090,
														"mutability": "mutable",
														"name": "ethAmount",
														"nameLocation": "1475:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1126,
														"src": "1467:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1089,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1467:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1100,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1091,
																	"name": "gcAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "1488:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1092,
																	"name": "buyRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 947,
																	"src": "1499:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1488:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1094,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1487:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1510:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1096,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "1514:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1514:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "1510:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1487:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1467:57:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1103,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1552:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1556:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1552:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1102,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1542:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1542:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1106,
																"name": "gcAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "1567:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1542:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74204e422062616c616e6365",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1577:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca",
																"typeString": "literal_string \"Insufficient NB balance\""
															},
															"value": "Insufficient NB balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47d665acccfb3503a63c26fd3ec45134dad9fef2db72e0553e3ee59c601635ca",
																"typeString": "literal_string \"Insufficient NB balance\""
															}
														],
														"id": 1101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1534:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1534:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "1534:69:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1112,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1619:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1623:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1619:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1114,
															"name": "gcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "1631:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1111,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1613:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1613:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "1613:27:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1123,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "1679:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1119,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1658:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1662:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1658:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1650:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1117,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1650:8:6",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1650:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1670:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1650:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1650:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "1650:39:6"
											}
										]
									},
									"functionSelector": "e4849b32",
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sell",
									"nameLocation": "1427:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "gcAmount",
												"nameLocation": "1440:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "1432:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:18:6"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1457:0:6"
									},
									"scope": 1181,
									"src": "1418:278:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "1753:52:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1135,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1773:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1777:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1773:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "1785:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1138,
															"name": "gcAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "1789:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1134,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1763:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1763:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "1763:35:6"
											}
										]
									},
									"functionSelector": "d0679d34",
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "1711:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1724:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1716:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "gcAmount",
												"nameLocation": "1736:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1728:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1715:30:6"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1753:0:6"
									},
									"scope": 1181,
									"src": "1702:103:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "1865:55:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1150,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1885:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1889:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1885:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1152,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1897:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1897:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1154,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "1906:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1149,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1875:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1875:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "1875:38:6"
											}
										]
									},
									"functionSelector": "cb797836",
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1147,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1146,
												"name": "onlyOwner",
												"nameLocations": [
													"1855:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1855:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1855:9:6"
										}
									],
									"name": "sendToOwner",
									"nameLocation": "1820:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1840:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "1832:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:16:6"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:0:6"
									},
									"scope": 1181,
									"src": "1811:109:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "1998:65:6",
										"statements": [
											{
												"expression": {
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1167,
														"name": "sellRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2008:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1168,
														"name": "_sellRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "2019:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2008:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "2008:20:6"
											},
											{
												"expression": {
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1171,
														"name": "buyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "2038:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1172,
														"name": "_buyRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "2048:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2038:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "2038:18:6"
											}
										]
									},
									"functionSelector": "ac6af280",
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1165,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1164,
												"name": "onlyOwner",
												"nameLocations": [
													"1988:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1988:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1988:9:6"
										}
									],
									"name": "setRates",
									"nameLocation": "1935:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "_sellRate",
												"nameLocation": "1952:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "1944:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "_buyRate",
												"nameLocation": "1971:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "1963:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:37:6"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1998:0:6"
									},
									"scope": 1181,
									"src": "1926:137:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "2096:2:6",
										"statements": []
									},
									"id": 1180,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:2:6"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2096:0:6"
									},
									"scope": 1181,
									"src": "2069:29:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1182,
							"src": "168:1932:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "32:2069:6"
				},
				"id": 6
			}
		}
	}
}